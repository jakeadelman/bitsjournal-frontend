{"version":3,"file":"static/development/pages/dashboard.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/App.js","webpack:///./components/Dashboard/AddTerm.js","webpack:///./components/Dashboard/DashInitialTerms.js","webpack:///./components/Dashboard/DashMain.js","webpack:///./components/Header2.js","webpack:///./pages/dashboard.js","webpack:///external \"dateformat\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"reactstrap\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default ({ children }) => (\n  <main>\n    {children}\n    <style jsx global>{`\n      * {\n        font-family: Menlo, Monaco, \"Lucida Console\", \"Liberation Mono\",\n          \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Courier New\",\n          monospace, serif;\n      }\n      body {\n        margin: 0;\n        padding: 25px 50px;\n      }\n      a {\n        color: #22bad9;\n      }\n      p {\n        font-size: 14px;\n        line-height: 24px;\n      }\n      article {\n        margin: 0 auto;\n        max-width: 650px;\n      }\n      button {\n        align-items: center;\n        background-color: #22bad9;\n        border: 0;\n        color: white;\n        display: flex;\n        padding: 5px 7px;\n      }\n      button:active {\n        background-color: #1b9db7;\n        transition: background-color 0.3s;\n      }\n      button:focus {\n        outline: none;\n      }\n    `}</style>\n  </main>\n);\n","import React, { useState, useEffect } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n// import Popover from \"./Popover\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\nimport Router from \"next/router\";\n\nexport default function AddTerm(props) {\n  const [clicked, setClicked] = useState(false);\n  const [popover, setPopover] = useState(false);\n\n  function toggle() {\n    if (!popover) {\n      setPopover(true);\n    } else {\n      setPopover(false);\n    }\n  }\n\n  return (\n    <div>\n      <button\n        id=\"Popover1\"\n        onClick={() => {\n          setClicked(true);\n          toggle();\n        }}\n      >\n        add term\n      </button>\n      <Popover placement=\"bottom\" isOpen={popover} target=\"Popover1\">\n        <PopoverHeader>Add Term</PopoverHeader>\n        <PopoverBody>\n          <PopBody />\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n\nconst PopBody = () => {\n  const [newTerm, setNewTerm] = useState();\n  const [clicked, setClicked] = useState(false);\n  console.log(newTerm);\n\n  function handleClick() {\n    console.log(\"was clicked\");\n    setClicked(true);\n    // return <AddTodo term={newTerm} />;\n  }\n\n  if (!!clicked) {\n    return (\n      <Mutation mutation={addSt}>\n        {(addSearchTerm, { data }) => {\n          setClicked(false);\n          addSearchTerm({ variables: { searchterm: newTerm } });\n        }}\n      </Mutation>\n    );\n  }\n\n  return (\n    <div>\n      <AddTodo />\n    </div>\n  );\n};\n\nexport const addSt = gql`\n  mutation AddSearchTerm($searchterm: String!) {\n    addSearchTerm(searchterm: $searchterm)\n  }\n`;\n\nconst AddTodo = () => {\n  let input;\n\n  return (\n    <Mutation mutation={addSt}>\n      {(addSearchTerm, { data }) => (\n        <div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              addSearchTerm({ variables: { searchterm: input.value } });\n              input.value = \"\";\n              location.reload(true);\n            }}\n          >\n            <input\n              ref={node => {\n                input = node;\n              }}\n            />\n            <button className=\"add-button\" type=\"submit\">\n              Add\n            </button>\n          </form>\n          <style jsx>\n            {`\n              .add-button {\n                margin-top: 5px;\n              }\n            `}\n          </style>\n        </div>\n      )}\n    </Mutation>\n  );\n};\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DashMain from \"./DashMain\";\nimport App from \"../App\";\nimport Header from \"../Header2\";\nimport AddTerm from \"./AddTerm\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n// import SentimentModule from \"./SentimentModule\";\n\nclass DashInitialTerms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTerms: []\n    };\n    this.toggleTerm = this.toggleTerm.bind(this);\n    this.mapTerms = this.mapTerms.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  toggleTerm(term) {\n    this.setState({ term: term });\n    console.log(this.state);\n  }\n\n  mapTerms(allterms) {\n    allterms.map(term => {\n      this.state.allTerms.push(term.term);\n    });\n  }\n\n  handleClick(e) {\n    // console.log(e.target.value);\n    this.setState({ term: e.target.value });\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n      <Query query={fetchTweetsQuery}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n\n          if (!this.state.allTerms[0]) {\n            this.toggleTerm(data.fetchTerms[0].term);\n            this.mapTerms(data.fetchTerms);\n            return <div>loading</div>;\n          }\n          return (\n            <div className=\"dash-main-container\">\n              <div className=\"pagination-list\">\n                <ul>\n                  {this.state.allTerms.map(term => {\n                    return (\n                      <li className=\"pagination-list-item\">\n                        <button\n                          value={term}\n                          onClick={this.handleClick}\n                          className=\"pagination-button\"\n                        >\n                          {term}\n                        </button>\n                      </li>\n                    );\n                  })}\n                  <li className=\"pagination-list-item\">\n                    <button className=\"pagination-button\">\n                      <AddTerm />\n                    </button>\n                  </li>\n                </ul>\n              </div>\n\n              <DashMain initialTerm={this.state.term} />\n              <style jsx>\n                {`\n                  .dash-main-table {\n                  }\n                  .pagination-list-item {\n                    float: left;\n                    list-style-type: none;\n                    margin: 2px;\n                  }\n                  .pagination-button {\n                    border-radius: 2px;\n                  }\n                  .dash-main-container {\n                    display: block;\n                    max-width: 50%;\n                    margin: 3em auto 3em auto;\n                  }\n                  .dash-main-table {\n                    display: block;\n                  }\n                  .pagination-list {\n                    display: inline-block;\n                  }\n                  .outer-sent {\n                    margin: 0;\n                  }\n\n                  @media only screen and (max-width: 960px) {\n                    .dash-main-container {\n                      max-width: 85%;\n                    }\n                  }\n                `}\n              </style>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\n// .outer-sent {\n//   display: inline-block;\n//   float: left;\n// }\n\nexport const fetchTweetsQuery = gql`\n  query fetchTerms {\n    fetchTerms {\n      id\n      term\n    }\n  }\n`;\n\nexport default () => (\n  <App>\n    <Header />\n    <DashInitialTerms />\n  </App>\n);\n","import React, { setState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { withRouter } from \"next/router\";\n// import SentimentModule from \"./SentimentModule\";\nconst dateformat = require(\"dateformat\");\n\nexport default class DashMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { term: this.props.initialTerm };\n  }\n  componentDidMount() {\n    // console.log(this.props.initialTerm);\n    // console.log(this.props.initialTerm);\n    // this.setState({ term: this.props.initialTerm });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps.initialTerm);\n    if (nextProps.initialTerm !== this.state.term) {\n      this.setState({ term: nextProps.initialTerm });\n    }\n  }\n\n  render() {\n    if (!this.state.term) {\n      return <div>loading</div>;\n    } else {\n      const fetchTweetsVars = {\n        query: this.state.term\n      };\n      console.log(fetchTweetsVars);\n      return (\n        <Query query={fetchTweetsQuery} variables={fetchTweetsVars}>\n          {({ loading, error, data }) => {\n            if (error)\n              return (\n                <div>\n                  no data loaded.. there may have been an error please refresh\n                  the page\n                </div>\n              );\n            if (loading) return <div>Loading</div>;\n            console.log(data.getDailyTweet);\n            let pos =\n              (data.getDailyTweet.positive / data.getDailyTweet.total) * 100;\n            let neg =\n              (data.getDailyTweet.negative / data.getDailyTweet.total) * 100;\n            let trans = 140 - pos;\n            console.log(pos, neg);\n\n            return (\n              <div className=\"dash-main-table\">\n                <div>\n                  <table>\n                    <thread>\n                      <tr className=\"top-row\">\n                        <th className=\"tr-heading\">\n                          query: {this.props.initialTerm}\n                        </th>\n                        <th className=\"bar-heading tr-heading\">\n                          <svg\n                            class=\"chart\"\n                            width=\"450\"\n                            height=\"40\"\n                            aria-labelledby=\"title desc\"\n                            role=\"img\"\n                          >\n                            <g class=\"bar\" transform=\"translate(140,4)\">\n                              <rect width={neg} height=\"19\" className=\"rect1\" />\n                              <text\n                                x={neg + 5}\n                                y=\"9.5\"\n                                dy=\".35em\"\n                                className=\"texto\"\n                              >\n                                {parseInt(neg)}%\n                              </text>\n                              <text\n                                x=\"130\"\n                                y=\"9.5\"\n                                dy=\".35em\"\n                                className=\"texto\"\n                              >\n                                24 hour sentiment\n                              </text>\n                            </g>\n                            <g class=\"bar2\" transform={`translate(${trans},4)`}>\n                              <rect width={pos} height=\"19\" className=\"rect2\" />\n\n                              <text\n                                x=\"-35\"\n                                y=\"9.5\"\n                                dy=\".35em\"\n                                className=\"texto\"\n                              >\n                                {parseInt(pos)}%\n                              </text>\n                            </g>\n                          </svg>\n                        </th>\n                      </tr>\n                    </thread>\n                    <tbody>\n                      <div>\n                        {data.fetchTweets.map(tweet => (\n                          <tr className={`data`}>\n                            <th\n                              scope=\"row\"\n                              className={`hdata-${tweet.polarity}`}\n                            >\n                              {dateformat(tweet.timestamp, \"shortTime\")}\n                            </th>\n                            <td className={`tdata-${tweet.polarity}`}>\n                              {tweet.text}\n                            </td>\n                          </tr>\n                        ))}\n                      </div>\n                    </tbody>\n                  </table>\n                  <style jsx>\n                    {`\n                      .dash-main-table {\n                        max-width: 50%;\n                        display: block;\n                        margin: auto;\n                      }\n                      table {\n                        table-layout: fixed;\n                        width: 100% !important;\n                      }\n                      .hdata-1 {\n                        background-color: rgba(127, 209, 185, 0.35);\n                      }\n                      .hdata-0 {\n                        background-color: rgba(127, 209, 185, 0.35);\n                      }\n                      .data {\n                        word-wrap: break-word;\n                      }\n                      .tdata-1 {\n                        background-color: rgba(127, 209, 185, 0.44);\n                      }\n                      .tdata-0 {\n                        background-color: rgba(247, 175, 157, 0.44);\n                      }\n                      td {\n                        word-break: break-all;\n                        margin: 10px;\n                        padding: 10px;\n                        border-radius: 10px;\n                      }\n                      th {\n                        margin: 10px;\n                        min-width: 5em;\n                        padding: 0.2em;\n\n                        border-radius: 10px;\n                      }\n                      tr {\n                        margin: 10px;\n                        padding: 5px;\n                      }\n                      .tr-heading {\n                        border: none;\n                        border-radius: 5px;\n                        min-width: 5em;\n                        padding: 0.4em;\n                        align-items: center;\n                        background-color: #26c2dd;\n                        color: white;\n                      }\n                      .texto {\n                        fill: white;\n                      }\n                      .bar-heading {\n                        margin-left: auto;\n                        margin-right: 0;\n                        overflow: overlay;\n                      }\n                      .rect1 {\n                        fill: #f7af9d;\n                      }\n                      .rect2 {\n                        fill: #7fd1b9;\n                      }\n                      tr {\n                        margin: 10px;\n                      }\n\n                      tr.top-row {\n                        display: flex;\n                      }\n                    `}\n                  </style>\n                </div>\n              </div>\n            );\n          }}\n        </Query>\n      );\n    }\n  }\n}\n\nexport const fetchTweetsQuery = gql`\n  query fetchTweets($query: String!) {\n    fetchTweets(query: $query) {\n      id\n      timestamp\n      tweetId\n      text\n      polarity\n    }\n\n    getDailyTweet(query: $query) {\n      day\n      negative\n      positive\n      total\n    }\n  }\n`;\n","import Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n\nconst Header = ({ router: { pathname } }) => (\n  <header>\n    <Link prefetch href=\"/\">\n      <a className={pathname === \"/\" ? \"is-active\" : \"\"}>Home</a>\n    </Link>\n    <Link prefetch href=\"/about\">\n      <a className={pathname === \"/about\" ? \"is-active\" : \"\"}>About</a>\n    </Link>\n    <Link prefetch href=\"/login\">\n      <a className={pathname === \"/login\" ? \"is-active\" : \"\"}>Login</a>\n    </Link>\n    <style jsx>{`\n      header {\n        margin-bottom: 25px;\n      }\n      a {\n        font-size: 14px;\n        margin-right: 15px;\n        text-decoration: none;\n        color: #22bad9;\n      }\n      .is-active {\n        text-decoration: underline;\n      }\n    `}</style>\n  </header>\n);\n\nexport default withRouter(Header);\n","import React from \"react\";\n// import DashMain from \"../components/DashMain\";\n// import FacebookLogin from \"../components/FacebookLogin\";\nimport DashInitialTerms from \"../components/Dashboard/DashInitialTerms\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <DashInitialTerms />\n      </div>\n    );\n  }\n}\n","module.exports = require(\"dateformat\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"reactstrap\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAKA;AAAA;AAAA;AAdA;AAAA;AAAA;AADA;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAPA;AAQA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AASA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAxBA;AAAA;AAAA;AA6DA;AAGA;;;;AAzGA;AA6GA;AACA;AACA;AACA;AACA;AAAA;AASA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAAA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAaA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AADA;AAAA;AAMA;AAAA;AARA;AApDA;AAAA;AAAA;AAkJA;AAGA;AACA;;;;AArMA;AACA;AADA;AAwMA;;;;;;;;;;;;;;;;;;;;;;;AC/MA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AARA;AAAA;AAAA;AADA;AACA;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AACA;AAAA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AAKA;;;;AAXA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}