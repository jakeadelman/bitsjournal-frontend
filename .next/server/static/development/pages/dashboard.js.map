{"version":3,"file":"static/development/pages/dashboard.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/App.js","webpack:///./components/Categories/CategoryList.js","webpack:///./components/Categories/Header.js","webpack:///./components/Categories/Menu.js","webpack:///./components/Charts/AreaChart.js","webpack:///./components/Charts/AxisChart.js","webpack:///./components/Charts/BtcChart.js","webpack:///./components/Charts/Currency.js","webpack:///./components/Charts/NewChart.js","webpack:///./components/Charts/ReChart.js","webpack:///./components/Dashboard/AddTerm.js","webpack:///./components/Dashboard/DashInitialTerms.js","webpack:///./components/Dashboard/DashMain.js","webpack:///./components/Dashboard/Window.js","webpack:///./components/Header/Header.js","webpack:///./components/Header2.js","webpack:///./components/LoginForm.js","webpack:///./components/theme.js","webpack:///./pages/dashboard.js","webpack:///./stores/UserStore.ts","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@vx/axis\"","webpack:///external \"@vx/curve\"","webpack:///external \"@vx/event\"","webpack:///external \"@vx/gradient\"","webpack:///external \"@vx/grid\"","webpack:///external \"@vx/group\"","webpack:///external \"@vx/mock-data\"","webpack:///external \"@vx/scale\"","webpack:///external \"@vx/shape\"","webpack:///external \"@vx/tooltip\"","webpack:///external \"d3-array\"","webpack:///external \"d3-format\"","webpack:///external \"d3-time-format\"","webpack:///external \"dateformat\"","webpack:///external \"graphql-tag\"","webpack:///external \"mobx\"","webpack:///external \"mobx-react-lite\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"pondjs\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-timeseries-charts\"","webpack:///external \"react-window-size\"","webpack:///external \"reactstrap\"","webpack:///external \"recharts\"","webpack:///external \"styled-components\"","webpack:///external \"underscore\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./Header/Header\";\nimport styled from \"styled-components\";\n\nexport default ({ children }) => (\n  <main>\n    {children}\n    {/* <style jsx global>{`\n      * {\n        font-family: Menlo, Monaco, \"Lucida Console\", \"Liberation Mono\",\n          \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Courier New\",\n          monospace, serif;\n      }\n      a {\n        color: #22bad9;\n      }\n      p {\n        font-size: 14px;\n        line-height: 24px;\n      }\n      article {\n        margin: 0 auto;\n        max-width: 650px;\n      }\n      button {\n        align-items: center;\n        background-color: #22bad9;\n        border: 0;\n        color: white;\n        display: flex;\n        padding: 5px 7px;\n      }\n      button:active {\n        background-color: #1b9db7;\n        transition: background-color 0.3s;\n      }\n      button:focus {\n        outline: none;\n      }\n    `}</style> */}\n  </main>\n);\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst SidebarCategoryList = () => (\n  <CategoryList>\n    <Item>onecat</Item>\n    <Item>twocat</Item>\n  </CategoryList>\n);\n\nexport default SidebarCategoryList;\n\nconst CategoryList = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${props => props.theme.normalText};\n\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${props => props.theme.accent};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SidebarCategoryListHeader = () => <Header>cryptocurrencies</Header>;\n\nexport default SidebarCategoryListHeader;\n\nconst Header = styled.span`\n  display: block;\n  padding: 12px;\n  text-align: center;\n  color: ${props => props.theme.mutedText};\n`;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport CategoryList from \"./CategoryList\";\nimport Header from \"./Header\";\n\nconst Lapper = styled.aside`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 240px;\n  margin-left: 24px;\n  border: 1px solid ${props => props.theme.border};\n  border-radius: 2px;\n  background-color: ${props => props.theme.foreground};\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n// border: 1px solid ${props => props.theme.border};\nconst Sidebar = () => (\n  <ThemeProvider theme={theme(false)}>\n    <Lapper>\n      <Header />\n      <CategoryList />\n    </Lapper>\n  </ThemeProvider>\n);\n\nexport default Sidebar;\n","import React from \"react\";\nimport { AreaClosed, Line, Bar } from \"@vx/shape\";\nimport { appleStock } from \"@vx/mock-data\";\nimport { curveMonotoneX } from \"@vx/curve\";\nimport { GridRows, GridColumns } from \"@vx/grid\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { withTooltip, Tooltip } from \"@vx/tooltip\";\nimport { localPoint } from \"@vx/event\";\nimport { bisector } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\n\nconst stock = appleStock.slice(800);\n\n// util\nconst formatDate = timeFormat(\"%b %d, '%y\");\nconst min = (arr, fn) => Math.min(...arr.map(fn));\nconst max = (arr, fn) => Math.max(...arr.map(fn));\nconst extent = (arr, fn) => [min(arr, fn), max(arr, fn)];\n\n// accessors\nconst xStock = d => new Date(d.date);\nconst yStock = d => d.close;\nconst bisectDate = bisector(d => new Date(d.date)).left;\n\nclass Area extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTooltip = this.handleTooltip.bind(this);\n  }\n  handleTooltip({ event, data, xStock, xScale, yScale }) {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const x0 = xScale.invert(x);\n    const index = bisectDate(data, x0, 1);\n    const d0 = data[index - 1];\n    const d1 = data[index];\n    let d = d0;\n    if (d1 && d1.date) {\n      d = x0 - xStock(d0.date) > xStock(d1.date) - x0 ? d1 : d0;\n    }\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: x,\n      tooltipTop: yScale(d.close)\n    });\n  }\n  render() {\n    const {\n      width,\n      height,\n      margin,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      events\n    } = this.props;\n    if (width < 10) return null;\n\n    // bounds\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n    // const xMax = 200;\n    // const yMax = 200;\n\n    // scales\n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(stock, xStock)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true\n    });\n\n    return (\n      <div>\n        <svg ref={s => (this.svg = s)} width={width} height={height}>\n          <rect\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            fill=\"#32deaa\"\n            rx={14}\n          />\n          <defs>\n            <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n              <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n            </linearGradient>\n          </defs>\n          <GridRows\n            lineStyle={{ pointerEvents: \"none\" }}\n            scale={yScale}\n            width={xMax}\n            strokeDasharray=\"2,2\"\n            stroke=\"rgba(255,255,255,0.3)\"\n          />\n          <GridColumns\n            lineStyle={{ pointerEvents: \"none\" }}\n            scale={xScale}\n            height={yMax}\n            strokeDasharray=\"2,2\"\n            stroke=\"rgba(255,255,255,0.3)\"\n          />\n          <AreaClosed\n            data={stock}\n            x={d => xScale(xStock(d))}\n            y={d => yScale(yStock(d))}\n            yScale={yScale}\n            strokeWidth={1}\n            stroke={\"url(#gradient)\"}\n            fill={\"url(#gradient)\"}\n            curve={curveMonotoneX}\n          />\n          <Bar\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            fill=\"transparent\"\n            rx={14}\n            data={stock}\n            onTouchStart={event =>\n              this.handleTooltip({\n                event,\n                xStock,\n                xScale,\n                yScale,\n                data: stock\n              })\n            }\n            onTouchMove={event =>\n              this.handleTooltip({\n                event,\n                xStock,\n                xScale,\n                yScale,\n                data: stock\n              })\n            }\n            onMouseMove={event =>\n              this.handleTooltip({\n                event,\n                xStock,\n                xScale,\n                yScale,\n                data: stock\n              })\n            }\n            onMouseLeave={event => hideTooltip()}\n          />\n          {tooltipData && (\n            <g>\n              <Line\n                from={{ x: tooltipLeft, y: 0 }}\n                to={{ x: tooltipLeft, y: yMax }}\n                stroke=\"rgba(92, 119, 235, 1.000)\"\n                strokeWidth={2}\n                style={{ pointerEvents: \"none\" }}\n                strokeDasharray=\"2,2\"\n              />\n              <circle\n                cx={tooltipLeft}\n                cy={tooltipTop + 1}\n                r={4}\n                fill=\"black\"\n                fillOpacity={0.1}\n                stroke=\"black\"\n                strokeOpacity={0.1}\n                strokeWidth={2}\n                style={{ pointerEvents: \"none\" }}\n              />\n              <circle\n                cx={tooltipLeft}\n                cy={tooltipTop}\n                r={4}\n                fill=\"rgba(92, 119, 235, 1.000)\"\n                stroke=\"white\"\n                strokeWidth={2}\n                style={{ pointerEvents: \"none\" }}\n              />\n            </g>\n          )}\n        </svg>\n        {tooltipData && (\n          <div>\n            <Tooltip\n              top={tooltipTop - 12}\n              left={tooltipLeft + 12}\n              style={{\n                backgroundColor: \"rgba(92, 119, 235, 1.000)\",\n                color: \"white\"\n              }}\n            >\n              {`$${yStock(tooltipData)}`}\n            </Tooltip>\n            <Tooltip\n              top={yMax - 14}\n              left={tooltipLeft}\n              style={{\n                transform: \"translateX(-50%)\"\n              }}\n            >\n              {formatDate(xStock(tooltipData))}\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withTooltip(Area);\n","import React from \"react\";\nimport { Grid } from \"@vx/grid\";\nimport { Group } from \"@vx/group\";\nimport { curveBasis } from \"@vx/curve\";\nimport { GradientOrangeRed } from \"@vx/gradient\";\nimport { genDateValue } from \"@vx/mock-data\";\nimport { AxisLeft, AxisRight, AxisBottom } from \"@vx/axis\";\nimport { Area, LinePath, Line } from \"@vx/shape\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { extent } from \"d3-array\";\n\nconst data = genDateValue(20);\n\n// accessors\nconst x = d => d.date;\nconst y = d => d.value;\n\n// responsive utils for axis ticks\nfunction numTicksForHeight(height) {\n  if (height <= 300) return 3;\n  if (300 < height && height <= 600) return 5;\n  return 10;\n}\n\nfunction numTicksForWidth(width) {\n  if (width <= 300) return 2;\n  if (300 < width && width <= 400) return 5;\n  return 10;\n}\n\nexport default ({ width, height, margin }) => {\n  // bounds\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n\n  // scales\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  });\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))],\n    nice: true\n  });\n\n  return (\n    <svg width={width} height={height}>\n      <GradientOrangeRed\n        id=\"linear\"\n        vertical={false}\n        fromOpacity={0.8}\n        toOpacity={0.3}\n      />\n      <rect x={0} y={0} width={width} height={height} fill=\"#f4419f\" rx={14} />\n      <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        stroke=\"rgba(142, 32, 95, 0.9)\"\n        width={xMax}\n        height={yMax}\n        numTicksRows={numTicksForHeight(height)}\n        numTicksColumns={numTicksForWidth(width)}\n      />\n      <Group top={margin.top} left={margin.left}>\n        <Area\n          data={data}\n          x={d => xScale(x(d))}\n          y0={d => yScale.range()[0]}\n          y1={d => yScale(y(d))}\n          strokeWidth={2}\n          stroke={\"transparent\"}\n          fill={\"url(#linear)\"}\n          curve={curveBasis}\n        />\n        <LinePath\n          data={data}\n          x={d => xScale(x(d))}\n          y={d => yScale(y(d))}\n          stroke={\"url('#linear')\"}\n          strokeWidth={2}\n          curve={curveBasis}\n        />\n      </Group>\n      <Group left={margin.left}>\n        <AxisLeft\n          top={margin.top}\n          left={0}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Left Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            textAnchor: \"middle\",\n            fontSize: 12,\n            fontFamily: \"Arial\"\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            fill: \"#8e205f\",\n            textAnchor: \"end\",\n            fontSize: 10,\n            fontFamily: \"Arial\",\n            dx: \"-0.25em\",\n            dy: \"0.25em\"\n          })}\n          tickComponent={({ formattedValue, ...tickProps }) => (\n            <text {...tickProps}>{formattedValue}</text>\n          )}\n        />\n        <AxisRight\n          top={margin.top}\n          left={xMax}\n          scale={yScale}\n          hideZero\n          numTicks={numTicksForHeight(height)}\n          label=\"Axis Right Label\"\n          labelProps={{\n            fill: \"#8e205f\",\n            textAnchor: \"middle\",\n            fontSize: 12,\n            fontFamily: \"Arial\"\n          }}\n          stroke=\"#1b1a1e\"\n          tickStroke=\"#8e205f\"\n          tickLabelProps={(value, index) => ({\n            fill: \"#8e205f\",\n            textAnchor: \"start\",\n            fontSize: 10,\n            fontFamily: \"Arial\",\n            dx: \"0.25em\",\n            dy: \"0.25em\"\n          })}\n        />\n        <AxisBottom\n          top={height - margin.bottom}\n          left={0}\n          scale={xScale}\n          numTicks={numTicksForWidth(width)}\n          label=\"Time\"\n        >\n          {axis => {\n            const tickLabelSize = 10;\n            const tickRotate = 45;\n            const tickColor = \"#8e205f\";\n            const axisCenter = (axis.axisToPoint.x - axis.axisFromPoint.x) / 2;\n            return (\n              <g className=\"my-custom-bottom-axis\">\n                {axis.ticks.map((tick, i) => {\n                  const tickX = tick.to.x;\n                  const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                  return (\n                    <Group\n                      key={`vx-tick-${tick.value}-${i}`}\n                      className={\"vx-axis-tick\"}\n                    >\n                      <Line from={tick.from} to={tick.to} stroke={tickColor} />\n                      <text\n                        transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                        fontSize={tickLabelSize}\n                        textAnchor=\"middle\"\n                        fill={tickColor}\n                      >\n                        {tick.formattedValue}\n                      </text>\n                    </Group>\n                  );\n                })}\n                <text\n                  textAnchor=\"middle\"\n                  transform={`translate(${axisCenter}, 50)`}\n                  fontSize=\"8\"\n                >\n                  {axis.label}\n                </text>\n              </g>\n            );\n          }}\n        </AxisBottom>\n      </Group>\n    </svg>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Line, Bar, LinePath } from \"@vx/shape\";\nimport { withTooltip, Tooltip } from \"@vx/tooltip\";\nimport { localPoint } from \"@vx/event\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { extent, max, bisector } from \"d3-array\";\nimport { timeFormat } from \"d3-time-format\";\n\nconst formatDate = timeFormat(\"%b %d, '%y\");\nconst xSelector = d => new Date(d.date);\nconst ySelector = d => d.price;\n\nconst bisectDate = bisector(xSelector).left;\n\nclass App extends Component {\n  state = {\n    data: null\n  };\n  async componentDidMount() {\n    const res = await fetch(\n      \"https://api.coindesk.com/v1/bpi/historical/close.json\"\n    );\n    const data = await res.json();\n\n    this.setState({\n      data: Object.keys(data.bpi).map(date => {\n        return {\n          date,\n          price: data.bpi[date]\n        };\n      })\n    });\n  }\n\n  handleTooltip = ({ event, data, xSelector, xScale, yScale }) => {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const x0 = xScale.invert(x);\n    const index = bisectDate(data, x0, 1);\n    const d0 = data[index - 1];\n    const d1 = data[index];\n    let d = d0;\n    if (d1 && d1.date) {\n      d = x0 - xSelector(d0) > xSelector(d1) - x0 ? d1 : d0;\n    }\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: xScale(xSelector(d)),\n      tooltipTop: yScale(ySelector(d))\n    });\n  };\n\n  render() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const { data } = this.state;\n    const {\n      showTooltip,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft\n    } = this.props;\n\n    if (!data) return null;\n\n    const padding = 100;\n    const xMax = width - padding;\n    const yMax = height - padding;\n\n    const xScale = scaleTime({\n      range: [padding, xMax],\n      domain: extent(data, xSelector)\n    });\n\n    const dataMax = max(data, ySelector);\n    const yScale = scaleLinear({\n      range: [yMax, padding],\n      domain: [0, dataMax + dataMax / 3]\n    });\n\n    return (\n      <div>\n        <svg width={width} height={height}>\n          <rect x={0} y={0} width={width} height={height} fill=\"#32deaa\" />\n          <LinePath\n            data={data}\n            xScale={xScale}\n            yScale={yScale}\n            x={xSelector}\n            y={ySelector}\n            strokeWidth={5}\n            stroke=\"#FFF\"\n            strokeLinecap=\"round\"\n            fill=\"transparent\"\n          />\n          <Bar\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            fill=\"transparent\"\n            data={data}\n            onMouseMove={data => event =>\n              this.handleTooltip({\n                event,\n                data,\n                xSelector,\n                xScale,\n                yScale\n              })}\n            onMouseLeave={data => event => hideTooltip()}\n            onTouchEnd={data => event => hideTooltip()}\n            onTouchMove={data => event =>\n              this.handleTooltip({\n                event,\n                data,\n                xSelector,\n                xScale,\n                yScale\n              })}\n          />\n          {tooltipData && (\n            <g>\n              <Line\n                from={{ x: tooltipLeft, y: 0 }}\n                to={{ x: tooltipLeft, y: yMax }}\n                stroke=\"#5C77EB\"\n                strokeWidth={4}\n                style={{ pointerEvents: \"none\" }}\n                strokeDasharray=\"4,6\"\n              />\n              <circle\n                cx={tooltipLeft}\n                cy={tooltipTop}\n                r={4}\n                fill=\"#5C77EB\"\n                stroke=\"white\"\n                strokeWidth={2}\n                style={{ pointerEvents: \"none\" }}\n              />\n            </g>\n          )}\n        </svg>\n        {tooltipData && (\n          <div>\n            <Tooltip\n              top={tooltipTop - 12}\n              left={tooltipLeft + 12}\n              style={{\n                backgroundColor: \"#5C77EB\",\n                color: \"#FFF\"\n              }}\n            >\n              {`$${ySelector(tooltipData)}`}\n            </Tooltip>\n            <Tooltip\n              top={yMax - 30}\n              left={tooltipLeft}\n              style={{\n                transform: \"translateX(-50%)\"\n              }}\n            >\n              {formatDate(xSelector(tooltipData))}\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withTooltip(App);\n","/**\n *  Copyright (c) 2015, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/* eslint max-len:0 */\n\nimport React from \"react\";\nimport _ from \"underscore\";\n\nimport { format } from \"d3-format\";\n\n// Pond\nimport { TimeSeries } from \"pondjs\";\n\n// Imports from the charts library\n// import ChartContainer from \"../../../../../components/ChartContainer\";\n// import ChartRow from \"../../../../../components/ChartRow\";\n// import Charts from \"../../../../../components/Charts\";\n// import YAxis from \"../../../../../components/YAxis\";\n// import LineChart from \"../../../../../components/LineChart\";\n// import Baseline from \"../../../../../components/Baseline\";\n// import Legend from \"../../../../../components/Legend\";\n// import Resizable from \"../../../../../components/Resizable\";\n// import styler from \"../../../../../js/styler\";\n\nimport {\n  ChartContainer,\n  ChartRow,\n  Charts,\n  YAxis,\n  LineChart,\n  Baseline,\n  Legend,\n  Resizable,\n  styler\n} from \"react-timeseries-charts\";\n\n// import currency_docs from \"./currency_docs.md\";\n// import currency_thumbnail from \"./currency_thumbnail.png\";\n\n// Data\nconst aud = require(\"./aud.json\");\nconst euro = require(\"./euro.json\");\n\nfunction buildPoints() {\n  const audPoints = aud.widget[0].data.reverse();\n  const euroPoints = euro.widget[0].data.reverse();\n  let points = [];\n  for (let i = 0; i < audPoints.length; i++) {\n    points.push([audPoints[i][0], audPoints[i][1], euroPoints[i][1]]);\n  }\n  return points;\n}\n\nconst currencySeries = new TimeSeries({\n  name: \"Currency\",\n  columns: [\"time\", \"aud\", \"euro\"],\n  points: buildPoints()\n});\n\nconst style = styler([\n  { key: \"aud\", color: \"steelblue\", width: 2 },\n  { key: \"euro\", color: \"#F68B24\", width: 2 }\n]);\n\nclass CrossHairs extends React.Component {\n  render() {\n    const { x, y } = this.props;\n    const style = { pointerEvents: \"none\", stroke: \"#ccc\" };\n    if (!_.isNull(x) && !_.isNull(y)) {\n      return (\n        <g>\n          <line style={style} x1={0} y1={y} x2={this.props.width} y2={y} />\n          <line style={style} x1={x} y1={0} x2={x} y2={this.props.height} />\n        </g>\n      );\n    } else {\n      return <g />;\n    }\n  }\n}\n\nclass Currency extends React.Component {\n  state = {\n    tracker: null,\n    timerange: currencySeries.range(),\n    x: null,\n    y: null\n  };\n\n  handleTrackerChanged = tracker => {\n    if (!tracker) {\n      this.setState({ tracker, x: null, y: null });\n    } else {\n      this.setState({ tracker });\n    }\n  };\n\n  handleTimeRangeChange = timerange => {\n    this.setState({ timerange });\n  };\n\n  handleMouseMove = (x, y) => {\n    this.setState({ x, y });\n  };\n\n  render() {\n    const f = format(\"$,.2f\");\n    const range = this.state.timerange;\n\n    let euroValue, audValue;\n    if (this.state.tracker) {\n      const index = currencySeries.bisect(this.state.tracker);\n      const trackerEvent = currencySeries.at(index);\n      audValue = `${f(trackerEvent.get(\"aud\"))}`;\n      euroValue = `${f(trackerEvent.get(\"euro\"))}`;\n    }\n\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Resizable>\n              <ChartContainer\n                timeRange={range}\n                timeAxisStyle={{\n                  ticks: {\n                    stroke: \"#AAA\",\n                    opacity: 0.25,\n                    \"stroke-dasharray\": \"1,1\"\n                    // Note: this isn't in camel case because this is\n                    // passed into d3's style\n                  },\n                  values: {\n                    fill: \"#AAA\",\n                    \"font-size\": 12\n                  }\n                }}\n                showGrid={true}\n                paddingRight={100}\n                maxTime={currencySeries.range().end()}\n                minTime={currencySeries.range().begin()}\n                timeAxisAngledLabels={true}\n                timeAxisHeight={65}\n                onTrackerChanged={this.handleTrackerChanged}\n                onBackgroundClick={() => this.setState({ selection: null })}\n                enablePanZoom={true}\n                onTimeRangeChanged={this.handleTimeRangeChange}\n                onMouseMove={(x, y) => this.handleMouseMove(x, y)}\n                minDuration={1000 * 60 * 60 * 24 * 30}\n              >\n                <ChartRow height=\"400\">\n                  <YAxis\n                    id=\"y\"\n                    label=\"Price ($)\"\n                    min={0.5}\n                    max={1.5}\n                    style={{\n                      ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                      }\n                    }}\n                    showGrid\n                    hideAxisLine\n                    width=\"60\"\n                    type=\"linear\"\n                    format=\"$,.2f\"\n                  />\n                  <Charts>\n                    <LineChart\n                      axis=\"y\"\n                      breakLine={false}\n                      series={currencySeries}\n                      columns={[\"aud\", \"euro\"]}\n                      style={style}\n                      interpolation=\"curveBasis\"\n                      highlight={this.state.highlight}\n                      onHighlightChange={highlight =>\n                        this.setState({ highlight })\n                      }\n                      selection={this.state.selection}\n                      onSelectionChange={selection =>\n                        this.setState({ selection })\n                      }\n                    />\n                    <CrossHairs x={this.state.x} y={this.state.y} />\n                    <Baseline\n                      axis=\"y\"\n                      value={1.0}\n                      label=\"USD Baseline\"\n                      position=\"right\"\n                    />\n                  </Charts>\n                </ChartRow>\n              </ChartContainer>\n            </Resizable>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <span>\n              <Legend\n                type=\"line\"\n                align=\"right\"\n                style={style}\n                highlight={this.state.highlight}\n                onHighlightChange={highlight => this.setState({ highlight })}\n                selection={this.state.selection}\n                onSelectionChange={selection => this.setState({ selection })}\n                categories={[\n                  { key: \"aud\", label: \"AUD\", value: audValue },\n                  { key: \"euro\", label: \"Euro\", value: euroValue }\n                ]}\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Export example\n// export default { currency, currency_docs, currency_thumbnail };\nexport default Currency;\n","import React from \"react\";\nimport { AxisLeft, AxisBottom } from \"@vx/axis\";\nimport { appleStock } from \"@vx/mock-data\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { extent, max } from \"d3-array\";\nimport { AreaClosed, Area, LinePath } from \"@vx/shape\";\nimport { Group } from \"@vx/group\";\nimport { bisector } from \"d3-array\";\nimport { GradientOrangeRed, GradientPinkBlue } from \"@vx/gradient\";\n\nconst xStock = d => new Date(d.date);\nconst yStock = d => d.close;\nconst bisectDate = bisector(d => new Date(d.date)).left;\n\nexport default class extends React.Component {\n  render() {\n    const stock = appleStock;\n    const width = 750;\n    const height = 300;\n\n    const margin = {\n      top: 20,\n      bottom: 20,\n      left: 20,\n      right: 20\n    };\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const x = d => new Date(d.date);\n    const y = d => d.close;\n    // console.log(data);\n\n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(stock, xStock)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true\n    });\n\n    return (\n      <svg\n        width={width}\n        height={height}\n        style={{ borderRadius: \"2px\", border: \"1px solid #818e99\" }}\n      >\n        <rect x={0} y={0} width={width} height={height} fill=\"#ffffff\" />\n        {/* <GradientPinkBlue id=\"gradient\" /> */}\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n            <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n          </linearGradient>\n        </defs>\n        <Group top={margin.top} left={margin.left}>\n          <AreaClosed\n            data={stock}\n            x={d => xScale(xStock(d))}\n            y={d => yScale(yStock(d))}\n            yScale={yScale}\n            strokeWidth={1}\n            stroke={\"url(#gradient)\"}\n            fill={\"url(#gradient)\"}\n          />\n        </Group>\n      </svg>\n    );\n  }\n}\n\n// module.exports = { Chart };\n// export default NewChart;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    sentiment: 4000,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    sentiment: 3000,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    sentiment: 2000,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    sentiment: 2780,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    sentiment: 1890,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    sentiment: 2390,\n    amt: 2500\n  },\n  {\n    name: \"the date\",\n    sentiment: 3490,\n    amt: 2100\n  }\n];\n\nexport default class Example extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    if (window.innerWidth < 1024) {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        chartWidth: window.innerWidth * 0.9 - 179\n      });\n    } else if (window.innerWidth < 750) {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        chartWidth: window.innerWidth - 179\n      });\n    } else if (window.innerWidth >= 1024) {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        chartWidth: window.innerWidth * 0.8 - 179\n      });\n    }\n  }\n\n  render() {\n    return (\n      <LineChart\n        width={this.state.chartWidth}\n        height={200}\n        data={data.slice(0, 7)}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n\n        <Line type=\"monotone\" dataKey=\"sentiment\" stroke=\"#82ca9d\" />\n      </LineChart>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n// import Popover from \"./Popover\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\nimport Router from \"next/router\";\n\nexport default function AddTerm(props) {\n  const [clicked, setClicked] = useState(false);\n  const [popover, setPopover] = useState(false);\n\n  function toggle() {\n    if (!popover) {\n      setPopover(true);\n    } else {\n      setPopover(false);\n    }\n  }\n\n  return (\n    <div>\n      <button\n        id=\"Popover1\"\n        onClick={() => {\n          setClicked(true);\n          toggle();\n        }}\n      >\n        add term\n      </button>\n      <Popover placement=\"bottom\" isOpen={popover} target=\"Popover1\">\n        <PopoverHeader>Add Term</PopoverHeader>\n        <PopoverBody>\n          <PopBody />\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n\nconst PopBody = () => {\n  const [newTerm, setNewTerm] = useState();\n  const [clicked, setClicked] = useState(false);\n  console.log(newTerm);\n\n  function handleClick() {\n    console.log(\"was clicked\");\n    setClicked(true);\n    // return <AddTodo term={newTerm} />;\n  }\n\n  if (!!clicked) {\n    return (\n      <Mutation mutation={addSt}>\n        {(addSearchTerm, { data }) => {\n          setClicked(false);\n          addSearchTerm({ variables: { searchterm: newTerm } });\n        }}\n      </Mutation>\n    );\n  }\n\n  return (\n    <div>\n      <AddTodo />\n    </div>\n  );\n};\n\nexport const addSt = gql`\n  mutation AddSearchTerm($searchterm: String!) {\n    addSearchTerm(searchterm: $searchterm)\n  }\n`;\n\nconst AddTodo = () => {\n  let input;\n\n  return (\n    <Mutation mutation={addSt}>\n      {(addSearchTerm, { data }) => (\n        <div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              addSearchTerm({ variables: { searchterm: input.value } });\n              input.value = \"\";\n              location.reload(true);\n            }}\n          >\n            <input\n              ref={node => {\n                input = node;\n              }}\n            />\n            <button className=\"add-button\" type=\"submit\">\n              Add\n            </button>\n          </form>\n          {/* <style jsx>\n            {`\n              .add-button {\n                margin-top: 5px;\n              }\n            `}\n          </style> */}\n        </div>\n      )}\n    </Mutation>\n  );\n};\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DashMain from \"./DashMain\";\nimport App from \"../App\";\nimport Header from \"../Header2\";\nimport AddTerm from \"./AddTerm\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport AreaChart from \"../Charts/AreaChart\";\nimport AxisChart from \"../Charts/AxisChart\";\nimport NewChart from \"../Charts/NewChart\";\nimport ScreenSize from \"./Window\";\nimport windowSize from \"react-window-size\";\nimport BtcChart from \"../Charts/BtcChart\";\nimport Currency from \"../Charts/Currency\";\nimport ReChart from \"../Charts/ReChart\";\nimport Sidebar from \"../Categories/Menu\";\n// import theme from \"../theme\";\n// import SentimentModule from \"./SentimentModule\";\n\nclass DashInitialTerms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTerms: [],\n      width: 0,\n      height: 0\n    };\n    this.toggleTerm = this.toggleTerm.bind(this);\n    this.mapTerms = this.mapTerms.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n    console.log(this.state.width);\n  }\n\n  toggleTerm(term) {\n    this.setState({ term: term });\n    console.log(this.state);\n  }\n\n  mapTerms(allterms) {\n    allterms.map(term => {\n      this.state.allTerms.push(term.term);\n    });\n  }\n\n  handleClick(e) {\n    // console.log(e.target.value);\n    this.setState({ term: e.target.value });\n    console.log(this.state);\n  }\n\n  render() {\n    let marg = {\n      left: 20,\n      right: 20,\n      top: 20,\n      bottom: 20\n    };\n    return (\n      <Query query={fetchTweetsQuery}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n\n          console.log(data);\n\n          if (!this.state.allTerms[0]) {\n            this.toggleTerm(data.fetchTerms[0].term);\n            this.mapTerms(data.fetchTerms);\n            return <div>loading</div>;\n          }\n          return (\n            <ThemeProvider theme={theme}>\n              <Wrapper>\n                <div\n                  style={{\n                    background: \"white\",\n                    border: \"1px solid #ebedf0\",\n                    padding: \"5px\"\n                  }}\n                >\n                  <ReChart />\n                </div>\n                <Sidebar />\n              </Wrapper>\n            </ThemeProvider>\n          );\n        }}\n      </Query>\n    );\n  }\n}\nconst Menu = styled.nav`\n  border: 1px solid ${props => props.theme.border};\n  @media (max-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const fetchTweetsQuery = gql`\n  query fetchTerms {\n    fetchTerms {\n      id\n      term\n    }\n  }\n`;\n\nexport default DashInitialTerms;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-align;\n`;\n\nconst SampleWrapper = styled.header`\n  position: sticky;\n  z-index: 10;\n  top: 0;\n  display: flex;\n  align-items: stretch;\n  margin-bottom: 24px;\n  box-shadow: 0 4px 12px ${props => props.theme.shadow};\n  border-bottom: 1px solid ${props => props.theme.border};\n  height: 48px;\n  padding: 0 10vw;\n  background-color: ${props => props.theme.foreground};\n  user-select: none;\n  @media (max-width: 425px) {\n    margin-bottom: 16px;\n    height: 40px;\n  }\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n","import React, { setState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { withRouter } from \"next/router\";\n// import SentimentModule from \"./SentimentModule\";\nconst dateformat = require(\"dateformat\");\n\nexport default class DashMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { term: this.props.initialTerm };\n  }\n  componentDidMount() {\n    // console.log(this.props.initialTerm);\n    // console.log(this.props.initialTerm);\n    // this.setState({ term: this.props.initialTerm });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps.initialTerm);\n    if (nextProps.initialTerm !== this.state.term) {\n      this.setState({ term: nextProps.initialTerm });\n    }\n  }\n\n  render() {\n    if (!this.state.term) {\n      return <div>loading</div>;\n    } else {\n      const fetchTweetsVars = {\n        query: this.state.term\n      };\n      console.log(fetchTweetsVars);\n      return (\n        <Query query={fetchTweetsQuery} variables={fetchTweetsVars}>\n          {({ loading, error, data }) => {\n            if (error)\n              return (\n                <div>\n                  no data loaded.. there may have been an error please refresh\n                  the page\n                </div>\n              );\n            if (loading) return <div>Loading</div>;\n            console.log(data.getDailyTweet);\n            let pos =\n              (data.getDailyTweet.positive / data.getDailyTweet.total) * 100;\n            let neg =\n              (data.getDailyTweet.negative / data.getDailyTweet.total) * 100;\n            let trans = 140 - pos;\n            console.log(pos, neg);\n\n            return (\n              <div className=\"dash-main-table\">\n                <div>\n                  <table>\n                    <thread>\n                      <tr className=\"top-row\">\n                        <th className=\"tr-heading\">\n                          query: {this.props.initialTerm}\n                        </th>\n                        <th className=\"bar-heading tr-heading\">\n                          <svg\n                            class=\"chart\"\n                            width=\"450\"\n                            height=\"40\"\n                            aria-labelledby=\"title desc\"\n                            role=\"img\"\n                          >\n                            <g class=\"bar\" transform=\"translate(140,4)\">\n                              <rect width={neg} height=\"19\" className=\"rect1\" />\n                              <text\n                                x={neg + 5}\n                                y=\"9.5\"\n                                dy=\".35em\"\n                                className=\"texto\"\n                              >\n                                {parseInt(neg)}%\n                              </text>\n                              <text\n                                x=\"130\"\n                                y=\"9.5\"\n                                dy=\".35em\"\n                                className=\"texto\"\n                              >\n                                24 hour sentiment\n                              </text>\n                            </g>\n                            <g class=\"bar2\" transform={`translate(${trans},4)`}>\n                              <rect width={pos} height=\"19\" className=\"rect2\" />\n\n                              <text\n                                x=\"-35\"\n                                y=\"9.5\"\n                                dy=\".35em\"\n                                className=\"texto\"\n                              >\n                                {parseInt(pos)}%\n                              </text>\n                            </g>\n                          </svg>\n                        </th>\n                      </tr>\n                    </thread>\n                    <tbody>\n                      <div>\n                        {data.fetchTweets.map(tweet => (\n                          <tr className={`data`}>\n                            <th\n                              scope=\"row\"\n                              className={`hdata-${tweet.polarity}`}\n                            >\n                              {dateformat(tweet.timestamp, \"shortTime\")}\n                            </th>\n                            <td className={`tdata-${tweet.polarity}`}>\n                              {tweet.text}\n                            </td>\n                          </tr>\n                        ))}\n                      </div>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            );\n          }}\n        </Query>\n      );\n    }\n  }\n}\n\nexport const fetchTweetsQuery = gql`\n  query fetchTweets($query: String!) {\n    fetchTweets(query: $query) {\n      id\n      timestamp\n      tweetId\n      text\n      polarity\n    }\n\n    getDailyTweet(query: $query) {\n      day\n      negative\n      positive\n      total\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport windowSize from \"react-window-size\";\nimport AreaChart from \"../Charts/AreaChart\";\n\nclass ScreenSize extends Component {\n  render() {\n    return (\n      <p>\n        Screen width is: {this.props.windowWidth}\n        <br />\n        Screen height is: {this.props.windowHeight}\n        <AreaChart\n          margin={this.props.margin}\n          width={this.props.windowWidth * 0.8}\n          height={300}\n        />\n      </p>\n    );\n  }\n}\n\nexport default windowSize(ScreenSize);\n","import Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n// import Head from \"Header/Head\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\n\nconst Header = ({ router: { pathname } }) => (\n  // <header className=\"the-header\">\n  <ThemeProvider theme={theme(false)}>\n    <Wrapper>\n      <Link prefetch href=\"/\">\n        <StyledLink className={pathname === \"/\" ? \"is-active\" : \"\"}>\n          Home\n        </StyledLink>\n      </Link>\n      <Link prefetch href=\"/about\">\n        <StyledLink className={pathname === \"/about\" ? \"is-active\" : \"\"}>\n          About\n        </StyledLink>\n      </Link>\n      <Link prefetch href=\"/login\">\n        <StyledLink className={pathname === \"/login\" ? \"is-active\" : \"\"}>\n          Login\n        </StyledLink>\n      </Link>\n\n      <Link prefetch href=\"/register\">\n        <StyledLink className={pathname === \"/register\" ? \"is-active\" : \"\"}>\n          Register\n        </StyledLink>\n      </Link>\n    </Wrapper>\n  </ThemeProvider>\n);\n\nexport default withRouter(Header);\n\nconst StyledLink = styled.div`\n  margin: 10px;\n  color: ${props => props.theme.mutedText};\n\n  position: relative;\n  cursor: pointer;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    border-bottom: 1px solid ${props => props.theme.accent};\n  }\n\n  :hover {\n    opacity: 1;\n    color: ${props => props.theme.accent};\n  }\n\n  &.active::after {\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-bottom: 3px solid ${props => props.theme.accent};\n  }\n`;\n\nconst Wrapper = styled.header`\n  position: sticky;\n  z-index: 10;\n  top: 0;\n  display: flex;\n  align-items: stretch;\n  margin-bottom: 24px;\n  box-shadow: 0 4px 12px ${props => props.theme.shadow};\n  border-bottom: 1px solid ${props => props.theme.border};\n  height: 48px;\n  padding: 0 10vw;\n  background-color: ${props => props.theme.foreground};\n  user-select: none;\n  @media (max-width: 425px) {\n    margin-bottom: 16px;\n    height: 40px;\n  }\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n","import Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n\nconst Header = ({ router: { pathname } }) => (\n  <header>\n    <Link prefetch href=\"/\">\n      <a className={pathname === \"/\" ? \"is-active\" : \"\"}>Home</a>\n    </Link>\n    <Link prefetch href=\"/about\">\n      <a className={pathname === \"/about\" ? \"is-active\" : \"\"}>About</a>\n    </Link>\n    <Link prefetch href=\"/login\">\n      <a className={pathname === \"/login\" ? \"is-active\" : \"\"}>Login</a>\n    </Link>\n  </header>\n);\n\nexport default withRouter(Header);\n","import React, { useContext } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { observer } from \"mobx-react-lite\";\nimport { UserStoreContext } from \"../stores/UserStore.ts\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { wrongCredentials: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(event, client) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    form.reset();\n\n    let res = client.mutate({\n      mutation: gql`\n        mutation login($email: String!, $password: String!) {\n          login(email: $email, password: $password)\n        }\n      `,\n      variables: { email, password }\n    });\n\n    // const userStore = UserStoreContext;\n    // console.log(userStore.isAuth);\n\n    let r = await res;\n    console.log(r);\n    r = r.data.login;\n    console.log(r);\n    let isTrue = r == \"true\";\n    console.log(typeof r);\n    if (isTrue == true) {\n      console.log(r);\n      Router.push(\"/dashboard\");\n    } else {\n      this.setState({ wrongCredentials: true });\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <form onSubmit={event => this.handleSubmit(event, client)}>\n            <h1>Login</h1>\n            <input placeholder=\"email\" name=\"email\" type=\"text\" required />\n            <input\n              placeholder=\"password\"\n              name=\"password\"\n              type=\"text\"\n              required\n            />\n            <button type=\"submit\">Submit</button>\n            {this.state.wrongCredentials == true ? (\n              <div className=\"login-alert\">\n                <Alert\n                  color=\"secondary\"\n                  isOpen={this.state.wrongCredentials == true ? true : false}\n                >\n                  Wrong login credentials\n                </Alert>\n              </div>\n            ) : null}\n          </form>\n        )}\n      </ApolloConsumer>\n    );\n  }\n}\n\nexport default LoginForm;\n","const constants = {\n  error: \"#f5222d\",\n  vote: \"#b6b6b6\",\n  upvote: \"#f9920b\",\n  downvote: \"#2e70ff\"\n};\n\nconst dark = {\n  ...constants,\n  normalText: \"#ffffff\",\n  mutedText: \"#b0b8bf\",\n  border: \"#333333\",\n  accent: \"#33a0ff\",\n  pageBackground: \"#1b1b1b\",\n  voteButtonHover: \"#383838\",\n  foreground: \"#262626\",\n  activeBackground: \"#333333\",\n  inputBackground: \"#333333\",\n  shadow: \"rgba(0, 0, 0, 0.4)\"\n};\n\nconst light = {\n  ...constants,\n  normalText: \"#454f5b\",\n  mutedText: \"#818e99\",\n  border: \"#ebedf0\",\n  accent: \"#1890ff\",\n  pageBackground: \"#f4f6f8\",\n  voteButtonHover: \"#f2f2f2\",\n  foreground: \"#ffffff\",\n  activeBackground: \"#fafafa\",\n  inputBackground: \"#fcfcfc\",\n  shadow: \"rgba(0, 0, 0, 0.05)\"\n};\n\nconst theme = isDark => (isDark ? dark : light);\n\nexport default theme;\n","import React from \"react\";\nimport DashInitialTerms from \"../components/Dashboard/DashInitialTerms\";\nimport App from \"../components/App\";\nimport Header from \"../components/Header/Header\";\nimport LoginForm from \"../components/LoginForm\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../components/theme\";\nimport \"../styles.css\";\nexport default class extends React.Component {\n  render() {\n    return (\n      <App>\n        <Header />\n        <ThemeProvider theme={theme}>\n          <Wrapper>\n            <DashInitialTerms />\n          </Wrapper>\n        </ThemeProvider>\n      </App>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 0 10vw;\n  @media (max-width: 1024px) {\n    margin: 0 5vw;\n  }\n  @media (max-width: 768px) {\n    display: block;\n    margin: 0;\n  }\n`;\n","import { observable } from \"mobx\";\nimport { createContext } from \"react\";\n\nclass UserStore {\n  @observable user = \"\";\n  @observable isAuth = false;\n}\n\nexport const UserStoreContext = createContext(new UserStore());\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@vx/axis\");","module.exports = require(\"@vx/curve\");","module.exports = require(\"@vx/event\");","module.exports = require(\"@vx/gradient\");","module.exports = require(\"@vx/grid\");","module.exports = require(\"@vx/group\");","module.exports = require(\"@vx/mock-data\");","module.exports = require(\"@vx/scale\");","module.exports = require(\"@vx/shape\");","module.exports = require(\"@vx/tooltip\");","module.exports = require(\"d3-array\");","module.exports = require(\"d3-format\");","module.exports = require(\"d3-time-format\");","module.exports = require(\"dateformat\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-react-lite\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"pondjs\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-timeseries-charts\");","module.exports = require(\"react-window-size\");","module.exports = require(\"reactstrap\");","module.exports = require(\"recharts\");","module.exports = require(\"styled-components\");","module.exports = require(\"underscore\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAMA;AAAA;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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AaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAZA;AACA;;AAcA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAEA;;;;;;AACA;;;;;AAAA;;AACA;;;;;AAAA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}