{"version":3,"file":"static/development/pages/dashboard.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/App.js","webpack:///./components/Charts2/ChartDemo.js","webpack:///./components/Charts2/helpers.js","webpack:///./components/Charts2/index.js","webpack:///./components/Charts2/utils.js","webpack:///./components/Dashboard/768px/Dashboard.js","webpack:///./components/Dashboard/AddApiForm.js","webpack:///./components/Dashboard/DashInitialTerms.js","webpack:///./components/Dashboard/Dashboard.js","webpack:///./components/Dashboard/FetchQuery.js","webpack:///./components/Dashboard/Notes.js","webpack:///./components/Dashboard/ReChart.js","webpack:///./components/Dashboard/helpers.js","webpack:///./components/Dashboard/notesHelpers.js","webpack:///./components/Form2/FormWrapper.js","webpack:///./components/Form2/Input.js","webpack:///./components/Header/Header.js","webpack:///./components/Header/Logo.js","webpack:///./components/Helpers/Functions.js","webpack:///./components/Menu/768px/CategoryList.js","webpack:///./components/Menu/768px/Header.js","webpack:///./components/Menu/768px/Menu.js","webpack:///./components/Menu/CategoryList.js","webpack:///./components/Menu/Header.js","webpack:///./components/Menu/Menu.js","webpack:///./components/form/Label.js","webpack:///./components/shared/Button.js","webpack:///./components/shared/helpers.js","webpack:///./components/theme.js","webpack:///./pages/dashboard.js","webpack:///./stores/store.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@fortawesome/free-solid-svg-icons\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"d3-dsv\"","webpack:///external \"d3-format\"","webpack:///external \"d3-time-format\"","webpack:///external \"fast-deep-equal\"","webpack:///external \"graphql-tag\"","webpack:///external \"js-cookie\"","webpack:///external \"mobx\"","webpack:///external \"mobx-persist\"","webpack:///external \"mobx-react\"","webpack:///external \"mobx-react-lite\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-dom\"","webpack:///external \"react-stockcharts\"","webpack:///external \"react-stockcharts/lib/annotation\"","webpack:///external \"react-stockcharts/lib/axes\"","webpack:///external \"react-stockcharts/lib/coordinates\"","webpack:///external \"react-stockcharts/lib/helper\"","webpack:///external \"react-stockcharts/lib/indicator\"","webpack:///external \"react-stockcharts/lib/scale\"","webpack:///external \"react-stockcharts/lib/series\"","webpack:///external \"react-stockcharts/lib/tooltip\"","webpack:///external \"react-stockcharts/lib/utils\"","webpack:///external \"reactstrap\"","webpack:///external \"recharts\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\n\nexport default ({ children }) => <main>{children}</main>;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries, LineSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n  CrossHairCursor,\n  EdgeIndicator,\n  CurrentCoordinate,\n  MouseCoordinateX,\n  MouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\nimport {\n  timeCompare,\n  getYRangeNums,\n  findYValBuy,\n  findYValSell,\n} from \"./helpers\";\n\nimport {\n  LabelAnnotation,\n  Label,\n  Annotate,\n} from \"react-stockcharts/lib/annotation\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n  OHLCTooltip,\n  MovingAverageTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChartWithAnnotation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    // console.log(this.props.data);\n    // console.log(this.props.initialData);\n    let yRangeNums = getYRangeNums(this.props.data);\n    this.setState({ yRangeNums: yRangeNums });\n  }\n  render() {\n    const margin = { left: 20, right: 50, top: 30, bottom: 30 };\n    const height = 400;\n    const { type, width, ratio, data: initialData } = this.props;\n\n    const [yAxisLabelX, yAxisLabelY] = [\n      width - margin.left - 40,\n      (height - margin.top - margin.bottom) / 2,\n    ];\n\n    const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\n      (d) => d.date\n    );\n    const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\n      initialData\n    );\n\n    const start = xAccessor(last(data));\n    const end = xAccessor(data[Math.max(0, data.length - 150)]);\n    const xExtents = [start, end];\n\n    if (this.state == null) {\n      return <div>Loading...</div>;\n    }\n    // try {\n    return (\n      <ChartCanvas\n        height={height}\n        ratio={ratio}\n        width={width}\n        margin={margin}\n        type={type}\n        data={data}\n        xScale={xScale}\n        seriesName=\"BTC\"\n        xAccessor={xAccessor}\n        displayXAccessor={displayXAccessor}\n        xExtents={xExtents}\n      >\n        <Chart\n          id={1}\n          yExtents={[(d) => [d.high, d.low]]}\n          padding={{ top: 80, bottom: 80 }}\n        >\n          <XAxis axisAt=\"bottom\" orient=\"bottom\" />\n          <MouseCoordinateX\n            at=\"bottom\"\n            orient=\"bottom\"\n            displayFormat={timeFormat(\"%Y-%m-%d\")}\n          />\n          <MouseCoordinateY\n            at=\"right\"\n            orient=\"right\"\n            displayFormat={format(\".2f\")}\n          />\n          <YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n          <CandlestickSeries />\n          <OHLCTooltip origin={[-10, 0]} />\n          {this.props.trades.map((each) => {\n            // console.log(\n            //   \"mapping total length\" + this.props.trades.length.toString(),\n            //   each\n            // );\n            let datu = new Date(each.timestamp);\n            // console.log(datu, this.props.timeframe);\n            if (each.side == \"Buy\") {\n              const annotationPropsUp = {\n                fontFamily: \"Glyphicons Halflings\",\n                fontSize: 15,\n                fill: \"#018001\",\n                // fill: rgba(1, 128, 1, 0.5),\n                opacity: 0.8,\n                text: \"â–²\",\n                y: ({ yScale }) => {\n                  return yScale.range()[0] + 20;\n                  // return findYValBuy(\n                  //   this.state.yRangeNums[0],\n                  //   this.state.yRangeNums[1],\n                  //   each.price\n                  // );\n                },\n                onClick: console.log.bind(console),\n                tooltip: (d) => timeFormat(\"%B\")(d.date),\n                // onMouseOver: console.log.bind(console),\n              };\n\n              return (\n                <Annotate\n                  with={LabelAnnotation}\n                  when={(d) => timeCompare(d, datu, this.props.timeframe)}\n                  usingProps={annotationPropsUp}\n                />\n              );\n            } else if (each.side == \"Sell\") {\n              const annotationPropsDown = {\n                fontFamily: \"Glyphicons Halflings\",\n                fontSize: 15,\n                fill: \"#FF0000\",\n                opacity: 0.8,\n                text: \"â–¼\",\n                y: ({ yScale }) => {\n                  return yScale.range()[1] - 20;\n                  // return findYValSell(\n                  //   this.state.yRangeNums[0],\n                  //   this.state.yRangeNums[1],\n                  //   each.price\n                  // );\n                },\n                onClick: console.log.bind(console),\n                tooltip: (d) => timeFormat(\"%B\")(d.date),\n                // onMouseOver: console.log.bind(console),\n              };\n              return (\n                <Annotate\n                  with={LabelAnnotation}\n                  when={(d) => timeCompare(d, datu, this.props.timeframe)}\n                  usingProps={annotationPropsDown}\n                />\n              );\n            } else {\n              return;\n            }\n          })}\n        </Chart>\n        <CrossHairCursor strokeDasharray=\"LongDashDot\" />\n      </ChartCanvas>\n    );\n    // } catch (err) {\n    //   return <div>no chart</div>;\n    // }\n  }\n}\n\nCandleStickChartWithAnnotation.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithAnnotation.defaultProps = {\n  type: \"svg\",\n};\n\nCandleStickChartWithAnnotation = fitWidth(CandleStickChartWithAnnotation);\n\nexport default CandleStickChartWithAnnotation;\n","export const timeCompare = (d, datu, timeframe) => {\n  var MS_PER_MINUTE = 60000;\n  var coeffFive = 1000 * 60 * 5;\n  // var coeffOne = 1000 * 60 * 5;\n  var coeffOne = 1000 * 60;\n  if (timeframe == \"1m\") {\n    return (\n      Math.round(d.date.getTime() / coeffOne) * coeffOne ===\n      Math.round(datu.getTime() / coeffOne) * coeffOne\n    );\n  }\n  if (timeframe == \"5m\") {\n    return (\n      Math.round(d.date.getTime() / coeffFive) * coeffFive ===\n      Math.round(datu.getTime() / coeffFive) * coeffFive\n    );\n  }\n  if (timeframe == \"1h\") {\n    // console.log(\n    //   d,\n    //   d.date.getHours() === datu.getHours() &&\n    //     d.date.getDate() === datu.getDate()\n    // );\n    return (\n      d.date.getHours() === datu.getHours() &&\n      d.date.getDate() === datu.getDate()\n    );\n  }\n  if (timeframe == \"1d\") {\n    return d.date.getDate() === datu.getDate();\n  }\n};\n\nexport const getYRangeNums = (data) => {\n  let lowNum;\n  let highNum;\n  for (let i = 0; i < data.length; i++) {\n    if (i == 0) {\n      lowNum = data[0].low;\n      highNum = data[0].high;\n    }\n    if (data[i].low < lowNum) {\n      lowNum = data[i].low;\n    }\n    if (data[i].high > highNum) {\n      highNum = data[i].high;\n    }\n    if (i == data.length - 1) {\n      let arr = [];\n      arr.push(lowNum);\n      arr.push(highNum);\n      console.log(arr);\n      return arr;\n    }\n  }\n};\n\nexport const findYValSell = (yLow, yHigh, price) => {\n  // let fullRange = yHigh - yLow;\n  // let myRange = yHigh - parseInt(price);\n  // let outOf = myRange / fullRange;\n  // let multiplied = outOf * 180 + 70;\n  // console.log(outOf, multiplied);\n  return 80;\n};\nexport const findYValBuy = (yLow, yHigh, price) => {\n  let fullRange = yHigh - yLow;\n  let myRange = yHigh - parseInt(price);\n  let outOf = myRange / fullRange;\n  let multiplied = outOf * 180 + 100;\n  console.log(outOf, multiplied);\n  return multiplied;\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Chart from \"./ChartDemo\";\nimport { getData } from \"./utils\";\nimport { Alert } from \"reactstrap\";\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nexport default class ChartComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    // state = {};\n  }\n  componentDidMount() {\n    // getData().then(data => {\n    //   console.log(data);\n    //   this.setState({ data });\n    // });\n    console.log(this.props);\n    console.log(this.props.trades, \"MY TRADES\");\n    let startTime = new Date(this.props.trades[0].timestamp);\n    let endTime = new Date(\n      this.props.trades[this.props.trades.length - 1].timestamp\n    );\n    let diffMs = Math.abs(startTime - endTime);\n    var diffSecs = diffMs / 1000;\n    var diffMins = Math.round(diffSecs / 60); // minutes\n    // var diffHrs = Math.round(diffMins / 60); // hours\n    // let myTimeframe = \"1m\";\n    // console.log(diffMins, \"DIFFMINS\");\n    try {\n      if (diffMins < 60) {\n        //   this.setState({ candleData: this.props.onemin });\n        let allExec = [];\n        for (let i = 0; i < this.props.onemin.length; i++) {\n          let trade = this.props.onemin[i];\n          let newTrade = {};\n          newTrade.date = new Date(trade.timestamp);\n          newTrade.open = parseFloat(trade.open);\n          newTrade.close = parseFloat(trade.close);\n          newTrade.high = parseFloat(trade.high);\n          newTrade.low = parseFloat(trade.low);\n          let strt = new Date(this.props.trades[0].timestamp);\n          let end = new Date(\n            this.props.trades[this.props.trades.length - 1].timestamp\n          );\n          let compare1 = newTrade.date - strt;\n          let compare2 = newTrade.date - end;\n          // console.log(compare1, compare2);\n          let additionalTime = 1000 * 60 * 30;\n          if (compare1 > additionalTime * -1 && compare2 < additionalTime) {\n            allExec.unshift(newTrade);\n          }\n          if (i == this.props.onemin.length - 1) {\n            let timeframe = \"1m\";\n            this.setState({\n              trades: this.props.trades,\n              newDat: allExec,\n              timeframe: timeframe,\n            });\n            // console.log(this.state, \"THIS STATE \" + timeframe);\n          }\n        }\n      }\n      if (diffMins >= 60 && diffMins < 60 * 10) {\n        //   this.setState({ candleData: this.props.fivemin });\n        let allExec = [];\n        for (let i = 0; i < this.props.fivemin.length; i++) {\n          let trade = this.props.fivemin[i];\n          let newTrade = {};\n          newTrade.date = new Date(trade.timestamp);\n          newTrade.open = parseFloat(trade.open);\n          newTrade.close = parseFloat(trade.close);\n          newTrade.high = parseFloat(trade.high);\n          newTrade.low = parseFloat(trade.low);\n          let strt = new Date(this.props.trades[0].timestamp);\n          let end = new Date(\n            this.props.trades[this.props.trades.length - 1].timestamp\n          );\n          let compare1 = newTrade.date - strt;\n          let compare2 = newTrade.date - end;\n          // console.log(compare1, compare2);\n          let additionalTime = 1000 * 60 * 60 * 2;\n          if (compare1 > additionalTime * -1 && compare2 < additionalTime) {\n            allExec.unshift(newTrade);\n          }\n          if (i == this.props.fivemin.length - 1) {\n            let timeframe = \"5m\";\n            this.setState({\n              trades: this.props.trades,\n              newDat: allExec,\n              timeframe: timeframe,\n            });\n            console.log(this.state, \"THIS STATE \" + timeframe);\n          }\n        }\n      }\n      let day = 60 * 24;\n      if (diffMins >= 60 * 10 && diffMins < day * 4) {\n        //   this.setState({ candleData: this.props.onehour });\n        let allExec = [];\n        for (let i = 0; i < this.props.onehour.length; i++) {\n          let trade = this.props.onehour[i];\n          let newTrade = {};\n          newTrade.date = new Date(trade.timestamp);\n          newTrade.open = parseFloat(trade.open);\n          newTrade.close = parseFloat(trade.close);\n          newTrade.high = parseFloat(trade.high);\n          newTrade.low = parseFloat(trade.low);\n          let strt = new Date(this.props.trades[0].timestamp);\n          let end = new Date(\n            this.props.trades[this.props.trades.length - 1].timestamp\n          );\n          let compare1 = newTrade.date - strt;\n          let compare2 = newTrade.date - end;\n          let additionalTime = 1000 * 60 * 60 * 20;\n          if (compare1 > additionalTime * -1 && compare2 < additionalTime) {\n            // console.log(compare1, compare2);\n            allExec.unshift(newTrade);\n          }\n          if (i == this.props.onehour.length - 1) {\n            let timeframe = \"1h\";\n            this.setState({\n              trades: this.props.trades,\n              newDat: allExec,\n              timeframe: timeframe,\n            });\n            console.log(this.state, \"THIS STATE \" + timeframe);\n          }\n        }\n      }\n      if (diffMins >= day * 4) {\n        //   this.setState({ candleData: this.props.oneday });\n        let allExec = [];\n        for (let i = 0; i < this.props.oneday.length; i++) {\n          let trade = this.props.oneday[i];\n          let newTrade = {};\n          newTrade.date = new Date(trade.timestamp);\n          newTrade.open = parseFloat(trade.open);\n          newTrade.close = parseFloat(trade.close);\n          newTrade.high = parseFloat(trade.high);\n          newTrade.low = parseFloat(trade.low);\n          let strt = new Date(this.props.trades[0].timestamp);\n          let end = new Date(\n            this.props.trades[this.props.trades.length - 1].timestamp\n          );\n          let compare1 = newTrade.date - strt;\n          let compare2 = newTrade.date - end;\n          let additionalTime = 1000 * 60 * 60 * 24 * 10;\n          if (compare1 > additionalTime * -1 && compare2 < additionalTime) {\n            // console.log(compare1, compare2);\n            allExec.unshift(newTrade);\n          }\n          if (i == this.props.oneday.length - 1) {\n            let timeframe = \"1d\";\n            this.setState({\n              trades: this.props.trades,\n              newDat: allExec,\n              timeframe: timeframe,\n            });\n            console.log(this.state, \"THIS STATE \" + timeframe);\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  render() {\n    if (this.state == null || !this.state.newDat[0]) {\n      return (\n        <Alert color=\"light\">\n          Can't render chart. We don't have small enough candlestick data going\n          back to that date.\n        </Alert>\n      );\n    }\n    console.log(this.state.newDat);\n    return (\n      // <TypeChooser>\n      //   {type => (\n      <Chart\n        type={\"hybrid\"}\n        data={this.state.newDat}\n        trades={this.state.trades}\n        timeframe={this.state.timeframe}\n      />\n      //   )}\n      // </TypeChooser>\n    );\n  }\n}\n\n// render(<ChartComponent />, document.getElementById(\"root\"));\n","import { tsvParse, csvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\nfunction parseData(parse) {\n  return function(d) {\n    d.date = parse(d.date);\n    d.open = +d.open;\n    d.high = +d.high;\n    d.low = +d.low;\n    d.close = +d.close;\n    d.volume = +d.volume;\n\n    return d;\n  };\n}\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\n\nexport function getData() {\n  const promiseMSFT = fetch(\n    \"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\"\n  )\n    .then(response => response.text())\n    .then(data => tsvParse(data, parseData(parseDate)));\n  return promiseMSFT;\n}\n","import styled from \"styled-components\";\nimport {\n  ContainDiv,\n  NextToDiv,\n  NextToDivHeader,\n  RowContainer,\n  ContainDivHeader,\n} from \"../ReChart\";\nimport ReChart from \"../ReChart\";\nimport Sidebar768 from \"../../Menu/768px/Menu\";\nimport { getNewDat } from \"../helpers\";\n\nimport { inject, observer } from \"mobx-react\";\nimport { when } from \"mobx\";\n\n@inject(\"store\")\n@observer\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      globalHash: [],\n      globalHashActive: [\"all\"],\n      data: null,\n      filteredData: null,\n    };\n    this.getGlobalHashtags = this.getGlobalHashtags.bind(this);\n    this.hashtagClicked = this.hashtagClicked.bind(this);\n    this.hashtagClickedBack = this.hashtagClickedBack.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ data: this.props.data });\n    this.getGlobalHashtags(this.props.data);\n  }\n\n  async getGlobalHashtags(data) {\n    for (let i = 0; i < data.fetchTradeHistory.length; i++) {\n      let thisTradeHash = data.fetchTradeHistory[i].hashtags.split(\",\");\n      if (thisTradeHash != \"undefined\") {\n        for (let j = 0; j < thisTradeHash.length; j++) {\n          if (thisTradeHash[j] != \"undefined\") {\n            let newGlobalHash = this.state.globalHash;\n            newGlobalHash.push(thisTradeHash[j]);\n            this.setState({ globalHash: newGlobalHash });\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClickedBack(value) {\n    if (value == \"all\") {\n      console.log(\"DO NOTHING\");\n    } else {\n      let newHashActive = [];\n      let newHash = this.state.globalHash;\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        if (value !== this.state.globalHashActive[i]) {\n          newHashActive.push(this.state.globalHashActive[i]);\n        } else {\n          newHash.push(this.state.globalHashActive[i]);\n        }\n        if (i == this.state.globalHashActive.length - 1) {\n          if (newHashActive[0] == undefined) {\n            let newHash2 = [];\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n              if (j == newHash.length - 1) {\n                this.setState({\n                  globalHash: newHash2,\n                  globalHashActive: [\"all\"],\n                  filteredData: null,\n                });\n              }\n            }\n          } else {\n            let newHash2 = [];\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n              if (j == newHash.length - 1) {\n                getNewDat(this.state.data, newHashActive).then((res) => {\n                  this.setState({\n                    globalHash: newHash2,\n                    globalHashActive: newHashActive,\n                    filteredData: res,\n                  });\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClicked(value) {\n    if (value == \"all\") {\n      let newGlobalHash = this.state.globalHash;\n      let newGlobalHash2 = [];\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        newGlobalHash.push(this.state.globalHashActive[i]);\n        if (i == this.state.globalHashActive.length - 1) {\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (newGlobalHash[j] != \"all\") {\n              newGlobalHash2.push(newGlobalHash[j]);\n            }\n            if (j == newGlobalHash.length - 1) {\n              this.setState({\n                globalHash: newGlobalHash2,\n                globalHashActive: [\"all\"],\n                filteredData: null,\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n    if (this.state.globalHashActive[0] == undefined) {\n      let newArray = [];\n      newArray.push(value);\n      this.setState({ globalHashActive: newArray });\n      const index = this.state.globalHash.indexOf(value);\n      if (index > -1) {\n        let newGlobalHash = this.state.globalHash;\n        newGlobalHash.splice(index, 1);\n        this.setState({ globalHash: newGlobalHash });\n      }\n      return;\n    }\n    for (let i = 0; i < this.state.globalHashActive.length; i++) {\n      if (this.state.globalHashActive[i] == \"all\") {\n        this.state.globalHashActive = [];\n        const index = this.state.globalHash.indexOf(value);\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          let torf = false;\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then((newDat) => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat,\n            });\n            return;\n          });\n        }\n      }\n      if (value == this.state.globalHashActive[i]) {\n        return;\n      }\n      if (i == this.state.globalHashActive.length - 1) {\n        const index = this.state.globalHash.indexOf(value);\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          // newGlobalHash.push(\"all\");\n          let torf = false;\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then((newDat) => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat,\n            });\n            return;\n          });\n        }\n      }\n    }\n  }\n  render() {\n    console.log(\"THIS IS GLOBAL HAS\", this.state.globalHash);\n    console.log(\"IN 786\");\n    if (this.state.data != null) {\n      return (\n        <Wrapper>\n          <Sidebar768 />\n          <ChartWrapper>\n            <TopHashtagDiv>\n              {this.state.globalHashActive.map((hash) => {\n                return (\n                  <TopHashtagIndividualActive\n                    onClick={() => this.hashtagClickedBack(hash)}\n                  >\n                    #{hash}\n                  </TopHashtagIndividualActive>\n                );\n              })}\n              {this.state.globalHash.map((hash) => {\n                return (\n                  <TopHashtagIndividual\n                    onClick={() => this.hashtagClicked(hash)}\n                  >\n                    #{hash}\n                  </TopHashtagIndividual>\n                );\n              })}\n            </TopHashtagDiv>\n            <ContainDivHeader>\n              <NextToDivHeader>Start</NextToDivHeader>\n              <NextToDivHeader>End</NextToDivHeader>\n              <NextToDivHeader>L/S</NextToDivHeader>\n              <NextToDivHeader>Entry</NextToDivHeader>\n              <NextToDivHeader>Exit</NextToDivHeader>\n              <NextToDivHeader>Qty</NextToDivHeader>\n              <NextToDivHeader>RPNL</NextToDivHeader>\n            </ContainDivHeader>\n            <ReChart\n              data={this.state.data}\n              filteredData={this.state.filteredData}\n              initData={this.props.data}\n            />\n          </ChartWrapper>\n        </Wrapper>\n      );\n    }\n  }\n}\n\nconst TopHashtagDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 8px;\n`;\nconst TopHashtagIndividual = styled.div`\n  background: #f8f8ff;\n  color: #000;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst TopHashtagIndividualActive = styled.div`\n  background: #212528;\n  color: #fff;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  background: white;\n  padding: 5px;\n  width: 100%;\n  @media (max-width: 768px) {\n    margin: 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { observer } from \"mobx-react-lite\";\n// import { UserStoreContext } from \"../stores/UserStore.ts\";\nimport styled from \"styled-components\";\nimport FormWrapper from \"../Form2/FormWrapper\";\nimport Input from \"../Form2/Input\";\nimport Label from \"../form/Label\";\nimport Button from \"../shared/Button\";\nconst Cookie = require(\"js-cookie\");\n\nconst ApiKeyForm = () => {\n  const [res, setRes] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [notSubmitted, setNotSubmitted] = useState(true);\n\n  async function handleSubmit(event, client) {\n    event.preventDefault();\n    setNotSubmitted(false);\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const key = formData.get(\"key\");\n    const secret = formData.get(\"secret\");\n    // console.log(email, password);\n    form.reset();\n\n    //check if api key is valid\n\n    let apiRes = client.mutate({\n      mutation: gql`\n        mutation addApiKey($key: String!, $secret: String!) {\n          addApiKey(key: $key, secret: $secret)\n        }\n      `,\n      variables: { key, secret }\n    });\n    apiRes\n      .then(apiRes => {\n        console.log(\"<<RES>>\");\n        console.log(apiRes.data.addApiKey);\n        console.log(typeof apiRes.data.addApiKey);\n        let isTrue = apiRes.data.addApiKey == true;\n        console.log(isTrue);\n        setRes(isTrue);\n        setLoading(false);\n      })\n      .catch(apiRes => {\n        let isTrue = apiRes.data.addApiKey == true;\n        console.log(isTrue);\n        setRes(isTrue);\n        setLoading(false);\n      });\n  }\n  if (notSubmitted == true) {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <div>\n            <div>\n              <Alert color=\"info\">\n                Add a Bitmex api key to import your recent trades and to\n                automatically populate your future trades into the platform.\n              </Alert>\n              <Alert color=\"info\">\n                Note: We keep the keys encrypted in out database, however, make\n                sure to leave \"withdrawals allowed\" UNCHECKED anyways when\n                choosing key settings.\n              </Alert>\n            </div>\n            <FormWrapper>\n              <StyledForm onSubmit={event => handleSubmit(event, client)}>\n                <InputWrapper>\n                  <Label>key</Label>\n                  <Input placeholder=\"\" name=\"key\" type=\"text\" required />\n                </InputWrapper>\n                <InputWrapper>\n                  <Label>secret</Label>\n                  <Input placeholder=\"\" name=\"secret\" type=\"text\" required />\n                </InputWrapper>\n                <div style={{ display: \"flex\", width: \"100%\" }}>\n                  <SubmitButton type=\"submit\">Submit</SubmitButton>\n                </div>\n              </StyledForm>\n            </FormWrapper>\n          </div>\n        )}\n      </ApolloConsumer>\n    );\n  }\n\n  if (loading == true) {\n    return <div>loading</div>;\n  } else {\n    if (res == false) {\n      return <div>error submitting, please reload page and try again</div>;\n    }\n    if (res == true) {\n      console.log(\"IN TRUE\");\n      return (\n        <ApolloConsumer>\n          {client => <Populate client={client} />}\n        </ApolloConsumer>\n      );\n    }\n  }\n};\n\nconst Populate = ({ client }) => {\n  const [res, setRes] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (loading == true) {\n      console.log(\"IN POPULATE\");\n      let myClient = client;\n      let apiRes = myClient.mutate({\n        mutation: gql`\n          mutation {\n            populate\n          }\n        `\n      });\n      apiRes.then(reso => {\n        console.log(\"<<API RES>>\");\n        console.log(reso);\n        console.log(reso.data.populate);\n        setRes(reso.data.populate);\n        setLoading(false);\n      });\n    }\n  }, []);\n\n  const resetApi = async client => {\n    console.log(\"RESETTING\");\n    return new Promise(async resolve => {\n      let key = \"none\";\n      let secret = \"none\";\n\n      let myRes = client.mutate({\n        mutation: gql`\n          mutation addApiKey($key: String!, $secret: String!) {\n            addApiKey(key: $key, secret: $secret)\n          }\n        `,\n        variables: { key, secret }\n      });\n      return await myRes;\n    });\n  };\n\n  if (loading == true) {\n    return <div>loading</div>;\n  } else {\n    if (res == false) {\n      resetApi(client);\n      return <div>api key not valid - reload and try again</div>;\n    } else {\n      //   return <div>api key valid</div>;\n      location.reload();\n    }\n  }\n};\n\nexport default ApiKeyForm;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  ${props =>\n    props.loading &&\n    \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\"};\n`;\n\nconst SubmitButton = styled(Button)`\n  align-self: flex-end;\n  margin-right: 0px;\n  margin-left: auto;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 24px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport FetchQuery from \"./FetchQuery\";\nimport Router from \"next/router\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store, hydrate } from \"../../stores/store\";\n\nconst Cookie = require(\"js-cookie\");\n\n@inject(\"store\")\n@observer\nexport default class DashInitialTerms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    let cook = Cookie.get(\"isAuth\") == \"true\";\n    if (!cook) {\n      Router.push(\"/\");\n    } else if (!!cook) {\n      this.setState({ isAuth: cook });\n    }\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme(false)}>\n        <FetchQuery />\n      </ThemeProvider>\n    );\n  }\n}\n","import styled from \"styled-components\";\nimport {\n  ContainDiv,\n  NextToDiv,\n  NextToDivHeader,\n  RowContainer,\n  ContainDivHeader,\n} from \"./ReChart\";\nimport ReChart from \"./ReChart\";\nimport Sidebar from \"../Menu/Menu\";\nimport { getNewDat } from \"./helpers\";\n\nimport { inject, observer } from \"mobx-react\";\nimport { when } from \"mobx\";\n\n@inject(\"store\")\n@observer\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      globalHash: [],\n      globalHashActive: [\"all\"],\n      data: null,\n      filteredData: null,\n    };\n    this.getGlobalHashtags = this.getGlobalHashtags.bind(this);\n    this.hashtagClicked = this.hashtagClicked.bind(this);\n    this.hashtagClickedBack = this.hashtagClickedBack.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ data: this.props.data });\n    this.getGlobalHashtags(this.props.data);\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n    });\n  }\n\n  async getGlobalHashtags(data) {\n    for (let i = 0; i < data.fetchTradeHistory.length; i++) {\n      let thisTradeHash = data.fetchTradeHistory[i].hashtags.split(\",\");\n      if (thisTradeHash != \"undefined\") {\n        for (let j = 0; j < thisTradeHash.length; j++) {\n          if (thisTradeHash[j] != \"undefined\") {\n            let newGlobalHash = this.state.globalHash;\n            newGlobalHash.push(thisTradeHash[j]);\n            this.setState({ globalHash: newGlobalHash });\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClickedBack(value) {\n    if (value == \"all\") {\n      console.log(\"DO NOTHING\");\n    } else {\n      let newHashActive = [];\n      let newHash = this.state.globalHash;\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        if (value !== this.state.globalHashActive[i]) {\n          newHashActive.push(this.state.globalHashActive[i]);\n        } else {\n          newHash.push(this.state.globalHashActive[i]);\n        }\n        if (i == this.state.globalHashActive.length - 1) {\n          if (newHashActive[0] == undefined) {\n            let newHash2 = [];\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n              if (j == newHash.length - 1) {\n                this.setState({\n                  globalHash: newHash2,\n                  globalHashActive: [\"all\"],\n                  filteredData: null,\n                });\n              }\n            }\n          } else {\n            let newHash2 = [];\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n              if (j == newHash.length - 1) {\n                getNewDat(this.state.data, newHashActive).then((res) => {\n                  this.setState({\n                    globalHash: newHash2,\n                    globalHashActive: newHashActive,\n                    filteredData: res,\n                  });\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClicked(value) {\n    if (value == \"all\") {\n      let newGlobalHash = this.state.globalHash;\n      let newGlobalHash2 = [];\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        newGlobalHash.push(this.state.globalHashActive[i]);\n        if (i == this.state.globalHashActive.length - 1) {\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (newGlobalHash[j] != \"all\") {\n              newGlobalHash2.push(newGlobalHash[j]);\n            }\n            if (j == newGlobalHash.length - 1) {\n              this.setState({\n                globalHash: newGlobalHash2,\n                globalHashActive: [\"all\"],\n                filteredData: null,\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n    if (this.state.globalHashActive[0] == undefined) {\n      let newArray = [];\n      newArray.push(value);\n      this.setState({ globalHashActive: newArray });\n      const index = this.state.globalHash.indexOf(value);\n      if (index > -1) {\n        let newGlobalHash = this.state.globalHash;\n        newGlobalHash.splice(index, 1);\n        this.setState({ globalHash: newGlobalHash });\n      }\n      return;\n    }\n    for (let i = 0; i < this.state.globalHashActive.length; i++) {\n      if (this.state.globalHashActive[i] == \"all\") {\n        this.state.globalHashActive = [];\n        const index = this.state.globalHash.indexOf(value);\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          let torf = false;\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then((newDat) => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat,\n            });\n            return;\n          });\n        }\n      }\n      if (value == this.state.globalHashActive[i]) {\n        return;\n      }\n      if (i == this.state.globalHashActive.length - 1) {\n        const index = this.state.globalHash.indexOf(value);\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          // newGlobalHash.push(\"all\");\n          let torf = false;\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then((newDat) => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat,\n            });\n            return;\n          });\n        }\n      }\n    }\n  }\n  render() {\n    if (this.state.data != null) {\n      return (\n        <Wrapper>\n          <ChartWrapper>\n            <TopHashtagDiv>\n              {this.state.globalHashActive.map((hash) => {\n                return (\n                  <TopHashtagIndividualActive\n                    onClick={() => this.hashtagClickedBack(hash)}\n                  >\n                    #{hash}\n                  </TopHashtagIndividualActive>\n                );\n              })}\n              {this.state.globalHash.map((hash) => {\n                return (\n                  <TopHashtagIndividual\n                    onClick={() => this.hashtagClicked(hash)}\n                  >\n                    #{hash}\n                  </TopHashtagIndividual>\n                );\n              })}\n            </TopHashtagDiv>\n            {this.state.width > 1380 ? (\n              <ContainDivHeader>\n                <NextToDivHeader>Start</NextToDivHeader>\n                <NextToDivHeader>End</NextToDivHeader>\n                <NextToDivHeader>Direction</NextToDivHeader>\n                <NextToDivHeader>Avg Entry</NextToDivHeader>\n                <NextToDivHeader>Avg Exit</NextToDivHeader>\n                <NextToDivHeader>Qty</NextToDivHeader>\n                <NextToDivHeader>Realized Pnl</NextToDivHeader>\n              </ContainDivHeader>\n            ) : (\n              <ContainDivHeader>\n                <NextToDivHeader>Start</NextToDivHeader>\n                <NextToDivHeader>End</NextToDivHeader>\n                <NextToDivHeader>Direction</NextToDivHeader>\n                <NextToDivHeader>Entry</NextToDivHeader>\n                <NextToDivHeader>Exit</NextToDivHeader>\n                <NextToDivHeader>Qty</NextToDivHeader>\n                <NextToDivHeader>RPNL</NextToDivHeader>\n              </ContainDivHeader>\n            )}\n            <ReChart\n              data={this.state.data}\n              filteredData={this.state.filteredData}\n              initData={this.props.data}\n            />\n          </ChartWrapper>\n          <Sidebar />\n        </Wrapper>\n      );\n    }\n  }\n}\n\nconst TopHashtagDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 8px;\n`;\nconst TopHashtagIndividual = styled.div`\n  background: #f8f8ff;\n  color: #000;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst TopHashtagIndividualActive = styled.div`\n  background: #212528;\n  color: #fff;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  background: white;\n  padding: 5px;\n  width: 100%;\n  @media (max-width: 768px) {\n    margin: 0 5vw;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-align;\n`;\n","import { Query } from \"react-apollo\";\nimport ReChart from \"./ReChart\";\nimport Sidebar from \"../Menu/Menu\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { inject, observer } from \"mobx-react\";\nimport {\n  ContainDiv,\n  NextToDiv,\n  NextToDivHeader,\n  RowContainer,\n  ContainDivHeader,\n} from \"./ReChart\";\nimport { getStateDate } from \"../Helpers/Functions\";\nimport { equal } from \"fast-deep-equal\";\nimport ApiKeyForm from \"./AddApiForm\";\nimport TotalDat from \"./Dashboard\";\nimport TotalDat768 from \"./768px/Dashboard\";\nimport { when, reaction } from \"mobx\";\n\n@inject([\"store\"])\n@observer\nclass FetchQuery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { startDate: \"\", endDate: \"\", date: \"\" };\n  }\n\n  componentDidMount() {\n    console.log(\"loaded fetch query component\");\n  }\n\n  clicked = () => {\n    store.isAuth = !store.isAuth;\n    console.log(store.isAuth);\n  };\n\n  render() {\n    let fetchTradeHistoryVariables = {\n      start: this.props.store.startDate,\n      end: this.props.store.endDate,\n      symbol: this.props.store.symbol,\n    };\n    return (\n      <div>\n        <Comp\n          query={fetchTradeHistoryQuery}\n          vars={fetchTradeHistoryVariables}\n        />\n      </div>\n    );\n  }\n}\n\n@inject([\"store\"])\n@observer\nclass Comp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.tempTagsReaction = reaction(\n      () => this.props.store.hasTempTags,\n      (notifications, reaction) => {\n        this.forceUpdate(console.log(\"FORCE UPDATE WAS CALLED\"));\n      }\n    );\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    this.tempTagsReaction();\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    console.log(window.innerWidth);\n    this.setState({\n      width: window.innerWidth,\n    });\n  }\n\n  render() {\n    console.log(\"rerendered\");\n    return (\n      <Query query={this.props.query} variables={this.props.vars}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n          if (data.checkApiKey == false) {\n            return <ApiKeyForm />;\n          } else if (data.checkApiKey == true) {\n            this.props.store.resetHasTempTags();\n            this.props.store.clearTempNotes();\n            this.props.store.clearTempTags();\n            if (this.state.width > 768) {\n              return <TotalDat data={data} />;\n            } else {\n              return <TotalDat768 data={data} />;\n            }\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default FetchQuery;\n\nconst fetchTradeHistoryQuery = gql`\n  query fetchTradeHistory($start: String!, $end: String!, $symbol: String!) {\n    checkApiKey\n\n    fetchTradeHistory(start: $start, end: $end, symbol: $symbol) {\n      id\n      timestamp\n      side\n      price\n      orderQty\n      leavesQty\n      currentQty\n      avgEntryPrice\n      execGrossPnl\n      realizedPnl\n      commission\n      execType\n      orderType\n      trdStart\n      trdEnd\n      notes\n      hashtags\n    }\n\n    fetchOneMinuteCandleHistory(start: $start, end: $end) {\n      id\n      timestamp\n      symbol\n      timeframe\n      open\n      high\n      low\n      close\n      trades\n      volume\n      vwap\n      lastSize\n      homeNotional\n      foreignNotional\n    }\n\n    fetchOneHourCandleHistory(start: $start, end: $end) {\n      id\n      timestamp\n      symbol\n      timeframe\n      open\n      high\n      low\n      close\n      trades\n      volume\n      vwap\n      lastSize\n      homeNotional\n      foreignNotional\n    }\n\n    fetchOneDayCandleHistory(start: $start, end: $end) {\n      id\n      timestamp\n      symbol\n      timeframe\n      open\n      high\n      low\n      close\n      trades\n      volume\n      vwap\n      lastSize\n      homeNotional\n      foreignNotional\n    }\n\n    fetchFiveMinuteCandleHistory(start: $start, end: $end) {\n      id\n      timestamp\n      symbol\n      timeframe\n      open\n      high\n      low\n      close\n      trades\n      volume\n      vwap\n      lastSize\n      homeNotional\n      foreignNotional\n    }\n  }\n`;\n","import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { getNotes, getHashtags } from \"./notesHelpers\";\nimport gql from \"graphql-tag\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes, faEquals } from \"@fortawesome/free-solid-svg-icons\";\nimport { inject, observer } from \"mobx-react\";\nimport { when } from \"mobx\";\nimport equal from \"fast-deep-equal\";\n\n@inject([\"store\"])\n@observer\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", hashtags: [], initHashtags: [] };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.store.tempNotes[0] != undefined) {\n      let isTemp = false;\n      for (let i = 0; i < this.props.store.tempNotes.length; i++) {\n        if (\n          this.props.store.tempNotes[i].time == this.props.firstTrade.timestamp\n        ) {\n          this.setState({ value: this.props.store.tempNotes[i].note });\n          isTemp = true;\n        }\n        if (i == this.props.store.tempNotes.length - 1 && isTemp == false) {\n          this.setState({\n            value: this.props.firstTrade.notes,\n          });\n        }\n      }\n    } else {\n      if (this.props.firstTrade.notes != \"undefined\") {\n        this.setState({\n          value: this.props.firstTrade.notes,\n        });\n      }\n    }\n    let splitTags = this.props.firstTrade.hashtags.split(\",\");\n    splitTags.map((tag) => {\n      this.state.initHashtags.push(tag);\n    });\n  }\n\n  handleChange(client) {\n    return (event) => {\n      // event.preventDefault();\n      this.setState({ value: event.target.value }, this.handleSubmit(client));\n      this.props.store.addTempNote(\n        this.props.firstTrade.timestamp,\n        event.target.value\n      );\n    };\n  }\n\n  removeHashtag(client, hashtag) {\n    return async (event) => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n      let time = this.props.firstTrade.timestamp;\n      client\n        .mutate({\n          mutation: gql`\n            mutation removeHashtag($time: String!, $hashtag: String!) {\n              removeHashtag(time: $time, hashtag: $hashtag)\n            }\n          `,\n          variables: { time, hashtag },\n          refetchQueries: [`fetchTradeHistory`],\n        })\n        .then(() => {\n          this.props.store.changeHasTempTags();\n        });\n    };\n  }\n\n  handleSubmit(client) {\n    return (event) => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n      console.log(\"HASHTAGS\", this.state.hashtags);\n      getNotes(this.state.value).then(async (res) => {\n        let notes = res[0];\n        // let hashtags = res[1];\n        let time = this.props.firstTrade.timestamp;\n        let reso = client.mutate({\n          mutation: gql`\n            mutation addNotes($time: String!, $notes: String!) {\n              addNotes(time: $time, notes: $notes)\n            }\n          `,\n          variables: { time, notes },\n        });\n\n        return await reso;\n      });\n    };\n  }\n  render() {\n    return (\n      <ApolloConsumer>\n        {(client) => (\n          <div>\n            {/* <FullRow> */}\n            <FullRow onSubmit={this.handleSubmit(client)}>\n              <HashtagDiv>\n                <AddHashtag\n                  firstTrade={this.props.firstTrade}\n                  client={client}\n                />\n              </HashtagDiv>\n              {this.state.initHashtags.map((tag) => {\n                if (tag != \"undefined\") {\n                  return (\n                    <SingleHashtagDiv>\n                      <SingleHashtagText>#{tag}</SingleHashtagText>\n                      <SingleHashtagDelete\n                        onClick={this.removeHashtag(client, tag)}\n                      >\n                        <FontAwesomeIcon\n                          icon={faTimes}\n                          size=\"xs\"\n                          style={{\n                            transition: \"none\",\n                          }}\n                        />\n                      </SingleHashtagDelete>\n                    </SingleHashtagDiv>\n                  );\n                }\n              })}\n              <NotesInput\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange(client)}\n              ></NotesInput>\n            </FullRow>\n          </div>\n        )}\n      </ApolloConsumer>\n    );\n  }\n}\n\n@inject([\"store\"])\n@observer\nclass AddHashtag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { clicked: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ client: this.props.client });\n  }\n\n  handleChange(event) {\n    // event.preventDefault();\n    console.log(event.target.value);\n    this.setState({ value: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    // return event => {\n    event.preventDefault();\n    console.log(this.state.value);\n    getHashtags(this.state.value)\n      .then(async (res) => {\n        console.log(\"CLICKED\");\n        let client = this.state.client;\n        // if(typeof)\n        let hashtag = res;\n        console.log(hashtag, \"HASHTAG\");\n        let time = this.props.firstTrade.timestamp;\n        let reso = client.mutate({\n          mutation: gql`\n            mutation addHashtag($time: String!, $hashtag: String!) {\n              addHashtag(time: $time, hashtag: $hashtag)\n            }\n          `,\n          variables: { time, hashtag },\n          refetchQueries: [`fetchTradeHistory`],\n        });\n\n        return await reso;\n      })\n      .then((reso) => {\n        this.setState({ value: \"\" });\n        this.props.store.changeHasTempTags();\n      });\n    // };\n  }\n\n  clicked() {\n    this.state.clicked\n      ? this.setState({ clicked: false })\n      : this.setState({ clicked: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <Popup onClick={this.clicked}>\n          <FontAwesomeIcon icon={faPlus} style={{ transition: \"none\" }} />\n        </Popup>\n        {this.state.clicked ? (\n          <PopupTop>\n            <form onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <AddHashSubmit type=\"submit\" value=\"Add\" />\n            </form>\n          </PopupTop>\n        ) : null}\n      </div>\n    );\n  }\n}\nconst AddHashSubmit = styled.input`\n  background: none;\n  border: none;\n  color: white;\n  font-weight: 500;\n  padding: 2px;\n`;\nconst Popup = styled.div`\n  position: relative;\n  display: inline-block;\n  cursor: pointer;\n  background: #000;\n  padding: 8px;\n  border-radius: 2px;\n`;\n\nconst PopupTop = styled.div`\n  position: absolute;\n  background: #000;\n  z-index: 1;\n  margin: 5px;\n  padding: 2px;\n  border-radius: 2px;\n`;\n// background: #6c757d;\n// background: #b9bdc1;\nconst SingleHashtagDiv = styled.div`\n  background: #f8f8ff;\n  margin: 20px 8px;\n\n  color: black;\n  padding: 10px;\n  padding-top: 8px;\n  white-space: nowrap;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst SingleHashtagText = styled.div`\n  text-align: center;\n  vertical-align: middle;\n`;\nconst SingleHashtagDelete = styled.div`\n  margin-left: 6px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst HashtagDiv = styled.div`\n  margin: auto;\n  text-align: center;\n  vertical-align: middle;\n  color: white;\n  padding: 10px;\n  padding-top: 8px;\n`;\n\nconst FullRow = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst NotesSubmit = styled.input`\n  margin: 9px;\n  padding: 15px;\n  background: #212528;\n  border: none;\n  color: white;\n`;\n\nconst NotesInput = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  box-sizing: border-box;\n  background: #f8f8ff;\n  border: none;\n`;\n","import React, { PureComponent, Component } from \"react\";\nimport {\n  LineChart,\n  AreaChart,\n  Area,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { wideFont } from \"../shared/helpers\";\nimport theme from \"../theme\";\nimport {\n  formatDateMonthOnly,\n  calcCommission,\n  formatDateShort,\n  formatDateShortWithHour,\n} from \"../Helpers/Functions.js\";\nimport { inject, observer } from \"mobx-react\";\nimport MainChart from \"../Charts2/index\";\nimport Notes from \"./Notes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport equal from \"fast-deep-equal\";\nimport { when } from \"mobx\";\n\nexport default class Example extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      data: [],\n      fullTrades: [],\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.createFullTrades = this.createFullTrades.bind(this);\n  }\n\n  createFullTrades(data) {\n    let fullRay = [];\n    let fullTrades = [];\n    for (let i = 0; i < data.fetchTradeHistory.length; i++) {\n      fullRay.unshift(data.fetchTradeHistory[i]);\n      if (i == data.fetchTradeHistory.length - 1) {\n        for (let j = 0; j < fullRay.length; j++) {\n          let dat = fullRay[j];\n          // dat.timestamp = formatDateForRow(dat.timestamp);\n          // fullRay[j] = dat;\n          if (dat.trdStart == true) {\n            let sliced = fullRay.slice(j, fullRay.length);\n            for (let k = 0; k < sliced.length; k++) {\n              if (sliced[k].trdEnd == true && k > 0) {\n                let newsliced = sliced.slice(0, k + 1);\n                fullTrades.unshift(newsliced);\n                break;\n              }\n            }\n          }\n          if (j == fullRay.length - 1) {\n            let returnVal = {};\n            returnVal[\"initData\"] = this.props.initData;\n            returnVal[\"data\"] = fullRay;\n            returnVal[\"fullTrades\"] = fullTrades;\n            return returnVal;\n          }\n        }\n      }\n    }\n  }\n\n  filter() {}\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.filteredData, prevProps.filteredData)) {\n      console.log(\"WAS NOT EQUAL\");\n      // this.updateTrades(this.props.data);\n      let newFullTrades = [];\n      let firstFullTrades = this.createFullTrades(this.props.data);\n      firstFullTrades = firstFullTrades.fullTrades;\n      console.log(this.props.data);\n      if (this.props.filteredData == null) {\n        console.log(\"was null\", firstFullTrades);\n        this.setState({ fullTrades: firstFullTrades });\n      } else {\n        for (let i = 0; i < firstFullTrades.length; i++) {\n          for (let j = 0; j < this.props.filteredData.length; j++) {\n            if (firstFullTrades[i][0].id == this.props.filteredData[j].id) {\n              console.log(\"ADDING\", firstFullTrades[i]);\n              newFullTrades.unshift(firstFullTrades[i]);\n            }\n          }\n          if (i == firstFullTrades.length - 1) {\n            console.log(newFullTrades, \"NEW FULL\");\n            this.setState({ fullTrades: newFullTrades });\n          }\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"MOUNTING\");\n    let returned = this.createFullTrades(this.props.data);\n    if (returned != undefined) {\n      this.setState({\n        data: returned.fullRay,\n        fullTrades: returned.fullTrades,\n        initData: returned.initData,\n      });\n    } else {\n      this.setState({\n        data: this.props.initData,\n        initData: this.props.initData,\n      });\n    }\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    if (window.innerWidth < 768) {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        chartWidth: window.innerWidth * 0.9,\n      });\n    } else if (window.innerWidth < 1024) {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        chartWidth: window.innerWidth * 0.9 - 179,\n      });\n    } else if (window.innerWidth >= 1024) {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        chartWidth: window.innerWidth * 0.8 - 179,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme(false)}>\n        <div style={{ minWidth: this.state.chartWidth }}>\n          {this.state.fullTrades.map((slic, i) => {\n            console.log(slic);\n            return (\n              <MakeCol\n                slic={slic}\n                onemin={this.props.data.fetchOneMinuteCandleHistory}\n                fivemin={this.props.data.fetchFiveMinuteCandleHistory}\n                onehour={this.props.data.fetchOneHourCandleHistory}\n                oneday={this.props.data.fetchOneDayCandleHistory}\n                key={i}\n              />\n            );\n          })}\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\n@inject(\"store\")\n@observer\nclass MakeCol extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      pnl: 0,\n      avgEntryPrice: 0,\n      avgExitPrice: 0,\n      clicked: false,\n      cumQty: 0,\n      readMoreClicked: false,\n    };\n    this.readMoreClicked = this.readMoreClicked.bind(this);\n    this.clicked = this.clicked.bind(this);\n    this.getSlicData = this.getSlicData.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  updateWindowDimensions() {\n    console.log(this.state.width);\n    this.setState({\n      width: window.innerWidth,\n    });\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentDidMount() {\n    console.log(\"MOUNTED\", this.props.slic);\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.slic, prevProps.slic)) {\n      console.log(\"UPDATED\");\n      this.getSlicData();\n    }\n  }\n\n  componentWillMount() {\n    this.getSlicData();\n    this.updateWindowDimensions();\n  }\n\n  getSlicData() {\n    this.state.data = this.props.slic;\n    if (\n      this.state.data[0].side == \"Buy\" &&\n      this.state.data[0].execType == \"Trade\"\n    ) {\n      let avgBuyPrice = 0;\n      let avgSellPrice = 0;\n      let totBuyContracts = 0;\n      let totSellContracts = 0;\n      let buyNum = 0;\n      let sellNum = 0;\n      let totBuyContractsMult = 0;\n      let totSellContractsMult = 0;\n      let realQty = 0;\n      let totCommission = 0;\n      for (let i = 0; i < this.state.data.length; i++) {\n        realQty = this.state.data[i].orderQty - this.state.data[i].leavesQty;\n        if (this.state.data[i].side == \"Buy\") {\n          buyNum += 1;\n          totBuyContracts += realQty;\n          totBuyContractsMult += realQty * parseFloat(this.state.data[i].price);\n        }\n        if (this.state.data[i].side == \"Sell\") {\n          sellNum += 1;\n          totSellContracts += realQty;\n          totSellContractsMult +=\n            realQty * parseFloat(this.state.data[i].price);\n        }\n        // console.log(\"REAL QTY\", realQty);\n        if (\n          this.state.data[i].orderType == \"Limit\" &&\n          this.state.data[i].execType !== \"Funding\"\n        ) {\n          totCommission += (realQty * 0.0025) / this.state.data[i].price;\n        }\n        if (this.state.data[i].orderType == \"Market\") {\n          totCommission -= (realQty * 0.0075) / this.state.data[i].price;\n        }\n        if (this.state.data[i].orderType.includes(\"Stop\")) {\n          totCommission -= (realQty * 0.0075) / this.state.data[i].price;\n        }\n        if (i == this.state.data.length - 1) {\n          avgBuyPrice = totBuyContractsMult / totBuyContracts;\n          avgSellPrice = totSellContractsMult / totSellContracts;\n          let avgExit;\n          let avgEntry;\n          if (avgBuyPrice != null) {\n            // this.state.avgEntryPrice = avgBuyPrice;\n            avgEntry = avgBuyPrice;\n          } else {\n            avgEntry = 0;\n            // this.state.avgEntryPrice = 0;\n          }\n          if (avgSellPrice != null) {\n            // this.state.avgExitPrice = avgSellPrice;\n            avgExit = avgSellPrice;\n          } else {\n            // this.state.avgExitPrice = 0;\n            avgExit = 0;\n          }\n          this.state.cumQty = totBuyContracts;\n          let thePnl = (1 / avgBuyPrice - 1 / avgSellPrice) * totSellContracts;\n          if (thePnl != null) {\n            let myPnl = thePnl + totCommission;\n            this.setState(\n              {\n                pnl: myPnl,\n                avgEntryPrice: avgEntry,\n                avgExitPrice: avgExit,\n              },\n              () => console.log(\"STATE IS SET\")\n            );\n            this.props.store.addPnl(myPnl);\n          } else {\n            // this.state.pnl = 0;\n            this.setState(\n              {\n                pnl: 0,\n                avgEntryPrice: avgEntry,\n                avgExitPrice: avgExit,\n              },\n              () => console.log(\"STATE IS SET\")\n            );\n          }\n        }\n      }\n    }\n    if (\n      this.state.data[0].side == \"Sell\" &&\n      this.state.data[0].execType == \"Trade\"\n    ) {\n      let totBuyContracts = 0;\n      let totSellContracts = 0;\n      let buyNum = 0;\n      let sellNum = 0;\n      let totBuyContractsMult = 0;\n      let totSellContractsMult = 0;\n      let realQty = 0;\n      let totCommission = 0;\n      for (let i = 0; i < this.state.data.length; i++) {\n        realQty = this.state.data[i].orderQty - this.state.data[i].leavesQty;\n        if (this.state.data[i].side == \"Buy\") {\n          // totBuyPrice += parseFloat(this.state.data[i].price);\n          buyNum += 1;\n          totBuyContracts += realQty;\n          totBuyContractsMult += realQty * parseFloat(this.state.data[i].price);\n        }\n        if (this.state.data[i].side == \"Sell\") {\n          sellNum += 1;\n          totSellContracts += realQty;\n          totSellContractsMult +=\n            realQty * parseFloat(this.state.data[i].price);\n        }\n        // console.log(\"REAL QTY\", realQty);\n        if (\n          this.state.data[i].orderType == \"Limit\" &&\n          this.state.data[i].execType !== \"Funding\"\n        ) {\n          totCommission += (realQty * 0.0025) / this.state.data[i].price;\n        }\n        if (this.state.data[i].orderType == \"Market\") {\n          totCommission -= (realQty * 0.0075) / this.state.data[i].price;\n        }\n        if (this.state.data[i].orderType.includes(\"Stop\")) {\n          totCommission -= (realQty * 0.0075) / this.state.data[i].price;\n        }\n        if (i == this.state.data.length - 1) {\n          let avgBuyPrice = totBuyContractsMult / totBuyContracts;\n          let avgSellPrice = totSellContractsMult / totSellContracts;\n          let pnl = (1 / avgBuyPrice - 1 / avgSellPrice) * totBuyContracts;\n          let avgEntry;\n          let avgExit;\n          if (avgBuyPrice != null) {\n            avgExit = avgBuyPrice;\n          } else {\n            avgExit = 0;\n          }\n          if (avgSellPrice != null) {\n            avgEntry = avgSellPrice;\n          } else {\n            avgEntry = 0;\n          }\n          this.state.cumQty = totSellContracts;\n          if (pnl != null) {\n            let myPnl = pnl + totCommission;\n            this.setState(\n              {\n                pnl: myPnl,\n                avgEntryPrice: avgEntry,\n                avgExitPrice: avgExit,\n              },\n              () => console.log(\"STATE IS SET\")\n            );\n            this.props.store.addPnl(myPnl);\n          } else {\n            // this.state.pnl = 0;\n            this.setState(\n              {\n                pnl: 0,\n                avgEntryPrice: avgEntry,\n                avgExitPrice: avgExit,\n              },\n              () => console.log(\"STATE IS SET\")\n            );\n          }\n        }\n      }\n    }\n  }\n\n  clicked() {\n    // console.log(this.state);\n    if (this.state.clicked == false) {\n      this.setState({ clicked: true });\n    } else {\n      this.setState({ clicked: false });\n    }\n  }\n  readMoreClicked() {\n    // console.log(this.state);\n    if (this.state.readMoreClicked == false) {\n      this.setState({ readMoreClicked: true });\n    } else {\n      this.setState({ readMoreClicked: false });\n    }\n  }\n\n  render() {\n    // console.log(this.state.data[0], \"DAT ZERO\");\n    // if (this.state.data[0] != undefined) {\n    // if (this.state.width != null) {\n    if (this.state.width > 1380) {\n      if (this.state.clicked == false) {\n        return (\n          <ContainDiv onClick={this.clicked.bind(this)}>\n            <NextToDiv>\n              {formatDateMonthOnly(this.state.data[0].timestamp)}\n            </NextToDiv>\n            <NextToDiv>\n              {formatDateMonthOnly(\n                this.state.data[this.state.data.length - 1].timestamp\n              )}\n            </NextToDiv>\n            <IsShort side={this.state.data[0].side} />\n            <NextToDiv>${this.state.avgEntryPrice.toFixed(1)}</NextToDiv>\n            <NextToDiv>${this.state.avgExitPrice.toFixed(1)}</NextToDiv>\n            <NextToDiv>{this.state.cumQty}</NextToDiv>\n            <NextToDiv>{this.state.pnl.toFixed(4) + \"xbt\"}</NextToDiv>\n          </ContainDiv>\n        );\n      } else {\n        return (\n          <TotalDetails>\n            {this.state.readMoreClicked ? (\n              <MoreBoxTall>\n                <ContainDivClicked onClick={this.clicked.bind(this)}>\n                  <NextToDiv>\n                    {formatDateMonthOnly(this.state.data[0].timestamp)}\n                  </NextToDiv>\n                  <NextToDiv>\n                    {formatDateMonthOnly(\n                      this.state.data[this.state.data.length - 1].timestamp\n                    )}\n                  </NextToDiv>\n                  <IsShort side={this.state.data[0].side} />\n                  <NextToDiv>${this.state.avgEntryPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>${this.state.avgExitPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>{this.state.cumQty}</NextToDiv>\n                  <NextToDiv>{this.state.pnl.toFixed(4) + \"xbt\"}</NextToDiv>\n                </ContainDivClicked>\n                <ContainDivBlack>\n                  <NextToDivBlack>Timestamp</NextToDivBlack>\n                  <NextToDivBlack>Side</NextToDivBlack>\n                  <NextToDivBlack>Order Type</NextToDivBlack>\n                  <NextToDivBlack>Price</NextToDivBlack>\n                  <NextToDivBlack>Order Qty</NextToDivBlack>\n                  <NextToDivBlack>Leaves Qty</NextToDivBlack>\n                  <NextToDivBlack>Commission</NextToDivBlack>\n                </ContainDivBlack>\n\n                {this.state.data.map((dat) => {\n                  return (\n                    <ContainDivBlack onClick={this.clicked.bind(this)}>\n                      <NextToDivBlack>\n                        {formatDateMonthOnly(dat.timestamp)}\n                      </NextToDivBlack>\n                      {dat.execType == \"Trade\" ? (\n                        <NextToDivBlack>{dat.side}</NextToDivBlack>\n                      ) : (\n                        <NextToDivBlack>{dat.execType}</NextToDivBlack>\n                      )}\n                      <NextToDivBlack>{dat.orderType}</NextToDivBlack>\n                      <NextToDivBlack>${dat.price.toString()}</NextToDivBlack>\n                      <NextToDivBlack>{dat.orderQty}</NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.leavesQty == \"0\" ? \"\" : dat.leavesQty}\n                      </NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.execType == \"Funding\"\n                          ? \"\"\n                          : calcCommission(\n                              dat.price,\n                              dat.side,\n                              dat.orderQty,\n                              dat.leavesQty,\n                              dat.orderType\n                            )}\n                      </NextToDivBlack>\n                    </ContainDivBlack>\n                  );\n                })}\n                <ReadMoreTall>\n                  <ReadMoreInner onClick={this.readMoreClicked}>\n                    <FontAwesomeIcon\n                      icon={faCaretUp}\n                      style={{ transition: \"none\" }}\n                    />\n                  </ReadMoreInner>\n                </ReadMoreTall>\n              </MoreBoxTall>\n            ) : (\n              <MoreBoxShort>\n                <ContainDivClicked onClick={this.clicked}>\n                  <NextToDiv>\n                    {formatDateMonthOnly(this.state.data[0].timestamp)}\n                  </NextToDiv>\n                  <NextToDiv>\n                    {formatDateMonthOnly(\n                      this.state.data[this.state.data.length - 1].timestamp\n                    )}\n                  </NextToDiv>\n                  <IsShort side={this.state.data[0].side} />\n                  <NextToDiv>${this.state.avgEntryPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>${this.state.avgExitPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>{this.state.cumQty}</NextToDiv>\n                  <NextToDiv>{this.state.pnl.toFixed(4) + \"xbt\"}</NextToDiv>\n                </ContainDivClicked>\n                <ContainDivBlack>\n                  <NextToDivBlack>Timestamp</NextToDivBlack>\n                  <NextToDivBlack>Side</NextToDivBlack>\n                  <NextToDivBlack>Order Type</NextToDivBlack>\n                  <NextToDivBlack>Price</NextToDivBlack>\n                  <NextToDivBlack>Order Qty</NextToDivBlack>\n                  <NextToDivBlack>Leaves Qty</NextToDivBlack>\n                  <NextToDivBlack>Commission</NextToDivBlack>\n                </ContainDivBlack>\n\n                {this.state.data.map((dat) => {\n                  return (\n                    <ContainDivBlack onClick={this.clicked.bind(this)}>\n                      <NextToDivBlack>\n                        {formatDateMonthOnly(dat.timestamp)}\n                      </NextToDivBlack>\n                      {dat.execType == \"Trade\" ? (\n                        <NextToDivBlack>{dat.side}</NextToDivBlack>\n                      ) : (\n                        <NextToDivBlack>{dat.execType}</NextToDivBlack>\n                      )}\n                      <NextToDivBlack>{dat.orderType}</NextToDivBlack>\n                      <NextToDivBlack>${dat.price.toString()}</NextToDivBlack>\n                      <NextToDivBlack>{dat.orderQty}</NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.leavesQty == \"0\" ? \"\" : dat.leavesQty}\n                      </NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.execType == \"Funding\"\n                          ? \"\"\n                          : calcCommission(\n                              dat.price,\n                              dat.side,\n                              dat.orderQty,\n                              dat.leavesQty,\n                              dat.orderType\n                            )}\n                      </NextToDivBlack>\n                    </ContainDivBlack>\n                  );\n                })}\n                <ReadMore>\n                  <ReadMoreInner onClick={this.readMoreClicked}>\n                    <FontAwesomeIcon\n                      icon={faCaretDown}\n                      style={{ transition: \"none\" }}\n                    />\n                  </ReadMoreInner>\n                </ReadMore>\n              </MoreBoxShort>\n            )}\n            <Notes firstTrade={this.state.data[0]} />\n            <MainChart\n              onemin={this.props.onemin}\n              fivemin={this.props.fivemin}\n              onehour={this.props.onehour}\n              oneday={this.props.oneday}\n              trades={this.state.data}\n            />\n          </TotalDetails>\n        );\n      }\n    } else {\n      if (this.state.clicked == false) {\n        return (\n          <ContainDiv onClick={this.clicked.bind(this)}>\n            <NextToDiv>\n              {formatDateShort(this.state.data[0].timestamp)}\n            </NextToDiv>\n            <NextToDiv>\n              {formatDateShort(\n                this.state.data[this.state.data.length - 1].timestamp\n              )}\n            </NextToDiv>\n            <IsShort side={this.state.data[0].side} />\n            <NextToDiv>${this.state.avgEntryPrice.toFixed(1)}</NextToDiv>\n            <NextToDiv>${this.state.avgExitPrice.toFixed(1)}</NextToDiv>\n            <NextToDiv>{this.state.cumQty}</NextToDiv>\n            <NextToDiv>{this.state.pnl.toFixed(4) + \"xbt\"}</NextToDiv>\n          </ContainDiv>\n        );\n      } else {\n        return (\n          <TotalDetails>\n            {this.state.readMoreClicked ? (\n              <MoreBoxTall>\n                <ContainDivClicked onClick={this.clicked.bind(this)}>\n                  <NextToDiv>\n                    {formatDateShort(this.state.data[0].timestamp)}\n                  </NextToDiv>\n                  <NextToDiv>\n                    {formatDateShort(\n                      this.state.data[this.state.data.length - 1].timestamp\n                    )}\n                  </NextToDiv>\n                  <IsShort side={this.state.data[0].side} />\n                  <NextToDiv>${this.state.avgEntryPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>${this.state.avgExitPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>{this.state.cumQty}</NextToDiv>\n                  <NextToDiv>{this.state.pnl.toFixed(4) + \"xbt\"}</NextToDiv>\n                </ContainDivClicked>\n                <ContainDivBlack>\n                  <NextToDivBlack>Timestamp</NextToDivBlack>\n                  <NextToDivBlack>Side</NextToDivBlack>\n                  <NextToDivBlack>Type</NextToDivBlack>\n                  <NextToDivBlack>Price</NextToDivBlack>\n                  <NextToDivBlack>Qty</NextToDivBlack>\n                  <NextToDivBlack>Leaves</NextToDivBlack>\n                  <NextToDivBlack>Commission</NextToDivBlack>\n                </ContainDivBlack>\n\n                {this.state.data.map((dat) => {\n                  return (\n                    <ContainDivBlack onClick={this.clicked.bind(this)}>\n                      <NextToDivBlackTime>\n                        {formatDateShortWithHour(dat.timestamp)}\n                      </NextToDivBlackTime>\n                      {dat.execType == \"Trade\" ? (\n                        <NextToDivBlack>{dat.side}</NextToDivBlack>\n                      ) : (\n                        <NextToDivBlack>{dat.execType}</NextToDivBlack>\n                      )}\n                      <NextToDivBlack>{dat.orderType}</NextToDivBlack>\n                      <NextToDivBlack>${dat.price.toString()}</NextToDivBlack>\n                      <NextToDivBlack>{dat.orderQty}</NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.leavesQty == \"0\" ? \"\" : dat.leavesQty}\n                      </NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.execType == \"Funding\"\n                          ? \"\"\n                          : calcCommission(\n                              dat.price,\n                              dat.side,\n                              dat.orderQty,\n                              dat.leavesQty,\n                              dat.orderType\n                            )}\n                      </NextToDivBlack>\n                    </ContainDivBlack>\n                  );\n                })}\n                <ReadMoreTall>\n                  <ReadMoreInner onClick={this.readMoreClicked}>\n                    <FontAwesomeIcon\n                      icon={faCaretUp}\n                      style={{ transition: \"none\" }}\n                    />\n                  </ReadMoreInner>\n                </ReadMoreTall>\n              </MoreBoxTall>\n            ) : (\n              <MoreBoxShort>\n                <ContainDivClicked onClick={this.clicked}>\n                  <NextToDiv>\n                    {formatDateShort(this.state.data[0].timestamp)}\n                  </NextToDiv>\n                  <NextToDiv>\n                    {formatDateShort(\n                      this.state.data[this.state.data.length - 1].timestamp\n                    )}\n                  </NextToDiv>\n                  <IsShort side={this.state.data[0].side} />\n                  <NextToDiv>${this.state.avgEntryPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>${this.state.avgExitPrice.toFixed(1)}</NextToDiv>\n                  <NextToDiv>{this.state.cumQty}</NextToDiv>\n                  <NextToDiv>{this.state.pnl.toFixed(4) + \"xbt\"}</NextToDiv>\n                </ContainDivClicked>\n                <ContainDivBlack>\n                  <NextToDivBlack>Timestamp</NextToDivBlack>\n                  <NextToDivBlack>Side</NextToDivBlack>\n                  <NextToDivBlack>Type</NextToDivBlack>\n                  <NextToDivBlack>Price</NextToDivBlack>\n                  <NextToDivBlack>Qty</NextToDivBlack>\n                  <NextToDivBlack>Leaves</NextToDivBlack>\n                  <NextToDivBlack>Commission</NextToDivBlack>\n                </ContainDivBlack>\n\n                {this.state.data.map((dat) => {\n                  return (\n                    <ContainDivBlack onClick={this.clicked.bind(this)}>\n                      <NextToDivBlackTime>\n                        {formatDateShortWithHour(dat.timestamp)}\n                      </NextToDivBlackTime>\n                      {dat.execType == \"Trade\" ? (\n                        <NextToDivBlack>{dat.side}</NextToDivBlack>\n                      ) : (\n                        <NextToDivBlack>{dat.execType}</NextToDivBlack>\n                      )}\n                      <NextToDivBlack>{dat.orderType}</NextToDivBlack>\n                      <NextToDivBlack>${dat.price.toString()}</NextToDivBlack>\n                      <NextToDivBlack>{dat.orderQty}</NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.leavesQty == \"0\" ? \"\" : dat.leavesQty}\n                      </NextToDivBlack>\n                      <NextToDivBlack>\n                        {dat.execType == \"Funding\"\n                          ? \"\"\n                          : calcCommission(\n                              dat.price,\n                              dat.side,\n                              dat.orderQty,\n                              dat.leavesQty,\n                              dat.orderType\n                            )}\n                      </NextToDivBlack>\n                    </ContainDivBlack>\n                  );\n                })}\n                <ReadMore>\n                  <ReadMoreInner onClick={this.readMoreClicked}>\n                    <FontAwesomeIcon\n                      icon={faCaretDown}\n                      style={{ transition: \"none\" }}\n                    />\n                  </ReadMoreInner>\n                </ReadMore>\n              </MoreBoxShort>\n            )}\n            <Notes firstTrade={this.state.data[0]} />\n            <MainChart\n              onemin={this.props.onemin}\n              fivemin={this.props.fivemin}\n              onehour={this.props.onehour}\n              oneday={this.props.oneday}\n              trades={this.state.data}\n            />\n          </TotalDetails>\n        );\n      }\n    }\n  }\n}\n\nclass IsShort extends Component {\n  render() {\n    if (this.props.side == \"Sell\") {\n      return <NextToDiv>Short</NextToDiv>;\n    } else {\n      return <NextToDiv>Long</NextToDiv>;\n    }\n  }\n}\n\nexport const ContainDiv = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  height: 52px;\n\n  border-bottom: 1px solid #d3d3d3;\n  &:hover {\n    border-left: 3px solid black;\n    cursor: pointer;\n  }\n`;\nexport const ContainDivClicked = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  height: 52px;\n\n  border-bottom: 1px solid #d3d3d3;\n\n  border-left: 5px solid black;\n  cursor: pointer;\n`;\nexport const ContainDivBlack = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  height: 42px;\n  background: #f8f8ff;\n\n  border-bottom: 1px solid #f2f2f2;\n`;\nexport const ContainDivHeader = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  height: 52px;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const NextToDiv = styled.div`\n  display: inline-block;\n  width: 30%;\n  padding: 10px;\n  padding-left: 12px;\n  @media (max-width: 550px) {\n    font-size: 13px;\n  }\n`;\n\nexport const NextToDivBlack = styled.div`\n  display: inline-block;\n  width: 30%;\n  padding: 5px;\n  padding-left: 12px;\n  font-size: 14px;\n`;\nexport const NextToDivBlackTime = styled.div`\n  display: inline-block;\n  width: 30%;\n  padding: 5px;\n  padding-left: 12px;\n  font-size: 14px;\n  @media (max-width: 1200px) {\n    font-size: 13px;\n  }\n  @media (max-width: 663px) {\n    padding-top: 0px !important;\n  }\n`;\nexport const NextToDivHeader = styled.div`\n  display: inline-block;\n  width: 30%;\n  color: #78838e;\n  font-weight: 600;\n  display: inline-block;\n  text-transform: uppercase;\n  padding: 10px;\n  padding-left: 12px;\n`;\n\nconst ReadMore = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  margin: 0;\n  padding: 10px 0;\n\n  /* \"transparent\" only works here because == rgba(0,0,0,0) */\n\n  background-image: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    color-stop(0, rgba(255, 0, 0, 0)),\n    color-stop(1, rgba(248, 248, 255, 1))\n  );\n`;\nconst ReadMoreTall = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  margin: 0;\n  padding: 10px 0;\n`;\n// background-image: linear-gradient(to bottom, transparent, black);\nconst MoreBoxShort = styled.div`\n  max-height: 200px;\n  position: relative;\n  overflow: hidden;\n`;\nconst MoreBoxTall = styled.div`\n  max-height: none;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst TotalDetails = styled.div``;\n// border: 1px solid rgba(33, 37, 40, 0.7);\nconst ReadMoreInner = styled.div`\n  color: rgba(33, 37, 40, 1);\n\n  padding: 0;\n  margin: auto;\n  width: 30px;\n  border-radius: 2px;\n  -webkit-transition-property: none;\n  -moz-transition-property: none;\n  -o-transition-property: none;\n  transition-property: none;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgba(33, 37, 40, 1);\n    color: #fff;\n    -webkit-transition-property: none;\n    -moz-transition-property: none;\n    -o-transition-property: none;\n    transition-property: none;\n  }\n  font-size: 20px;\n`;\n","export const getNewDat = async (oldDat, hashtags) => {\n  //   console.log(\"IN GET NEW DAT\");\n  //   console.log(oldDat);\n  let newTrades = [];\n  let oldTrades = oldDat.fetchTradeHistory;\n  for (let i = 0; i < oldTrades.length; i++) {\n    let tradeHashtags = oldTrades[i].hashtags.split(\",\");\n    // console.log(\"trade \" + i.toString() + \" hashtags \", tradeHashtags);\n    let oldTrade = oldTrades[i];\n    // console.log(tradeHashtags, \"THIS TRADE HASHTAGS\");\n    console.log(tradeHashtags);\n    if (tradeHashtags[0] != \"undefined\") {\n      for (let j = 0; j < tradeHashtags.length; j++) {\n        for (let m = 0; m < hashtags.length; m++) {\n          if (hashtags[m] == tradeHashtags[j]) {\n            // console.log(\"EQUALS\");\n            if (newTrades[0] == undefined) {\n              newTrades.push(oldTrade);\n            } else {\n              newTrades.push(oldTrade);\n              // let isIn = false;\n              // for (let k = 0; k < newTrades.length; k++) {\n              //   if (newTrades[k].id == oldTrade.id) {\n              //     let isIn = true;\n              //   }\n              //   if (k == newTrades.length - 1) {\n              //     if (isIn == false) {\n              //       newTrades.push(oldTrade);\n              //     } else {\n              //       console.log(newTrades);\n              //     }\n              //   }\n              // }\n            }\n          }\n        }\n      }\n    }\n    if (i == oldTrades.length - 1) {\n      console.log(newTrades, \"FILTERED TRADES\");\n      return newTrades;\n      // let newDat = oldDat;\n      // newDat.fetchTradeHistory = newTrades;\n      // //   console.log(oldDat, \"NEW Dat\");\n      // return newDat;\n    }\n  }\n};\n","export async function getNotes(inputVal) {\n  return new Promise(resolve => {\n    let notes;\n    if (inputVal != null) {\n      notes = inputVal;\n    } else {\n      notes = \"undefined\";\n    }\n    // let hashtags = \"\";\n    // if (inputHashtags != null) {\n    //   for (let k = 0; k < inputHashtags.length; k++) {\n    //     hashtags += inputHashtags[k] + \" \";\n    //     if (k == inputHashtags.length - 1) {\n    //       let endArr = [];\n    //       endArr.push(notes);\n    //       endArr.push(hashtags);\n    //       resolve(endArr);\n    //     }\n    //   }\n    // } else {\n    let endArr = [];\n    endArr.push(notes);\n    // endArr.push(hashtags);\n    resolve(endArr);\n    // }\n  });\n}\nexport async function getHashtags(inputHashtags) {\n  console.log(inputHashtags, \"INP HASH\");\n  return new Promise(resolve => {\n    let hashtags;\n    if (inputHashtags != null && inputHashtags != undefined) {\n      hashtags = inputHashtags;\n    } else {\n      hashtags = \"undefined\";\n    }\n    console.log(hashtags, \"END HASHS\");\n    resolve(hashtags);\n  });\n}\n","import styled from \"styled-components\";\n\nconst FormWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  margin: 0 auto;\n  border: 1px solid ${props => props.theme.border};\n  border-radius: 2px;\n  width: 375px;\n  padding: 24px;\n  background-color: ${props => props.theme.foreground};\n\n  @media (max-width: 768px) {\n    padding: 16px;\n  }\n\n  @media (max-width: ${props => (props.wide ? \"600px\" : \"375px\")}) {\n    border-radius: 0;\n    border-left: none;\n    border-right: none;\n  }\n`;\n\nexport default FormWrapper;\n\n// max-width: ${props => (props.wide ? \"600px\" : \"375px\")};\n","import styled from \"styled-components\";\n// import { transition } from '../helpers';\n\nconst Input = styled.input`\n  --border: ${props => (props.error ? props.theme.error : props.theme.accent)};\n  --shadow: ${props =>\n    props.error ? props.theme.error + \"4d\" : props.theme.accent + \"4d\"};\n\n  display: block;\n  ${props =>\n    props.error\n      ? `\n    border: 1px solid var(--border)\n    `\n      : `\n    border: 1px solid ${props.theme.border}\n  `};\n  border-radius: 3px;\n  width: 100%;\n  padding: 8px;\n  background-color: ${props => props.theme.inputBackground};\n  font-size: 15px;\n  color: ${props => props.theme.normalText};\n  appearance: none;\n  outline: none;\n  resize: vertical;\n\n  :hover,\n  :focus {\n    border: 1px solid var(--border);\n  }\n\n  :focus {\n    box-shadow: 0 0 0 2px var(--shadow);\n  }\n`;\n\nexport default Input;\n","import Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n// import Dropdown from \"./Dropdown\";\n// import Head from \"Header/Head\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport { useContext, useState } from \"react\";\nimport HeaderLogo from \"./Logo\";\nimport \"./header.scss\";\n\nimport { headerItem, wideFont, link, transition } from \"../shared/helpers\";\nconst Cookie = require(\"js-cookie\");\n\nconst Header = ({ router }) => {\n  const cook = Cookie.get(\"isAuth\");\n  console.log(cook);\n  console.log(router.pathname);\n\n  let authOrNo = cook === \"true\";\n\n  if (!authOrNo) {\n    return (\n      <ThemeProvider theme={theme(false)}>\n        <Wrapper>\n          <HeaderLogo />\n\n          <Link prefetch href=\"/login\">\n            <StyledLink\n              className={router.pathname === \"/login\" ? \"is-active\" : \"\"}\n            >\n              login\n            </StyledLink>\n          </Link>\n\n          <Link prefetch href=\"/register\">\n            <StyledLink\n              className={router.pathname === \"/register\" ? \"is-active\" : \"\"}\n            >\n              register\n            </StyledLink>\n          </Link>\n        </Wrapper>\n      </ThemeProvider>\n    );\n  } else {\n    return (\n      <ThemeProvider theme={theme(false)}>\n        <Wrapper>\n          <HeaderLogo />\n\n          <Link prefetch href=\"/settings\">\n            <StyledLink\n              className={router.pathname === \"/settings\" ? \"is-active\" : \"\"}\n            >\n              settings\n            </StyledLink>\n          </Link>\n\n          <Link prefetch href=\"/logout\">\n            <StyledLink>logout</StyledLink>\n          </Link>\n        </Wrapper>\n      </ThemeProvider>\n    );\n  }\n};\n\nexport default withRouter(Header);\n\nconst StyledLink = styled.div`\n  ${headerItem};\n  ${wideFont};\n  ${link};\n  margin: 0;\n  color: ${props => props.theme.mutedText};\n\n  position: relative;\n  cursor: pointer;\n\n  ::after {\n    ${transition(\"opacity\", \"border-bottom-width\")};\n\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    border-bottom: 1px solid ${props => props.theme.accent};\n  }\n\n  :hover {\n    opacity: 1;\n    color: ${props => props.theme.accent};\n  }\n  :hover::after {\n    opacity: 1;\n    border-bottom: 1px solid ${props => props.theme.accent};\n  }\n\n  &.active::after {\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-bottom: 3px solid ${props => props.theme.accent};\n  }\n  font-weight: 700;\n  letter-spacing: 0.05em;\n  font-size: 12px;\n  text-transform: uppercase;\n`;\n\nconst Wrapper = styled.header`\n  position: sticky;\n  z-index: 10;\n  top: 0;\n  display: flex;\n  align-items: stretch;\n  margin-bottom: 24px;\n  border-bottom: 2px solid #eee;\n  height: 68px;\n  padding: 0 10vw;\n  background-color: ${props => props.theme.foreground};\n  user-select: none;\n  @media (max-width: 425px) {\n    margin-bottom: 16px;\n    height: 40px;\n  }\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n\n// const Wrapper = styled.header`\n//   position: sticky;\n//   z-index: 10;\n//   top: 0;\n//   display: flex;\n//   align-items: stretch;\n//   margin-bottom: 24px;\n//   box-shadow: 0 4px 12px ${props => props.theme.shadow};\n//   border-bottom: 1px solid ${props => props.theme.border};\n//   height: 48px;\n//   padding: 0 10vw;\n//   background-color: ${props => props.theme.foreground};\n//   user-select: none;\n//   @media (max-width: 425px) {\n//     margin-bottom: 16px;\n//     height: 40px;\n//   }\n//   @media (max-width: 768px) {\n//     padding: 0;\n//   }\n// `;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport { headerItem } from \"../shared/helpers\";\nimport bitcoinLogo from \"../../static/bitcoin.svg\";\n\nconst HeaderLogo = () => (\n  <Logo>\n    <Link prefetch href=\"/\">\n      <img\n        src=\"/static/bitcoin-logo.svg\"\n        style={{ margin: \"auto\", maxWidth: \"28px\" }}\n      />\n    </Link>\n    <Link prefetch href=\"/\">\n      <span style={{ marginLeft: \"-2px\" }}>its Journal</span>\n    </Link>\n  </Logo>\n);\n\nexport default HeaderLogo;\n\nconst Logo = styled.div`\n  ${headerItem}\n\n  margin-right: auto;\n  font-size: 21px;\n  font-weight: 500;\n  color: ${props => props.theme.normalText};\n  text-decoration: none;\n\n  @media (max-width: 425px) {\n    padding: 0 8px 0 16px;\n    font-size: 19px;\n  }\n`;\n\n// display: flex;\n// align-items: center;\n// flex-shrink: 0;\n// padding: 0 16px;\n// @media (max-width: 425px) {\n//   padding: 0 8px;\n// }\n","export function formatDateMonthOnly(date) {\n  var monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n\n  var day = theDate.getDate();\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = theDate.getMonth();\n  // var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n\n  return day + \" \" + monthNames[monthIndex] + \", \" + hours + \":\" + mins;\n}\n\nexport function formatDateShort(date) {\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n\n  var day = addZeroBefore(theDate.getDate());\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n\n  return monthIndex.toString() + \"/\" + day.toString();\n}\nexport function formatDateShortWithHour(date) {\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n\n  var day = addZeroBefore(theDate.getDate());\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n\n  return (\n    monthIndex.toString() +\n    \"/\" +\n    day.toString() +\n    \" \" +\n    hours.toString() +\n    \":\" +\n    mins.toString()\n  );\n}\n\nfunction addZeroBefore(n) {\n  return (n < 10 ? \"0\" : \"\") + n;\n}\n\nexport function getStateDate(input) {\n  if (input == \"Today\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateHrs(24);\n    console.log(\"is today\");\n    return dates;\n  }\n  if (input == \"Yesterday\") {\n    let dates = {};\n    dates.end = makeDateHrs(1);\n    dates.start = makeDateDays(2);\n    console.log(\"is yesterday\");\n    return dates;\n  }\n  if (input == \"This Week\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateDays(7);\n    console.log(\"is this week\");\n    return dates;\n  }\n  if (input == \"This Month\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateDays(30);\n    console.log(\"is this month\");\n    return dates;\n  }\n}\nfunction makeDateHrs(hrsBack) {\n  if (hrsBack == 0) {\n    let dt = new Date(new Date().toUTCString());\n    dt = dt.toISOString();\n    return dt;\n  } else {\n    let dt = new Date(new Date().toUTCString());\n    dt.setHours(dt.getHours() - hrsBack);\n    dt = dt.toISOString();\n    return dt;\n  }\n}\nfunction makeDateDays(num) {\n  let dt = new Date(new Date().toUTCString());\n  dt.setDate(dt.getDate() - num);\n  dt = dt.toISOString();\n  console.log(\"getting days back\");\n  return dt;\n}\n\nexport function calcCommission(price, side, qty, leavesQty, orderType) {\n  let realQty = qty - leavesQty;\n  let commission;\n  if (orderType == \"Market\") {\n    commission = (realQty * 0.0075) / price;\n    commission = commission * -1;\n  }\n  if (orderType.includes(\"Stop\")) {\n    commission = (realQty * 0.0075) / price;\n    commission = commission * -1;\n  }\n  if (orderType == \"Limit\") {\n    commission = (realQty * 0.0025) / price;\n  }\n  return commission.toFixed(5);\n}\n","import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SidebarCategoryList = inject(\"store\")(\n  observer(({ store }) => {\n    const [dropdown, setDropdown] = useState(false);\n\n    function clicked(value) {\n      store.resetPnl();\n      store.changeDate(value);\n      console.log(store);\n    }\n    function showDropdown() {\n      if (dropdown == true) {\n        setDropdown(false);\n      } else {\n        setDropdown(true);\n      }\n    }\n\n    return (\n      <Contain>\n        <SetSymbol\n          onClick={() => {\n            showDropdown();\n          }}\n        >\n          {dropdown == true ? (\n            <FontAwesomeIcon\n              icon={faCaretUp}\n              style={{\n                transition: \"none\",\n                marginRight: \"4px\",\n                marginLeft: \"3px\",\n              }}\n            />\n          ) : (\n            <FontAwesomeIcon\n              icon={faCaretDown}\n              style={{\n                transition: \"none\",\n                marginRight: \"4px\",\n                marginLeft: \"3px\",\n              }}\n            />\n          )}\n          {store.date}\n        </SetSymbol>\n        {dropdown == true ? (\n          <DropdownListContainer>\n            <DropdownListItem onClick={() => clicked(\"Today\")}>\n              Today\n            </DropdownListItem>\n            <DropdownListItem onClick={() => clicked(\"Yesterday\")}>\n              Yesterday\n            </DropdownListItem>\n            <DropdownListItem onClick={() => clicked(\"This Week\")}>\n              This Week\n            </DropdownListItem>\n            <DropdownListItem onClick={() => clicked(\"This Month\")}>\n              This Month\n            </DropdownListItem>\n          </DropdownListContainer>\n        ) : null}\n      </Contain>\n    );\n  })\n);\n\nexport default SidebarCategoryList;\n\nconst Contain = styled.div``;\n\nconst CategoryList = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${(props) => props.theme.normalText};\n  color: white;\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${(props) => props.theme.accent};\n  }\n  &:hover {\n    background-color: #fff;\n    color: #212529;\n    cursor: pointer;\n  }\n`;\nconst ItemActive = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${(props) => props.theme.normalText};\n  color: white;\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${(props) => props.theme.accent};\n  }\n\n  background-color: #fff;\n  color: #212529;\n  cursor: pointer;\n`;\n\nconst SetSymbol = styled.div`\n  font-size: 15px;\n  color: #fff;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  height: 100px;\n`;\nconst DropdownListContainer = styled.ul`\n  list-style-type: none;\n`;\nconst DropdownListItem = styled.li`\n  text-align: center;\n  font-size: 15px;\n  color: #fff;\n  :hover {\n    cursor: pointer;\n    color: #000;\n    background-color: #fff;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { wideFont } from \"../../shared/helpers\";\n\nconst SidebarCategoryListHeader = () => <Header>Change Date</Header>;\n\nexport default SidebarCategoryListHeader;\n\nconst Header = styled.span`\n  ${wideFont}\n  font-weight:600;\n  display: block;\n  padding: 12px;\n  text-align: center;\n  color: ${(props) => props.theme.mutedText};\n  color: white;\n`;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../../theme\";\nimport CategoryList from \"./CategoryList\";\nimport Header from \"./Header\";\nimport { inject } from \"mobx-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { ContainDivClicked } from \"../../Dashboard/ReChart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\n// border: 1px solid ${props => props.theme.border};\n\nconst Sidebar = inject(\"store\")(\n  observer(({ store }) => {\n    const [dropdown, setDropdown] = useState(false);\n\n    const clicked = (value) => {\n      store.setSymbol(value);\n      store.changeHasTempTags();\n      setDropdown(false);\n    };\n\n    const showDropdown = () => {\n      if (dropdown == false) {\n        setDropdown(true);\n      } else {\n        setDropdown(false);\n      }\n    };\n    return (\n      <LapContain>\n        <LapInner>\n          <LapFurtherIn>\n            <SetSymbol\n              onClick={() => {\n                showDropdown();\n              }}\n            >\n              {dropdown == true ? (\n                <FontAwesomeIcon\n                  icon={faCaretUp}\n                  style={{\n                    transition: \"none\",\n                    marginRight: \"4px\",\n                    marginLeft: \"3px\",\n                  }}\n                />\n              ) : (\n                <FontAwesomeIcon\n                  icon={faCaretDown}\n                  style={{\n                    transition: \"none\",\n                    marginRight: \"4px\",\n                    marginLeft: \"3px\",\n                  }}\n                />\n              )}\n              {store.symbol}\n            </SetSymbol>\n            {dropdown == true ? (\n              <DropdownListContainer>\n                <DropdownListItem onClick={() => clicked(\"XBTUSD\")}>\n                  XBTUSD\n                </DropdownListItem>\n                <DropdownListItem onClick={() => clicked(\"XBTU20\")}>\n                  XBTU20\n                </DropdownListItem>\n                <DropdownListItem onClick={() => clicked(\"XBTM20\")}>\n                  XBTM20\n                </DropdownListItem>\n              </DropdownListContainer>\n            ) : null}\n          </LapFurtherIn>\n        </LapInner>\n        <LapInner>\n          <LapFurtherIn>\n            <CategoryList />\n          </LapFurtherIn>\n        </LapInner>\n        {store.pnl >= 0 ? (\n          <LapInner>\n            <InnerLapper>+{store.pnl.toFixed(4) + \"xbt\"}</InnerLapper>\n          </LapInner>\n        ) : (\n          <LapInner>\n            <InnerLapper>-{store.pnl.toFixed(4) + \"xbt\"}</InnerLapper>\n          </LapInner>\n        )}\n      </LapContain>\n    );\n  })\n);\n\nconst LapContain = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst LapInner = styled.div`\n  background-color: #212529;\n  margin: 4px 15px;\n  border-radius: 2px;\n`;\nconst LapFurtherIn = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`;\n\nexport default Sidebar;\n\nconst LapperMegaContainer = styled.div`\n  display: absolute;\n`;\nconst LapperContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 24px;\n`;\n\nconst Lapper = styled.aside`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 240px;\n\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: #212529;\n  margin-bottom: 10px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst InnerLapper = styled.div`\n  color: white;\n  text-align: center;\n  margin: auto;\n`;\n\nconst Lapper2 = styled.aside`\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: green;\n  max-height: 30px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Lapper3 = styled.aside`\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: red;\n  max-height: 30px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Lapper4 = styled.aside`\n  display: flex;\n  flex-direction: column;\n\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: #212529;\n  margin-bottom: 10px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst SetSymbol = styled.div`\n  font-size: 15px;\n  color: #fff;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  height: 100px;\n`;\nconst DropdownListContainer = styled.ul`\n  list-style-type: none;\n`;\nconst DropdownListItem = styled.li`\n  text-align: center;\n  font-size: 15px;\n  color: #fff;\n  :hover {\n    cursor: pointer;\n    color: #000;\n    background-color: #fff;\n  }\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nconst SidebarCategoryList = inject(\"store\")(\n  observer(({ store }) => {\n    function handleClick(value) {\n      store.resetPnl();\n      store.changeDate(value);\n      console.log(store);\n    }\n    return (\n      <CategoryList>\n        {store.date == \"Today\" ? (\n          <ItemActive onClick={() => handleClick(\"Today\")}>Today</ItemActive>\n        ) : (\n          <Item onClick={() => handleClick(\"Today\")}>Today</Item>\n        )}\n        {store.date == \"Yesterday\" ? (\n          <ItemActive onClick={() => handleClick(\"Yesterday\")}>\n            Yesterday\n          </ItemActive>\n        ) : (\n          <Item onClick={() => handleClick(\"Yesterday\")}>Yesterday</Item>\n        )}\n        {store.date == \"This Week\" ? (\n          <ItemActive onClick={() => handleClick(\"This Week\")}>\n            This Week\n          </ItemActive>\n        ) : (\n          <Item onClick={() => handleClick(\"This Week\")}>This Week</Item>\n        )}\n        {store.date == \"This Month\" ? (\n          <ItemActive onClick={() => handleClick(\"This Month\")}>\n            This Month\n          </ItemActive>\n        ) : (\n          <Item onClick={() => handleClick(\"This Month\")}>This Month</Item>\n        )}\n        {store.date == 5 ? (\n          <ItemActive onClick={() => handleClick(5)}>Custom</ItemActive>\n        ) : (\n          <Item onClick={() => handleClick(5)}>Custom</Item>\n        )}\n      </CategoryList>\n    );\n  })\n);\n\nexport default SidebarCategoryList;\n\nconst CategoryList = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${(props) => props.theme.normalText};\n  color: white;\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${(props) => props.theme.accent};\n  }\n  &:hover {\n    background-color: #fff;\n    color: #212529;\n    cursor: pointer;\n  }\n`;\nconst ItemActive = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${(props) => props.theme.normalText};\n  color: white;\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${(props) => props.theme.accent};\n  }\n\n  background-color: #fff;\n  color: #212529;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { wideFont } from \"../shared/helpers\";\n\nconst SidebarCategoryListHeader = () => <Header>Change Date</Header>;\n\nexport default SidebarCategoryListHeader;\n\nconst Header = styled.span`\n  ${wideFont}\n  font-weight:600;\n  display: block;\n  padding: 12px;\n  text-align: center;\n  color: ${props => props.theme.mutedText};\n  color: white;\n`;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport CategoryList from \"./CategoryList\";\nimport Header from \"./Header\";\nimport { inject } from \"mobx-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { ContainDivClicked } from \"../Dashboard/ReChart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\n// border: 1px solid ${props => props.theme.border};\n\nconst Sidebar = inject(\"store\")(\n  observer(({ store }) => {\n    const [dropdown, setDropdown] = useState(false);\n\n    const clicked = (value) => {\n      store.setSymbol(value);\n      store.changeHasTempTags();\n      setDropdown(false);\n    };\n\n    const showDropdown = () => {\n      if (dropdown == false) {\n        setDropdown(true);\n      } else {\n        setDropdown(false);\n      }\n    };\n\n    return (\n      <ThemeProvider theme={theme(false)}>\n        <LapperContainer>\n          <Lapper4>\n            <SetSymbol\n              onClick={() => {\n                showDropdown();\n              }}\n            >\n              {dropdown == true ? (\n                <FontAwesomeIcon\n                  icon={faCaretUp}\n                  style={{\n                    transition: \"none\",\n                    marginRight: \"4px\",\n                    marginLeft: \"3px\",\n                  }}\n                />\n              ) : (\n                <FontAwesomeIcon\n                  icon={faCaretDown}\n                  style={{\n                    transition: \"none\",\n                    marginRight: \"4px\",\n                    marginLeft: \"3px\",\n                  }}\n                />\n              )}\n              {store.symbol}\n            </SetSymbol>\n            {dropdown == true ? (\n              <DropdownListContainer>\n                <DropdownListItem onClick={() => clicked(\"XBTUSD\")}>\n                  XBTUSD\n                </DropdownListItem>\n                <DropdownListItem onClick={() => clicked(\"XBTU20\")}>\n                  XBTU20\n                </DropdownListItem>\n                <DropdownListItem onClick={() => clicked(\"XBTM20\")}>\n                  XBTM20\n                </DropdownListItem>\n              </DropdownListContainer>\n            ) : null}\n          </Lapper4>\n          <Lapper>\n            <CategoryList />\n          </Lapper>\n          {store.pnl >= 0 ? (\n            <Lapper2>\n              <InnerLapper>{store.pnl.toFixed(4) + \"xbt\"}</InnerLapper>\n            </Lapper2>\n          ) : (\n            <Lapper3>\n              <InnerLapper>{store.pnl.toFixed(4) + \"xbt\"}</InnerLapper>\n            </Lapper3>\n          )}\n        </LapperContainer>\n      </ThemeProvider>\n    );\n  })\n);\n\nexport default Sidebar;\nconst LapperContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 24px;\n`;\n\nconst Lapper = styled.aside`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 240px;\n\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: #212529;\n  margin-bottom: 10px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst InnerLapper = styled.div`\n  color: white;\n  text-align: center;\n  margin: auto;\n`;\n\nconst Lapper2 = styled.aside`\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: green;\n  max-height: 30px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Lapper3 = styled.aside`\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: red;\n  max-height: 30px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Lapper4 = styled.aside`\n  display: flex;\n  flex-direction: column;\n\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.foreground};\n  background-color: #212529;\n  margin-bottom: 10px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst SetSymbol = styled.div`\n  font-size: 15px;\n  color: #fff;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  height: 100px;\n`;\nconst DropdownListContainer = styled.ul`\n  list-style-type: none;\n`;\nconst DropdownListItem = styled.li`\n  text-align: center;\n  font-size: 15px;\n  color: #fff;\n  :hover {\n    cursor: pointer;\n    color: #000;\n    background-color: #fff;\n  }\n`;\n","import styled from \"styled-components\";\nimport { smallFont } from \"../shared/helpers\";\n\nconst Label = styled.label`\n  ${smallFont};\n  display: block;\n  margin-bottom: 8px;\n  color: ${props => props.theme.mutedText};\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\nimport { transition, wideFont } from \"./helpers\";\n\nconst Button = styled.button`\n  ${transition(\"filter\", \"box-shadow\")};\n  ${wideFont};\n\n  border: none;\n  border-radius: 3px;\n  padding: 8px 24px;\n  background-color: ${props => props.theme.accent};\n  cursor: pointer;\n  color: #ffffff;\n  outline: none;\n\n  :hover {\n    filter: brightness(110%);\n  }\n\n  :active {\n    filter: brightness(90%);\n  }\n\n  :focus {\n    box-shadow: 0 0 0 2px ${props => props.theme.accent + \"4d\"};\n  }\n`;\n\nexport default Button;\n","import { css, keyframes } from \"styled-components\";\n\nexport const smallFont = css`\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nexport const wideFont = css`\n  ${smallFont};\n  font-weight: 700;\n  letter-spacing: 0.05em;\n`;\n\nconst fadeKeyframes = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`;\n\nexport const fade = css`\n  animation: ${fadeKeyframes} 0.25s;\n`;\n\nexport const transition = props => css`\n  transition: all ${props.slow ? \"0.3s\" : \"0.15s\"} ease;\n`;\n\nexport const headerItem = css`\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n  padding: 0 16px;\n  @media (max-width: 425px) {\n    padding: 0 8px;\n  }\n`;\n\nexport const link = props => css`\n  ${transition};\n  text-underline-position: under;\n  text-decoration: none;\n  color: ${props => props.theme.normalText};\n  :hover {\n    ${props.underline && \"text-decoration: underline\"};\n    color: ${props => props.theme.accent};\n  }\n`;\n\nexport const overflow = css`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n","const constants = {\n  error: \"#f5222d\",\n  vote: \"#b6b6b6\",\n  upvote: \"#f9920b\",\n  downvote: \"#2e70ff\"\n};\n\nconst dark = {\n  ...constants,\n  normalText: \"#ffffff\",\n  mutedText: \"#b0b8bf\",\n  border: \"#333333\",\n  accent: \"#33a0ff\",\n  pageBackground: \"#1b1b1b\",\n  voteButtonHover: \"#383838\",\n  foreground: \"#262626\",\n  activeBackground: \"#333333\",\n  inputBackground: \"#333333\",\n  shadow: \"rgba(0, 0, 0, 0.4)\"\n};\n\nconst light = {\n  ...constants,\n  normalText: \"#454f5b\",\n  mutedText: \"#818e99\",\n  border: \"#ebedf0\",\n  accent: \"#1890ff\",\n  pageBackground: \"#f4f6f8\",\n  voteButtonHover: \"#f2f2f2\",\n  foreground: \"#ffffff\",\n  activeBackground: \"#fafafa\",\n  inputBackground: \"#fcfcfc\",\n  shadow: \"rgba(0, 0, 0, 0.05)\"\n};\n\nconst theme = isDark => (isDark ? dark : light);\n\nexport default theme;\n","import React, { useContext, useState } from \"react\";\nimport DashInitialTerms from \"../components/Dashboard/DashInitialTerms\";\nimport App from \"../components/App\";\nimport Header from \"../components/Header/Header\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../components/theme\";\nimport \"../styles.css\";\n// const Cookie = require(\"js-cookie\");\n// import Router from \"next/router\";\n\nexport default function dashboard({ initialState }) {\n  return (\n    <App>\n      <Header />\n      <ThemeProvider theme={theme}>\n        <Wrapper>\n          <DashInitialTerms />\n        </Wrapper>\n      </ThemeProvider>\n    </App>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin: 0 10vw;\n  @media (max-width: 1024px) {\n    margin: 0 5vw;\n  }\n  @media (max-width: 768px) {\n    display: block;\n    margin: 0;\n  }\n`;\n","import { action, observable } from \"mobx\";\nimport { useStaticRendering, observer } from \"mobx-react\";\nimport { create, persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport { getStateDate } from \"../components/Helpers/Functions\";\n\nconst isServer = !process.browser;\nuseStaticRendering(isServer);\n\nexport class Store {\n  @observable lastUpdate = 0;\n  @persist @observable light = true;\n  @persist @observable isAuth = false;\n  @persist @observable startDate = \"2020-02-24T12:43:56.702Z\";\n  @persist @observable endDate = \"2020-02-28T12:43:56.702Z\";\n  @persist @observable symbol = \"XBTUSD\";\n\n  @persist @observable date = \"Today\";\n  @observable pnl = 0;\n  @observable globalHash = [];\n  @persist @observable tempNotes = [];\n  @persist @observable tempTags = [];\n  @persist @observable hasTempTags = false;\n\n  @action changeDate = (newDate) => {\n    let dates = getStateDate(newDate);\n    this.date = newDate;\n    this.startDate = dates.start;\n    this.endDate = dates.end;\n  };\n\n  @action addPnl = (pnl) => {\n    this.pnl += pnl;\n  };\n\n  @action resetPnl = () => {\n    this.pnl = 0;\n  };\n\n  @action pushGlobalHash = (hash) => {\n    this.globalHash.push(hash);\n  };\n\n  @action addTempNote = (time, note) => {\n    if (this.tempNotes[0] == undefined) {\n      let newNote = {};\n      newNote[\"note\"] = note;\n      newNote[\"time\"] = time;\n      this.tempNotes.push(newNote);\n    } else {\n      let alreadyPresentNote = false;\n      for (let i = 0; i < this.tempNotes.length; i++) {\n        if (this.tempNotes[i].time == time) {\n          this.tempNotes[i].note = note;\n          alreadyPresentNote = true;\n        }\n        if (i == this.tempNotes.length - 1 && alreadyPresentNote == false) {\n          let newNote = {};\n          newNote[\"note\"] = note;\n          newNote[\"time\"] = time;\n          this.tempNotes.push(newNote);\n        }\n      }\n    }\n  };\n\n  @action clearTempNotes = () => {\n    this.tempNotes = [];\n  };\n\n  @action addTempTag = (time, tag) => {\n    let newTag = {};\n    newTag[\"tag\"] = tag;\n    newTag[\"time\"] = time;\n    this.tempTags.push(newTag);\n    this.changeHasTempTags();\n  };\n\n  @action clearTempTags = () => {\n    this.tempTags = [];\n  };\n\n  @action changeHasTempTags = () => {\n    this.hasTempTags = true;\n  };\n  @action resetHasTempTags = () => {\n    this.hasTempTags = false;\n  };\n  @action setSymbol = (newSymbol) => {\n    this.symbol = newSymbol;\n  };\n}\n\nlet store = null;\nexport const hydrate = create();\nexport const StoreContext = createContext(new Store());\n\nexport function initializeStore(initialData) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  hydrate(\"store\", store).then(() => {\n    console.log(\"someStore has been hydrated\");\n  });\n\n  return store;\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@fortawesome/free-solid-svg-icons\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"d3-dsv\");","module.exports = require(\"d3-format\");","module.exports = require(\"d3-time-format\");","module.exports = require(\"fast-deep-equal\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"js-cookie\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-persist\");","module.exports = require(\"mobx-react\");","module.exports = require(\"mobx-react-lite\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-stockcharts\");","module.exports = require(\"react-stockcharts/lib/annotation\");","module.exports = require(\"react-stockcharts/lib/axes\");","module.exports = require(\"react-stockcharts/lib/coordinates\");","module.exports = require(\"react-stockcharts/lib/helper\");","module.exports = require(\"react-stockcharts/lib/indicator\");","module.exports = require(\"react-stockcharts/lib/scale\");","module.exports = require(\"react-stockcharts/lib/series\");","module.exports = require(\"react-stockcharts/lib/tooltip\");","module.exports = require(\"react-stockcharts/lib/utils\");","module.exports = require(\"reactstrap\");","module.exports = require(\"recharts\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAOA;AAKA;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAjBA;AAoBA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAhBA;AAkBA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;;;;AA5IA;AACA;AA8IA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AAIA;AAEA;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAGA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAXA;AAYA;;;;AAtLA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAEA;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAfA;AAgBA;AACA;AACA;AA1CA;AA2CA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;AACA;;;;;AACA;AACA;AACA;AACA;;AADA;;;;;AACA;AACA;AAAA;;;;;AACA;AACA;;AADA;;;;;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AACA;AACA;AACA;AAHA;;;;AALA;;;;;AAHA;;;;;AAmBA;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAEA;AACA;;AADA;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AArBA;AAsBA;AACA;AACA;AAAA;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAtBA;AAuBA;AACA;AACA;;AA1DA;;;;;;;;;;;;;;;;;;;;AA4DA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAMA;AAEA;AAAA;AAAA;AADA;AAMA;AAEA;AAEA;AAAA;AAAA;AADA;AAMA;AAYA;AACA;AACA;AAHA;AAQA;AACA;;;;AAhOA;AACA;;AAkOA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvRA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AAAA;AAAA;AAAA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AACA;AAyCA;AACA;AAEA;AAGA;AAAA;AAIA;AAAA;AAOA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAxBA;AAgiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAIA;;;;AArBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;;;;AAEA;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAfA;AAgBA;AACA;AACA;AA1CA;AA2CA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;AACA;;;;;AACA;AACA;AACA;AACA;;AADA;;;;;AACA;AACA;AAAA;;;;;AACA;AACA;;AADA;;;;;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AACA;AACA;AACA;AAHA;;;;AALA;;;;;AAHA;;;;;AAmBA;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAEA;AACA;;AADA;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AArBA;AAsBA;AACA;AACA;AAAA;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAtBA;AAuBA;AACA;AACA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A;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAMA;;;;AA5EA;AA8EA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtTA;AACA;AAWA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAIA;;;;AA5IA;AACA;AADA;AAiJA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAdA;AAeA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA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","sourceRoot":""}