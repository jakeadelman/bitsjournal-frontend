{"version":3,"file":"static/webpack/static/development/pages/index.js.514a27dd5fbebcf7f355.hot-update.js","sources":["webpack:///./components/form/LoginForm.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { observer } from \"mobx-react-lite\";\n// import { UserStoreContext } from \"../stores/UserStore.ts\";\nimport styled from \"styled-components\";\nimport FormWrapper from \"./FormWrapper\";\nimport Input from \"../form/Input\";\nimport Label from \"./Label\";\nimport Button from \"../shared/Button\";\nconst Cookie = require(\"js-cookie\");\n\nconst LoginForm = () => {\n  // const userStore = useContext(UserStoreContext);\n\n  async function handleSubmit(event, client) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    form.reset();\n\n    let r = await client.mutate({\n      mutation: gql`\n        mutation login($email: String!, $password: String!) {\n          login(email: $email, password: $password)\n        }\n      `,\n      variables: { email, password },\n    });\n    console.log(\"LOGGING IN\");\n    //check if login credentials are correct\n    let isTrue = r.data.login == \"true\";\n    if (isTrue == true) {\n      Cookie.set(\"isAuth\", \"true\");\n\n      // userStore.isAuth = true;\n      Router.push(\"/dashboard\");\n    } else {\n      setWrongCredentials(true);\n      return;\n    }\n  }\n\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n\n  return (\n    <ApolloConsumer>\n      {(client) => (\n        <FormWrapper>\n          <StyledForm onSubmit={(event) => handleSubmit(event, client)}>\n            <InputWrapper>\n              <Label>email</Label>\n              <Input placeholder=\"\" name=\"email\" type=\"text\" required />\n            </InputWrapper>\n            <InputWrapper>\n              <Label>password</Label>\n              <Input placeholder=\"\" name=\"password\" type=\"text\" required />\n            </InputWrapper>\n            <div style={{ display: \"flex\", width: \"100%\" }}>\n              <SubmitButton type=\"submit\">Submit</SubmitButton>\n            </div>\n            {wrongCredentials == true ? (\n              <div className=\"login-alert\">\n                <Alert\n                  color=\"secondary\"\n                  isOpen={wrongCredentials == true ? true : false}\n                >\n                  Wrong login credentials\n                </Alert>\n              </div>\n            ) : null}\n          </StyledForm>\n        </FormWrapper>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nexport default LoginForm;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  ${(props) =>\n    props.loading &&\n    \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\"};\n`;\n\nconst SubmitButton = styled(Button)`\n  align-self: flex-end;\n  margin-right: 0px;\n  margin-left: auto;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 24px;\n  width: 100%;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AAKA;AAAA;AAAA;AAAA;AANA;AACA;AATA;AAQA;AAQA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AAEA;AAvBA;AAAA;AACA;AADA;AAyBA;AAzBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkCA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAFA;AAhBA;AA6BA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}