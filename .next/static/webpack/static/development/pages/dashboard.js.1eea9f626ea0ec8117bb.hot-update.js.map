{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.1eea9f626ea0ec8117bb.hot-update.js","sources":["webpack:///./components/Charts2/helpers.js"],"sourcesContent":["export const timeCompare = (d, datu, timeframe) => {\n  var MS_PER_MINUTE = 60000;\n  var coeffFive = 1000 * 60 * 5;\n  // var coeffOne = 1000 * 60 * 5;\n  var coeffOne = 1000 * 60;\n  if (timeframe == \"1m\") {\n    return (\n      Math.round(d.date.getTime() / coeffOne) * coeffOne ===\n      Math.round(datu.getTime() / coeffOne) * coeffOne\n    );\n  }\n  if (timeframe == \"5m\") {\n    return (\n      Math.round(d.date.getTime() / coeffFive) * coeffFive ===\n      Math.round(datu.getTime() / coeffFive) * coeffFive\n    );\n  }\n  if (timeframe == \"1h\") {\n    // console.log(\n    //   d,\n    //   d.date.getHours() === datu.getHours() &&\n    //     d.date.getDate() === datu.getDate()\n    // );\n    return (\n      d.date.getHours() === datu.getHours() &&\n      d.date.getDate() === datu.getDate()\n    );\n  }\n  if (timeframe == \"1d\") {\n    return d.date.getDate() === datu.getDate();\n  }\n};\n\nexport const getYRangeNums = (data) => {\n  let lowNum;\n  let highNum;\n  for (let i = 0; i < data.length; i++) {\n    if (i == 0) {\n      lowNum = data[0].low;\n      highNum = data[0].high;\n    }\n    if (data[i].low < lowNum) {\n      lowNum = data[i].low;\n    }\n    if (data[i].high > highNum) {\n      highNum = data[i].high;\n    }\n    if (i == data.length - 1) {\n      let arr = [];\n      arr.push(lowNum);\n      arr.push(highNum);\n      console.log(arr);\n      return arr;\n    }\n  }\n};\n\nexport const findYValSell = (yLow, yHigh, price) => {\n  console.log(yLow, yHigh, price);\n  let fullRange = yHigh - yLow;\n  let myRange = yHigh - price;\n  return myRange / (fullRange * 1.5);\n  // return yHigh;\n};\nexport const findYValBuy = (yLow, yHigh, price) => {\n  console.log(yLow, yHigh, price);\n  let fullRange = yHigh - yLow;\n  let myRange = yHigh - price;\n  // return myRange / (fullRange / 1.5);\n  return yLow;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}