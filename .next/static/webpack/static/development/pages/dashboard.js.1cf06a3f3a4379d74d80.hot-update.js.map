{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.1cf06a3f3a4379d74d80.hot-update.js","sources":["webpack:///./components/Charts/Notes.js"],"sourcesContent":["import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { getNotes, getHashtags } from \"./helpers\";\nimport gql from \"graphql-tag\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", hashtags: [], initHashtags: [] };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      value: this.props.firstTrade.notes\n    });\n    let splitTags = this.props.firstTrade.hashtags.split(\",\");\n    splitTags.map(tag => {\n      this.state.initHashtags.push(tag);\n    });\n  }\n\n  handleChange(client) {\n    return event => {\n      // event.preventDefault();\n      this.setState({ value: event.target.value }, this.handleSubmit(client));\n    };\n  }\n\n  handleSubmit(client) {\n    return event => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n      // alert(\"A name was submitted: \" + this.state.value);\n      // let splitted = this.state.value.split(\" \");\n      // for (let i = 0; i < splitted.length; i++) {\n      //   if (splitted[i].includes(\"#\")) {\n      //     this.state.hashtags.push(splitted[i]);\n      //   }\n      //   if (i == splitted.length - 1) {\n      console.log(\"HASHTAGS\", this.state.hashtags);\n      getNotes(this.state.value).then(async res => {\n        let notes = res[0];\n        // let hashtags = res[1];\n        let time = this.props.firstTrade.timestamp;\n        let reso = client.mutate({\n          mutation: gql`\n            mutation addNotes($time: String!, $notes: String!) {\n              addNotes(time: $time, notes: $notes)\n            }\n          `,\n          variables: { time, notes }\n        });\n\n        let r = await reso;\n        console.log(r);\n      });\n    };\n  }\n  render() {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <div>\n            {/* <FullRow> */}\n            <FullRow onSubmit={this.handleSubmit(client)}>\n              <HashtagDiv>\n                <AddHashtag\n                  firstTrade={this.props.firstTrade}\n                  client={client}\n                />\n              </HashtagDiv>\n              {this.state.initHashtags.map(tag => {\n                return <SingleHashtagDiv>#{tag}</SingleHashtagDiv>;\n              })}\n              <NotesInput\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange(client)}\n              ></NotesInput>\n            </FullRow>\n          </div>\n        )}\n      </ApolloConsumer>\n    );\n  }\n}\n\nclass AddHashtag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { clicked: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ client: this.props.client });\n  }\n\n  handleChange(event) {\n    // event.preventDefault();\n    console.log(event.target.value);\n    this.setState({ value: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    // return event => {\n    event.preventDefault();\n    getHashtags(this.state.value).then(async res => {\n      console.log(\"CLICKED\");\n      let client = this.state.client;\n      let hashtag = res[0];\n      let time = this.props.firstTrade.timestamp;\n      let reso = client.mutate({\n        mutation: gql`\n          mutation addHashtag($time: String!, $hashtag: String!) {\n            addHashtag(time: $time, hashtag: $hashtag)\n          }\n        `,\n        variables: { time, hashtag }\n      });\n\n      return await reso;\n    });\n    // };\n  }\n\n  clicked() {\n    this.state.clicked\n      ? this.setState({ clicked: false })\n      : this.setState({ clicked: true });\n  }\n\n  render() {\n    return (\n      // <ApolloConsumer>\n      //   {client => (\n      // <div>\n      //   <Dropdown\n      //     direction=\"right\"\n      //     style={{ backgroudColor: \"#fff\", color: \"#fff\" }}\n      //     isOpen={this.state.btnDropright}\n      //     toggle={() => {\n      //       this.setState({ btnDropright: !this.state.btnDropright });\n      //     }}\n      //   >\n      //     <DropdownToggle style={{ backgroudColor: \"#000000\", color: \"#fff\" }}>\n      //       +\n      //     </DropdownToggle>\n      //     <DropdownMenu style={{ backgroudColor: \"#000000\", color: \"#fff\" }}>\n      //       <form onSubmit={this.handleSubmit}>\n      //         <input\n      //           type=\"text\"\n      //           value={this.state.value}\n      //           onChange={this.handleChange}\n      //         />\n      //         <input type=\"submit\" value=\"Submit\" />\n      //       </form>\n      //     </DropdownMenu>\n      //   </Dropdown>\n      // </div>\n      <div>\n        <Popup onClick={this.clicked}>\n          <FontAwesomeIcon icon={faPlus} style={{ transition: \"none\" }} />\n        </Popup>\n        {this.state.clicked ? (\n          <PopupTop>\n            <form onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <AddHashSubmit type=\"submit\" value=\"Submit\" />\n            </form>\n          </PopupTop>\n        ) : null}\n      </div>\n      // )} //{\" \"}\n      // </ApolloConsumer>\n    );\n  }\n}\nconst AddHashSubmit = styled.input``;\nconst Popup = styled.div`\n  position: relative;\n  display: inline-block;\n  cursor: pointer;\n  background: #000;\n  padding: 8px;\n  border-radius: 2px;\n`;\n// const Popup = styled.div``;\n\n// top: 100%;\n// left: 50%;\nconst PopupTop = styled.div`\n  position: relative;\n  background: #000;\n`;\n// background: #6c757d;\n// background: #b9bdc1;\nconst SingleHashtagDiv = styled.div`\n  background: #f8f8ff;\n  margin: 20px 8px;\n  text-align: center;\n  vertical-align: middle;\n  color: black;\n  padding: 10px;\n  padding-top: 8px;\n`;\nconst HashtagDiv = styled.div`\n  margin: auto;\n  text-align: center;\n  vertical-align: middle;\n  color: white;\n  padding: 10px;\n  padding-top: 8px;\n`;\n\nconst FullRow = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst NotesSubmit = styled.input`\n  margin: 9px;\n  padding: 15px;\n  background: #212528;\n  border: none;\n  color: white;\n`;\n\nconst NotesInput = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  box-sizing: border-box;\n  background: #f8f8ff;\n  border: none;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AALA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AANA;AAJA;AAAA;AACA;AADA;AAaA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAgBA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AAGA;AACA;AAFA;AAMA;AACA;AAEA;AACA;AACA;AAHA;AAbA;AAuBA;;;;AAnFA;AACA;;;AAqFA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAMA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AANA;AALA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAMA;AACA;AA9CA;AA+CA;;;;AA/FA;AACA;AAgGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}