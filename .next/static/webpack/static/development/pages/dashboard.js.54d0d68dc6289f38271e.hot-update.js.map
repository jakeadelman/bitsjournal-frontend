{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.54d0d68dc6289f38271e.hot-update.js","sources":["webpack:///./components/Charts/NewChart.js"],"sourcesContent":["import React from \"react\";\nimport { AxisLeft, AxisBottom } from \"@vx/axis\";\nimport { appleStock } from \"@vx/mock-data\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { extent, max } from \"d3-array\";\nimport { AreaClosed, Area, LinePath } from \"@vx/shape\";\nimport { Group } from \"@vx/group\";\nimport { bisector } from \"d3-array\";\nimport { GradientOrangeRed, GradientPinkBlue } from \"@vx/gradient\";\n\nconst xStock = d => new Date(d.date);\nconst yStock = d => d.close;\nconst bisectDate = bisector(d => new Date(d.date)).left;\n\nexport default class extends React.Component {\n  render() {\n    const stock = appleStock;\n    const width = 750;\n    const height = 300;\n\n    const margin = {\n      top: 20,\n      bottom: 20,\n      left: 20,\n      right: 20\n    };\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const x = d => new Date(d.date);\n    const y = d => d.close;\n    // console.log(data);\n\n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(stock, xStock)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true\n    });\n\n    return (\n      <svg\n        width={width}\n        height={height}\n        style={{ borderRadius: \"2px\", border: \"1px solid #818e99\" }}\n      >\n        <rect x={0} y={0} width={width} height={height} fill=\"#ffffff\" />\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n            <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n          </linearGradient>\n        </defs>\n        <Group top={margin.top} left={margin.left}>\n          <LinePath\n            data={stock}\n            x={d => xScale(xStock(d))}\n            y={d => yScale(yStock(d))}\n            yScale={yScale}\n            strokeWidth={1}\n            stroke={\"url(#gradient)\"}\n            fill={\"url(#gradient)\"}\n          />\n        </Group>\n      </svg>\n    );\n  }\n}\n\n// module.exports = { Chart };\n// export default NewChart;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AAxDA;AA4DA;AACA;AACA;;;;;A","sourceRoot":""}