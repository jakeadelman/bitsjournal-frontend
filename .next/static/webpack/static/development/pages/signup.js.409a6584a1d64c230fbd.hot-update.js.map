{"version":3,"file":"static/webpack/static/development/pages/signup.js.409a6584a1d64c230fbd.hot-update.js","sources":["webpack:///./components/Stripe/CheckoutForm.js"],"sourcesContent":["// CheckoutForm.js\nimport React from \"react\";\nimport { injectStripe, CardElement } from \"react-stripe-elements\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n// import AddressSection from \"./AddressSection\";\nimport CardSection from \"./CardSection\";\nimport styled from \"styled-components\";\nimport Button from \"../shared/Button\";\nimport FormWrapper from \"../Form2/FormWrapper\";\nconst Cookie = require(\"js-cookie\");\n\nfunction CheckoutForm({ stripe }) {\n  function handleSubmit(ev, client) {\n    ev.preventDefault();\n    let source;\n    let uid = Cookie.get(\"uid\");\n    stripe\n      .createSource({\n        type: \"card\",\n        owner: { email: \"jacobzadelman@gmail.com\" }\n      })\n      .then(({ source }) => {\n        return source.id.toString();\n      })\n      .then(async source => {\n        console.log(uid, source);\n        console.log(typeof source);\n        console.log(typeof source);\n\n        await client\n          .mutate({\n            mutation: gql`\n              mutation confCard($uid: String!, $source: String!) {\n                confirmCard(uid: $uid, source: $source)\n              }\n            `,\n            variables: { uid, source }\n          })\n          .then(res => console.log(res));\n      });\n  }\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <FormWrapper>\n          <StyledForm onSubmit={e => handleSubmit(e, client)}>\n            <label style={{ width: \"100%\" }}>\n              <CardElement style={{ base: { fontSize: \"18px\" } }} />\n            </label>\n            <Button>Start your free trial</Button>\n          </StyledForm>\n        </FormWrapper>\n      )}\n    </ApolloConsumer>\n  );\n}\n\nexport default injectStripe(CheckoutForm);\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  ${props =>\n    props.loading &&\n    \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\"};\n`;\n\nconst SubmitButton = styled(Button)`\n  align-self: flex-end;\n  margin-right: 0px;\n  margin-left: auto;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 24px;\n  width: 100%;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAOA;AAKA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAYA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}