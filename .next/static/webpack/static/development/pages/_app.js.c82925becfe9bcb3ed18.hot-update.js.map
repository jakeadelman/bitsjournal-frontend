{"version":3,"file":"static/webpack/static/development/pages/_app.js.c82925becfe9bcb3ed18.hot-update.js","sources":["webpack:///./stores/store.js"],"sourcesContent":["import { action, observable } from \"mobx\";\nimport { useStaticRendering, observer } from \"mobx-react\";\nimport { create, persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport { getStateDate } from \"../components/Helpers/Functions\";\n\nconst isServer = !process.browser;\nuseStaticRendering(isServer);\n\nexport class Store {\n  @observable lastUpdate = 0;\n  @persist @observable light = true;\n  @persist @observable isAuth = false;\n  @persist @observable startDate = \"2020-02-24T12:43:56.702Z\";\n  @persist @observable endDate = \"2020-02-28T12:43:56.702Z\";\n  @persist @observable symbol = \"XBTUSD\";\n\n  @persist @observable date = 1;\n  @observable pnl = 0;\n  @observable globalHash = [];\n  @persist @observable tempNotes = [];\n  @persist @observable tempTags = [];\n  @persist @observable hasTempTags = false;\n\n  @action changeDate = (newDate) => {\n    let dates = getStateDate(newDate);\n    this.date = newDate;\n    this.startDate = dates.start;\n    this.endDate = dates.end;\n  };\n\n  @action addPnl = (pnl) => {\n    this.pnl += pnl;\n  };\n\n  @action resetPnl = () => {\n    this.pnl = 0;\n  };\n\n  @action pushGlobalHash = (hash) => {\n    this.globalHash.push(hash);\n  };\n\n  @action addTempNote = (time, note) => {\n    if (this.tempNotes[0] == undefined) {\n      let newNote = {};\n      newNote[\"note\"] = note;\n      newNote[\"time\"] = time;\n      this.tempNotes.push(newNote);\n    } else {\n      let alreadyPresentNote = false;\n      for (let i = 0; i < this.tempNotes.length; i++) {\n        if (this.tempNotes[i].time == time) {\n          this.tempNotes[i].note = note;\n          alreadyPresentNote = true;\n        }\n        if (i == this.tempNotes.length - 1 && alreadyPresentNote == false) {\n          let newNote = {};\n          newNote[\"note\"] = note;\n          newNote[\"time\"] = time;\n          this.tempNotes.push(newNote);\n        }\n      }\n    }\n  };\n\n  @action clearTempNotes = () => {\n    this.tempNotes = [];\n  };\n\n  @action addTempTag = (time, tag) => {\n    let newTag = {};\n    newTag[\"tag\"] = tag;\n    newTag[\"time\"] = time;\n    this.tempTags.push(newTag);\n    this.changeHasTempTags();\n  };\n\n  @action clearTempTags = () => {\n    this.tempTags = [];\n  };\n\n  @action changeHasTempTags = () => {\n    this.hasTempTags = true;\n  };\n  @action resetHasTempTags = () => {\n    this.hasTempTags = false;\n  };\n  @action setSymbol = (newSymbol) => {\n    this.symbol = newSymbol;\n  };\n}\n\nlet store = null;\nexport const hydrate = create();\nexport const StoreContext = createContext(new Store());\n\nexport function initializeStore(initialData) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  hydrate(\"store\", store).then(() => {\n    console.log(\"someStore has been hydrated\");\n  });\n\n  return store;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAgBA;AACA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAuBA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA2BA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA+BA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAmCA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA0DA;AACA;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA8DA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAsEA;AACA;AAvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA0EA;AACA;AA3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA6EA;AACA;AA9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAgFA;AACA;AAjFA;AAAA;AAoFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}