{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.3c388c2d0c405e825332.hot-update.js","sources":["webpack:///./components/Dashboard/AddTerm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nexport default function AddTerm(props) {\n  const [clicked, setClicked] = useState(false);\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setClicked(true);\n        }}\n      >\n        add term\n      </button>\n      {!!clicked ? (\n        <Query query={fetchTweetsQuery}>\n          {({ loading, error, data }) => {\n            if (error) return <div>no data loaded</div>;\n            if (loading) return <div>Loading</div>;\n            console.log(data);\n            return (\n              <div>\n                <div className=\"dash-main-table\">\n                  <div>clicky bro</div>\n                  <style jsx>\n                    {`\n                      .dash-main-table {\n                        max-width: 50%;\n                        margin: 3em auto 3em auto;\n                      }\n                    `}\n                  </style>\n                </div>\n              </div>\n            );\n          }}\n        </Query>\n      ) : (\n        console.log(\"is false\")\n      )}\n    </div>\n  );\n}\n\nconst AfterClickTry = () => (\n  <div>\n    <div>fuck yall</div>\n    {console.log(\"fuck\")}\n  </div>\n);\n\nfunction AfterClick() {\n  return (\n    <Query query={fetchTweetsQuery}>\n      {({ loading, error, data }) => {\n        if (error) return <div>no data loaded</div>;\n        if (loading) return <div>Loading</div>;\n        console.log(data);\n        return (\n          <div>\n            <div className=\"dash-main-table\">\n              <div>clicky bro</div>\n              <style jsx>\n                {`\n                  .dash-main-table {\n                    max-width: 50%;\n                    margin: 3em auto 3em auto;\n                  }\n                `}\n              </style>\n            </div>\n          </div>\n        );\n      }}\n    </Query>\n  );\n}\n\nexport const fetchTweetsQuery = gql`\n  query fetchTerms {\n    fetchTerms {\n      id\n      term\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAHA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAaA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAaA;AAGA;AACA;AACA;;;;A","sourceRoot":""}