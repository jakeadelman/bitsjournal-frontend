{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.581570ae3eaeaa3bbaaa.hot-update.js","sources":["webpack:///./components/Menu/CategoryList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { wideFont } from \"../shared/helpers\";\nimport Datepicker from \"./Datepicker\";\n\nconst SidebarCategoryList = inject(\"store\")(\n  observer(({ store }) => {\n    const [customClicked, setCustomClicked] = useState(false);\n\n    function handleClick(value) {\n      store.resetPnl();\n      store.changeDate(value);\n      console.log(store);\n    }\n    // useEffect(() => {\n    //   console.log(customClicked);\n    // }, []);\n\n    function handleCustomClicked() {\n      setCustomClicked(true);\n      console.log(customClicked);\n    }\n\n    return (\n      <div>\n        <CategoryList>\n          {store.date == \"Today\" ? (\n            <ItemActive onClick={() => handleClick(\"Today\")}>Today</ItemActive>\n          ) : (\n            <Item onClick={() => handleClick(\"Today\")}>Today</Item>\n          )}\n          {store.date == \"Yesterday\" ? (\n            <ItemActive onClick={() => handleClick(\"Yesterday\")}>\n              Yesterday\n            </ItemActive>\n          ) : (\n            <Item onClick={() => handleClick(\"Yesterday\")}>Yesterday</Item>\n          )}\n          {store.date == \"This Week\" ? (\n            <ItemActive onClick={() => handleClick(\"This Week\")}>\n              This Week\n            </ItemActive>\n          ) : (\n            <Item onClick={() => handleClick(\"This Week\")}>This Week</Item>\n          )}\n          {store.date == \"This Month\" ? (\n            <ItemActive onClick={() => handleClick(\"This Month\")}>\n              This Month\n            </ItemActive>\n          ) : (\n            <Item onClick={() => handleClick(\"This Month\")}>This Month</Item>\n          )}\n          <Item onClick={() => handleCustomClicked()}>Custom</Item>\n\n          {/* {store.date == 5 ? (\n          <ItemActive onClick={() => setCustomClicked(true)}>Custom</ItemActive>\n        ) : (\n          <Item onClick={() => handleCustomClick()}>Custom</Item>\n        )} */}\n        </CategoryList>\n        {customClicked ? <Datepicker /> : null}\n      </div>\n    );\n  })\n);\n\nexport default SidebarCategoryList;\n\nconst CategoryList = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${(props) => props.theme.normalText};\n  color: white;\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${(props) => props.theme.accent};\n  }\n  &:hover {\n    background-color: #fff;\n    color: #212529;\n    cursor: pointer;\n  }\n`;\nconst ItemActive = styled.div`\n  padding: 12px;\n  font-size: 15px;\n  font-weight: 300;\n  text-decoration: none;\n  color: ${(props) => props.theme.normalText};\n  color: white;\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${(props) => props.theme.accent};\n  }\n\n  background-color: #fff;\n  color: #212529;\n  cursor: pointer;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAGA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAMA;AAAA;AAQA;AAAA;AAAA;AAAA;AAKA;AAAA;AAMA;AAAA;;;;A","sourceRoot":""}