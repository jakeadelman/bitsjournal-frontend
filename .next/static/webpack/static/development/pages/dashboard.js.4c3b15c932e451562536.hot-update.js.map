{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.4c3b15c932e451562536.hot-update.js","sources":["webpack:///./components/Dashboard/DashInitialTerms.js"],"sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DashMain from \"./DashMain\";\nimport App from \"../App\";\nimport Header from \"../Header2\";\nimport AddTerm from \"./AddTerm\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n// import SentimentModule from \"./SentimentModule\";\n\nclass DashInitialTerms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTerms: []\n    };\n    this.toggleTerm = this.toggleTerm.bind(this);\n    this.mapTerms = this.mapTerms.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  toggleTerm(term) {\n    this.setState({ term: term });\n    console.log(this.state);\n  }\n\n  mapTerms(allterms) {\n    allterms.map(term => {\n      this.state.allTerms.push(term.term);\n    });\n  }\n\n  handleClick(e) {\n    // console.log(e.target.value);\n    this.setState({ term: e.target.value });\n    console.log(this.state);\n  }\n\n  render() {\n    return (\n      <Query query={fetchTweetsQuery}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n\n          if (!this.state.allTerms[0]) {\n            this.toggleTerm(data.fetchTerms[0].term);\n            this.mapTerms(data.fetchTerms);\n            return <div>loading</div>;\n          }\n          return (\n            <div className=\"dash-main-container\">\n              <div className=\"pagination-list\">\n                <ul>\n                  {this.state.allTerms.map(term => {\n                    return (\n                      <li className=\"pagination-list-item\">\n                        <button\n                          value={term}\n                          onClick={this.handleClick}\n                          className=\"pagination-button\"\n                        >\n                          {term}\n                        </button>\n                      </li>\n                    );\n                  })}\n                  <li className=\"pagination-list-item\">\n                    <button className=\"pagination-button\">\n                      <AddTerm />\n                    </button>\n                  </li>\n                </ul>\n              </div>\n\n              <DashMain initialTerm={this.state.term} />\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\n// .outer-sent {\n//   display: inline-block;\n//   float: left;\n// }\n\nexport const fetchTweetsQuery = gql`\n  query fetchTerms {\n    fetchTerms {\n      id\n      term\n    }\n  }\n`;\n\nexport default () => (\n  <App>\n    <Header />\n    <DashInitialTerms />\n  </App>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAPA;AAQA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;;;;AAvEA;AA2EA;AACA;AACA;AACA;AACA;AAAA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;A","sourceRoot":""}