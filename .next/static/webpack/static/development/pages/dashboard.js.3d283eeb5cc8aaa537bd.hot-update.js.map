{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.3d283eeb5cc8aaa537bd.hot-update.js","sources":["webpack:///./components/Dashboard/AddTerm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n// import Popover from \"./Popover\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nexport default function AddTerm(props) {\n  const [clicked, setClicked] = useState(false);\n  const [popover, setPopover] = useState(false);\n\n  function toggle() {\n    if (!popover) {\n      setPopover(true);\n    } else {\n      setPopover(false);\n    }\n  }\n\n  return (\n    <div>\n      <button\n        id=\"Popover1\"\n        onClick={() => {\n          setClicked(true);\n          toggle();\n        }}\n      >\n        add term\n      </button>\n      <Popover placement=\"bottom\" isOpen={popover} target=\"Popover1\">\n        <PopoverHeader>Popover Title</PopoverHeader>\n        <PopoverBody>\n          <PopBody />\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n\nconst PopBody = () => {\n  const [newTerm, setNewTerm] = useState();\n  console.log(newTerm);\n\n  function handleClick() {\n    return (\n      <Query query={fetchTweetsQuery}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n          console.log(data);\n        }}\n      </Query>\n    );\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"enter term to add\"\n        onChange={e => setNewTerm(e.target.value)}\n      />\n      <button onClick={() => handleClick}>submit</button>\n    </div>\n  );\n};\n\n/* <Query query={fetchTweetsQuery}>\n          {({ loading, error, data }) => {\n            if (error) return <div>no data loaded</div>;\n            if (loading) return <div>Loading</div>;\n            console.log(data);\n            return (\n              <div>\n                <Popover placement=\"bottom\">\n                  <PopoverHeader>Popover Title</PopoverHeader>\n                  <PopoverBody>\n                    Sed posuere consectetur est at lobortis. Aenean eu leo quam.\n                    Pellentesque ornare sem lacinia quam venenatis vestibulum.\n                  </PopoverBody>\n                </Popover>\n              </div>\n            );\n          }}\n        </Query> */\n\n// const AfterClickTry = () => (\n//   <div>\n//     <div>fuck yall</div>\n//     {console.log(\"fuck\")}\n//   </div>\n// );\n\n// function AfterClick() {\n//   return (\n//     <Query query={fetchTweetsQuery}>\n//       {({ loading, error, data }) => {\n//         if (error) return <div>no data loaded</div>;\n//         if (loading) return <div>Loading</div>;\n//         console.log(data);\n//         return (\n//           <div>\n//             <div className=\"dash-main-table\">\n//               <div>clicky bro</div>\n//               <style jsx>\n//                 {`\n//                   .dash-main-table {\n//                     max-width: 50%;\n//                     margin: 3em auto 3em auto;\n//                   }\n//                 `}\n//               </style>\n//             </div>\n//           </div>\n//         );\n//       }}\n//     </Query>\n//   );\n// }\n\nexport const fetchTweetsQuery = gql`\n  query fetchTerms {\n    fetchTerms {\n      id\n      term\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}