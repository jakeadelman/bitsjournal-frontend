{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.ac108f640367f925c607.hot-update.js","sources":["webpack:///./components/Dashboard/FetchQuery.js"],"sourcesContent":["import { Query } from \"react-apollo\";\nimport ReChart from \"../Charts/ReChart\";\nimport Sidebar from \"../Categories/Menu\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { inject, observer } from \"mobx-react\";\nimport {\n  ContainDiv,\n  NextToDiv,\n  NextToDivHeader,\n  RowContainer,\n  ContainDivHeader\n} from \"../Charts/ReChart\";\nimport { getStateDate } from \"../Helpers/Functions\";\n\n// import { storesContext } from \"../../stores/UserStore\";\n\nconst FetchQuery = inject(\"store\")(\n  observer(({ store }) => {\n    if (store) {\n      let theStore = store;\n      console.log(theStore.date);\n      console.log(store + \"this store\");\n\n      let dates = getStateDate(store.date);\n      console.log(dates);\n\n      const clicked = () => {\n        store.isAuth = !store.isAuth;\n        console.log(store.isAuth);\n      };\n\n      let fetchTradeHistoryVariables = {\n        start: \"2020-01-14T12:43:56.702Z\",\n        end: \"2020-01-14T15:01:59.727Z\"\n      };\n\n      if (dates) {\n        let fetchTradeHistoryVariables = {\n          start: dates.start,\n          end: dates.end\n        };\n      }\n    }\n  })\n);\n\nclass Comp extends React.Component {\n  render() {\n    return (\n      <Query\n        query={fetchTradeHistoryQuery}\n        variables={fetchTradeHistoryVariables}\n      >\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n\n          return (\n            <Wrapper>\n              <ChartWrapper>\n                <ContainDivHeader>\n                  <NextToDivHeader>Start</NextToDivHeader>\n                  <NextToDivHeader>End</NextToDivHeader>\n                  <NextToDivHeader>Direction</NextToDivHeader>\n                  <NextToDivHeader>Avg Entry Price</NextToDivHeader>\n                  <NextToDivHeader>Avg Exit Price</NextToDivHeader>\n                  <NextToDivHeader>Realized Pnl</NextToDivHeader>\n                </ContainDivHeader>\n                <ReChart data={data} />\n              </ChartWrapper>\n              <Sidebar />\n            </Wrapper>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default FetchQuery;\n\nconst fetchTradeHistoryQuery = gql`\n  query fetchTradeHistory($start: String!, $end: String!) {\n    fetchTradeHistory(start: $start, end: $end) {\n      id\n      timestamp\n      side\n      price\n      orderQty\n      leavesQty\n      currentQty\n      avgEntryPrice\n      execGrossPnl\n      realizedPnl\n      commission\n      trdStart\n      trdEnd\n    }\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  background: white;\n  padding: 5px;\n  width: 100%;\n  @media (max-width: 768px) {\n    margin: 0 5vw;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-align;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AAEA;AAWA;AAAA;AAKA;AAGA;;;;AA9BA;AACA;AAgCA;AAEA;AAoBA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}