{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.3843f351762f7ad32c22.hot-update.js","sources":["webpack:///./components/Dashboard/FetchQuery.js"],"sourcesContent":["import { Query } from \"react-apollo\";\nimport ReChart from \"../Charts/ReChart\";\nimport Sidebar from \"../Categories/Menu\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { StoreContext } from \"../../stores/store\";\nimport { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { inject } from \"mobx-react\";\n\n// import { storesContext } from \"../../stores/UserStore\";\n\nconst FetchQuery = inject(\"store\")(\n  observer(({ store }) => {\n    // const store = useContext(storesContext);\n    // console.log(store);\n    let theStore = store;\n\n    const clicked = () => {\n      theStore.isAuth = theStore.isAuth;\n      console.log(theStore.isAuth);\n    };\n\n    let fetchFourHourSentVariables = {\n      term: \"bitcoin\"\n    };\n    return (\n      <Query\n        query={fetchFourHourSentQuery}\n        variables={fetchFourHourSentVariables}\n      >\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n\n          return (\n            <Wrapper>\n              <button onClick={clicked} />\n              <ChartWrapper>\n                <ReChart data={data} />\n              </ChartWrapper>\n              <Sidebar />\n            </Wrapper>\n          );\n        }}\n      </Query>\n    );\n  })\n);\n\nexport default FetchQuery;\n\nconst fetchFourHourSentQuery = gql`\n  query fetchFourHourSent($term: String!) {\n    fetchFourHourSent(term: $term) {\n      id\n      term\n      sentiment\n      hour\n    }\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  background: white;\n  border: 1px solid #ebedf0;\n  padding: 5px;\n  width: 100%;\n  @media (max-width: 768px) {\n    margin: 0 5vw;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-align;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAGA;AAEA;AAWA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}