{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.ac77c310ed018ce5091e.hot-update.js","sources":["webpack:///./components/Dashboard/AddTerm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n// import Popover from \"./Popover\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\nimport Router from \"next/router\";\n\nexport default function AddTerm(props) {\n  const [clicked, setClicked] = useState(false);\n  const [popover, setPopover] = useState(false);\n\n  function toggle() {\n    if (!popover) {\n      setPopover(true);\n    } else {\n      setPopover(false);\n    }\n  }\n\n  return (\n    <div>\n      <button\n        id=\"Popover1\"\n        onClick={() => {\n          setClicked(true);\n          toggle();\n        }}\n      >\n        add term\n      </button>\n      <Popover placement=\"bottom\" isOpen={popover} target=\"Popover1\">\n        <PopoverHeader>Popover Title</PopoverHeader>\n        <PopoverBody>\n          <PopBody />\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n\nconst PopBody = () => {\n  const [newTerm, setNewTerm] = useState();\n  const [clicked, setClicked] = useState(false);\n  console.log(newTerm);\n\n  function handleClick() {\n    console.log(\"was clicked\");\n    setClicked(true);\n    // return <AddTodo term={newTerm} />;\n  }\n\n  if (!!clicked) {\n    return (\n      <Mutation mutation={addSt}>\n        {(addSearchTerm, { data }) => {\n          setClicked(false);\n          addSearchTerm({ variables: { searchterm: newTerm } });\n        }}\n      </Mutation>\n    );\n  }\n\n  return (\n    <div>\n      <AddTodo />\n    </div>\n  );\n};\n\nexport const addSt = gql`\n  mutation AddSearchTerm($searchterm: String!) {\n    addSearchTerm(searchterm: $searchterm)\n  }\n`;\n\nconst AddTodo = () => {\n  let input;\n\n  return (\n    <Mutation mutation={addSt}>\n      {(addSearchTerm, { data }) => (\n        <div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              addSearchTerm({ variables: { searchterm: input.value } });\n              input.value = \"\";\n              location.reload(true);\n            }}\n          >\n            <input\n              ref={node => {\n                input = node;\n              }}\n            />\n            <button type=\"submit\">Add Todo</button>\n          </form>\n        </div>\n      )}\n    </Mutation>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AAfA;AAqBA;;;;A","sourceRoot":""}