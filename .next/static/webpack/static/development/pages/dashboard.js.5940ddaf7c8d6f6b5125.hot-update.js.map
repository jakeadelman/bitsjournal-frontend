{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.5940ddaf7c8d6f6b5125.hot-update.js","sources":["webpack:///./components/LoginForm.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { observer } from \"mobx-react-lite\";\nimport { UserStoreContext } from \"../stores/UserStore.ts\";\n\nfunction LoginForm() {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { wrongCredentials: false };\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n\n  async function handleSubmit(event, client) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    form.reset();\n\n    let res = client.mutate({\n      mutation: gql`\n        mutation login($email: String!, $password: String!) {\n          login(email: $email, password: $password)\n        }\n      `,\n      variables: { email, password }\n    });\n\n    // const userStore = UserStoreContext;\n    // console.log(userStore.isAuth);\n\n    let r = await res;\n    console.log(r);\n    r = r.data.login;\n    console.log(r);\n    let isTrue = r == \"true\";\n    console.log(typeof r);\n    if (isTrue == true) {\n      console.log(r);\n      Router.push(\"/dashboard\");\n    } else {\n      // this.setState({ wrongCredentials: true });\n      setWrongCredentials(true);\n      return;\n    }\n  }\n\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n  console.log(wrongCredentials);\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <form onSubmit={event => handleSubmit(event, client)}>\n          <h1>Login</h1>\n          <input placeholder=\"email\" name=\"email\" type=\"text\" required />\n          <input placeholder=\"password\" name=\"password\" type=\"text\" required />\n          <button type=\"submit\">Submit</button>\n          {wrongCredentials == true ? (\n            <div className=\"login-alert\">\n              <Alert\n                color=\"secondary\"\n                isOpen={wrongCredentials == true ? true : false}\n              >\n                Wrong login credentials\n              </Alert>\n            </div>\n          ) : null}\n        </form>\n      )}\n    </ApolloConsumer>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AANA;AAUA;AACA;AAnBA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;AAAA;AAAA;AACA;AA0BA;AACA;AA5BA;AAAA;AACA;AADA;AA8BA;AACA;AA/BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2CA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAoBA;AACA;AACA;;;;A","sourceRoot":""}