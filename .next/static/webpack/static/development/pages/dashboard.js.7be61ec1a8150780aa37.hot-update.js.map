{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.7be61ec1a8150780aa37.hot-update.js","sources":["webpack:///./components/Dashboard/DashInitialTerms.js"],"sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport DashMain from \"./DashMain\";\nimport App from \"../App\";\nimport Header from \"../Header2\";\nimport AddTerm from \"./AddTerm\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport AreaChart from \"../Charts/AreaChart\";\nimport AxisChart from \"../Charts/AxisChart\";\nimport NewChart from \"../Charts/NewChart\";\nimport ScreenSize from \"./Window\";\nimport windowSize from \"react-window-size\";\nimport BtcChart from \"../Charts/BtcChart\";\nimport Currency from \"../Charts/Currency\";\nimport ReChart from \"../Charts/ReChart\";\nimport Sidebar from \"../Categories/Menu\";\nimport { removeArgumentsFromDocument } from \"apollo-utilities\";\n// import theme from \"../theme\";\nimport Router from \"next/router\";\nconst Cookie = require(\"js-cookie\");\n\nclass DashInitialTerms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTerms: [],\n      width: 0,\n      height: 0\n    };\n    this.toggleTerm = this.toggleTerm.bind(this);\n    this.mapTerms = this.mapTerms.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    // this.push = this.push.bind(this);\n  }\n\n  componentDidMount() {\n    let cook = Cookie.get(\"isAuth\") == \"true\";\n    if (!cook) {\n      Router.push(\"/\");\n    } else if (!!cook) {\n      this.setState({ isAuth: cook });\n    }\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n    console.log(this.state.width);\n  }\n\n  toggleTerm(term) {\n    this.setState({ term: term });\n    console.log(this.state);\n  }\n\n  mapTerms(allterms) {\n    allterms.map(term => {\n      this.state.allTerms.push(term.term);\n    });\n  }\n\n  handleClick(e) {\n    // console.log(e.target.value);\n    this.setState({ term: e.target.value });\n    console.log(this.state);\n  }\n\n  render() {\n    let marg = {\n      left: 20,\n      right: 20,\n      top: 20,\n      bottom: 20\n    };\n\n    return (\n      <Query query={fetchTweetsQuery}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n\n          console.log(data);\n\n          // if (!this.state.allTerms[0]) {\n          //   this.toggleTerm(data.fetchTerms[0].term);\n          //   this.mapTerms(data.fetchTerms);\n          //   return <div>loading</div>;\n          // }\n          return (\n            <ThemeProvider theme={theme}>\n              <Wrapper>\n                <div\n                  style={{\n                    background: \"white\",\n                    border: \"1px solid #ebedf0\",\n                    padding: \"5px\"\n                  }}\n                >\n                  <ReChart />\n                </div>\n                <Sidebar />\n              </Wrapper>\n            </ThemeProvider>\n          );\n        }}\n      </Query>\n    );\n  }\n}\nconst Menu = styled.nav`\n  border: 1px solid ${props => props.theme.border};\n  @media (max-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const fetchTweetsQuery = gql`\n  query fetchTerms {\n    fetchTerms {\n      id\n      term\n    }\n  }\n`;\n\nexport default DashInitialTerms;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-align;\n`;\n\nconst SampleWrapper = styled.header`\n  position: sticky;\n  z-index: 10;\n  top: 0;\n  display: flex;\n  align-items: stretch;\n  margin-bottom: 24px;\n  box-shadow: 0 4px 12px ${props => props.theme.shadow};\n  border-bottom: 1px solid ${props => props.theme.border};\n  height: 48px;\n  padding: 0 10vw;\n  background-color: ${props => props.theme.foreground};\n  user-select: none;\n  @media (max-width: 425px) {\n    margin-bottom: 16px;\n    height: 40px;\n  }\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AA5FA;AACA;AA6FA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AASA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;;;;A","sourceRoot":""}