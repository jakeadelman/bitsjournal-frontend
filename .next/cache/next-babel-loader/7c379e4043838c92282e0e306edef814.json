{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries, LineSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { CrossHairCursor, EdgeIndicator, CurrentCoordinate, MouseCoordinateX, MouseCoordinateY } from \"react-stockcharts/lib/coordinates\";\nimport { timeCompare, getYRangeNums, findYValBuy, findYValSell } from \"./helpers\";\nimport { LabelAnnotation, Label, Annotate } from \"react-stockcharts/lib/annotation\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport { OHLCTooltip, MovingAverageTooltip } from \"react-stockcharts/lib/tooltip\";\nimport { ema } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChartWithAnnotation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let yRangeNums = getYRangeNums(this.props.data);\n    this.setState({\n      yRangeNums: yRangeNums\n    });\n  }\n\n  render() {\n    const margin = {\n      left: 20,\n      right: 50,\n      top: 30,\n      bottom: 30\n    };\n    const height = 400;\n    const {\n      type,\n      width,\n      ratio,\n      data: initialData\n    } = this.props;\n    const [yAxisLabelX, yAxisLabelY] = [width - margin.left - 40, (height - margin.top - margin.bottom) / 2];\n    const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(d => d.date);\n    const {\n      data,\n      xScale,\n      xAccessor,\n      displayXAccessor\n    } = xScaleProvider(initialData);\n    const start = xAccessor(last(data));\n    const end = xAccessor(data[Math.max(0, data.length - 150)]);\n    const xExtents = [start, end];\n\n    if (this.state == null) {\n      return __jsx(\"div\", null, \"Loading...\");\n    } // try {\n\n\n    return __jsx(ChartCanvas, {\n      height: height,\n      ratio: ratio,\n      width: width,\n      margin: margin,\n      type: type,\n      data: data,\n      xScale: xScale,\n      seriesName: \"BTC\",\n      xAccessor: xAccessor,\n      displayXAccessor: displayXAccessor,\n      xExtents: xExtents\n    }, __jsx(Chart, {\n      id: 1,\n      yExtents: [d => [d.high, d.low]],\n      padding: {\n        top: 80,\n        bottom: 80\n      }\n    }, __jsx(XAxis, {\n      axisAt: \"bottom\",\n      orient: \"bottom\"\n    }), __jsx(MouseCoordinateX, {\n      at: \"bottom\",\n      orient: \"bottom\",\n      displayFormat: timeFormat(\"%Y-%m-%d\")\n    }), __jsx(MouseCoordinateY, {\n      at: \"right\",\n      orient: \"right\",\n      displayFormat: format(\".2f\")\n    }), __jsx(YAxis, {\n      axisAt: \"right\",\n      orient: \"right\",\n      ticks: 5\n    }), __jsx(CandlestickSeries, null), __jsx(OHLCTooltip, {\n      origin: [-10, 0]\n    }), this.props.trades.map(each => {\n      // console.log(\n      //   \"mapping total length\" + this.props.trades.length.toString(),\n      //   each\n      // );\n      let datu = new Date(each.timestamp); // console.log(datu, this.props.timeframe);\n\n      if (each.side == \"Buy\") {\n        const annotationPropsUp = {\n          fontFamily: \"Glyphicons Halflings\",\n          fontSize: 15,\n          fill: \"#018001\",\n          // fill: rgba(1, 128, 1, 0.5),\n          opacity: 0.8,\n          text: \"▲\",\n          y: ({\n            yScale\n          }) => {\n            return yScale.range()[0] + 20; // return findYValBuy(\n            //   this.state.yRangeNums[0],\n            //   this.state.yRangeNums[1],\n            //   each.price\n            // );\n          },\n          onClick: console.log.bind(console),\n          tooltip: d => timeFormat(\"%B\")(d.date) // onMouseOver: console.log.bind(console),\n\n        };\n        return __jsx(Annotate, {\n          with: LabelAnnotation,\n          when: d => timeCompare(d, datu, this.props.timeframe),\n          usingProps: annotationPropsUp\n        });\n      } else if (each.side == \"Sell\") {\n        const annotationPropsDown = {\n          fontFamily: \"Glyphicons Halflings\",\n          fontSize: 15,\n          fill: \"#FF0000\",\n          opacity: 0.8,\n          text: \"▼\",\n          y: ({\n            yScale\n          }) => {\n            return yScale.range()[1] - 20; // return findYValSell(\n            //   this.state.yRangeNums[0],\n            //   this.state.yRangeNums[1],\n            //   each.price\n            // );\n          },\n          onClick: console.log.bind(console),\n          tooltip: d => timeFormat(\"%B\")(d.date) // onMouseOver: console.log.bind(console),\n\n        };\n        return __jsx(Annotate, {\n          with: LabelAnnotation,\n          when: d => timeCompare(d, datu, this.props.timeframe),\n          usingProps: annotationPropsDown\n        });\n      } else {\n        return;\n      }\n    })), __jsx(CrossHairCursor, {\n      strokeDasharray: \"LongDashDot\"\n    })); // } catch (err) {\n    //   return <div>no chart</div>;\n    // }\n  }\n\n}\n\nCandleStickChartWithAnnotation.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired\n};\nCandleStickChartWithAnnotation.defaultProps = {\n  type: \"svg\"\n};\nCandleStickChartWithAnnotation = fitWidth(CandleStickChartWithAnnotation);\nexport default CandleStickChartWithAnnotation;","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Dashboard/Chart/ChartDemo.js"],"names":["React","PropTypes","format","timeFormat","ChartCanvas","Chart","CandlestickSeries","LineSeries","XAxis","YAxis","CrossHairCursor","EdgeIndicator","CurrentCoordinate","MouseCoordinateX","MouseCoordinateY","timeCompare","getYRangeNums","findYValBuy","findYValSell","LabelAnnotation","Label","Annotate","discontinuousTimeScaleProvider","OHLCTooltip","MovingAverageTooltip","ema","fitWidth","last","CandleStickChartWithAnnotation","Component","constructor","props","componentDidMount","yRangeNums","data","setState","render","margin","left","right","top","bottom","height","type","width","ratio","initialData","yAxisLabelX","yAxisLabelY","xScaleProvider","inputDateAccessor","d","date","xScale","xAccessor","displayXAccessor","start","end","Math","max","length","xExtents","state","high","low","trades","map","each","datu","Date","timestamp","side","annotationPropsUp","fontFamily","fontSize","fill","opacity","text","y","yScale","range","onClick","console","log","bind","tooltip","timeframe","annotationPropsDown","propTypes","array","isRequired","number","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries, LineSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n  CrossHairCursor,\n  EdgeIndicator,\n  CurrentCoordinate,\n  MouseCoordinateX,\n  MouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\nimport {\n  timeCompare,\n  getYRangeNums,\n  findYValBuy,\n  findYValSell,\n} from \"./helpers\";\n\nimport {\n  LabelAnnotation,\n  Label,\n  Annotate,\n} from \"react-stockcharts/lib/annotation\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n  OHLCTooltip,\n  MovingAverageTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChartWithAnnotation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    let yRangeNums = getYRangeNums(this.props.data);\n    this.setState({ yRangeNums: yRangeNums });\n  }\n  render() {\n    const margin = { left: 20, right: 50, top: 30, bottom: 30 };\n    const height = 400;\n    const { type, width, ratio, data: initialData } = this.props;\n\n    const [yAxisLabelX, yAxisLabelY] = [\n      width - margin.left - 40,\n      (height - margin.top - margin.bottom) / 2,\n    ];\n\n    const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\n      (d) => d.date\n    );\n    const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\n      initialData\n    );\n\n    const start = xAccessor(last(data));\n    const end = xAccessor(data[Math.max(0, data.length - 150)]);\n    const xExtents = [start, end];\n\n    if (this.state == null) {\n      return <div>Loading...</div>;\n    }\n    // try {\n    return (\n      <ChartCanvas\n        height={height}\n        ratio={ratio}\n        width={width}\n        margin={margin}\n        type={type}\n        data={data}\n        xScale={xScale}\n        seriesName=\"BTC\"\n        xAccessor={xAccessor}\n        displayXAccessor={displayXAccessor}\n        xExtents={xExtents}\n      >\n        <Chart\n          id={1}\n          yExtents={[(d) => [d.high, d.low]]}\n          padding={{ top: 80, bottom: 80 }}\n        >\n          <XAxis axisAt=\"bottom\" orient=\"bottom\" />\n          <MouseCoordinateX\n            at=\"bottom\"\n            orient=\"bottom\"\n            displayFormat={timeFormat(\"%Y-%m-%d\")}\n          />\n          <MouseCoordinateY\n            at=\"right\"\n            orient=\"right\"\n            displayFormat={format(\".2f\")}\n          />\n          <YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n          <CandlestickSeries />\n          <OHLCTooltip origin={[-10, 0]} />\n          {this.props.trades.map((each) => {\n            // console.log(\n            //   \"mapping total length\" + this.props.trades.length.toString(),\n            //   each\n            // );\n            let datu = new Date(each.timestamp);\n            // console.log(datu, this.props.timeframe);\n            if (each.side == \"Buy\") {\n              const annotationPropsUp = {\n                fontFamily: \"Glyphicons Halflings\",\n                fontSize: 15,\n                fill: \"#018001\",\n                // fill: rgba(1, 128, 1, 0.5),\n                opacity: 0.8,\n                text: \"▲\",\n                y: ({ yScale }) => {\n                  return yScale.range()[0] + 20;\n                  // return findYValBuy(\n                  //   this.state.yRangeNums[0],\n                  //   this.state.yRangeNums[1],\n                  //   each.price\n                  // );\n                },\n                onClick: console.log.bind(console),\n                tooltip: (d) => timeFormat(\"%B\")(d.date),\n                // onMouseOver: console.log.bind(console),\n              };\n\n              return (\n                <Annotate\n                  with={LabelAnnotation}\n                  when={(d) => timeCompare(d, datu, this.props.timeframe)}\n                  usingProps={annotationPropsUp}\n                />\n              );\n            } else if (each.side == \"Sell\") {\n              const annotationPropsDown = {\n                fontFamily: \"Glyphicons Halflings\",\n                fontSize: 15,\n                fill: \"#FF0000\",\n                opacity: 0.8,\n                text: \"▼\",\n                y: ({ yScale }) => {\n                  return yScale.range()[1] - 20;\n                  // return findYValSell(\n                  //   this.state.yRangeNums[0],\n                  //   this.state.yRangeNums[1],\n                  //   each.price\n                  // );\n                },\n                onClick: console.log.bind(console),\n                tooltip: (d) => timeFormat(\"%B\")(d.date),\n                // onMouseOver: console.log.bind(console),\n              };\n              return (\n                <Annotate\n                  with={LabelAnnotation}\n                  when={(d) => timeCompare(d, datu, this.props.timeframe)}\n                  usingProps={annotationPropsDown}\n                />\n              );\n            } else {\n              return;\n            }\n          })}\n        </Chart>\n        <CrossHairCursor strokeDasharray=\"LongDashDot\" />\n      </ChartCanvas>\n    );\n    // } catch (err) {\n    //   return <div>no chart</div>;\n    // }\n  }\n}\n\nCandleStickChartWithAnnotation.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithAnnotation.defaultProps = {\n  type: \"svg\",\n};\n\nCandleStickChartWithAnnotation = fitWidth(CandleStickChartWithAnnotation);\n\nexport default CandleStickChartWithAnnotation;\n"]},"metadata":{},"sourceType":"module"}