{"ast":null,"code":"var _dec, _class, _temp;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { inject, observer } from \"mobx-react\"; // import \"react-datepicker/dist/react-datepicker.css\";\n// import \"./datepicker-additional.css\";\n\nimport { reaction } from \"mobx\";\nlet Example = (_dec = inject([\"store\"]), _dec(_class = observer(_class = (_temp = class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = date => {\n      this.setState({\n        date: date\n      });\n      console.log(date, \"THIS IS DATE\");\n    };\n\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.dateReaction = reaction(() => this.props.store.startDate, (notifications, reaction) => {\n      if (this.props.store.startDate !== null) {\n        if (this.props.start == true) {\n          this.setState({\n            date: new Date(this.props.store.startDate)\n          });\n        } else {\n          this.setState({\n            date: new Date(this.props.store.endDate)\n          });\n        }\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"just updated\");\n\n    if (this.props.set == true) {\n      console.log(\"not equal\");\n\n      if (this.props.start == true) {\n        console.log(\"was true\");\n        let firstDate = this.state.date.toISOString();\n        let multiDate = firstDate.split(\"T\");\n        this.props.store.startDate = multiDate[0] + \"T00:00:00.000Z\";\n        this.props.store.date = \"Custom\";\n      }\n\n      if (this.props.start == false) {\n        console.log(\"was false\");\n        let firstDate = this.state.date.toISOString();\n        let multiDate = firstDate.split(\"T\");\n        this.props.store.endDate = multiDate[0] + \"T24:00:00.000Z\";\n        console.log(this.props.store.endDate);\n        this.props.store.date = \"Custom\";\n      }\n    }\n  }\n\n  render() {\n    return __jsx(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleChange\n    });\n  }\n\n}, _temp)) || _class) || _class);\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}