{"ast":null,"code":"var _dec, _class2, _dec2, _class3;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { getNotes, getHashtags } from \"./notesHelpers\";\nimport gql from \"graphql-tag\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes, faEquals } from \"@fortawesome/free-solid-svg-icons\";\nimport { inject, observer } from \"mobx-react\";\nimport { when } from \"mobx\";\nimport equal from \"fast-deep-equal\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { wideFont, smallFont } from \"../../shared/helpers\";\n\nlet _class = (_dec2 = inject([\"store\"]), _dec2(_class3 = observer(_class3 = class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      hashtags: [],\n      initHashtags: [],\n      showNotes: false\n    };\n    this.setShowNotes = this.setShowNotes.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.store.tempNotes[0] != undefined) {\n      let isTemp = false;\n\n      for (let i = 0; i < this.props.store.tempNotes.length; i++) {\n        if (this.props.store.tempNotes[i].time == this.props.firstTrade.timestamp) {\n          this.setState({\n            value: this.props.store.tempNotes[i].note\n          });\n          isTemp = true;\n        }\n\n        if (i == this.props.store.tempNotes.length - 1 && isTemp == false) {\n          this.setState({\n            value: this.props.firstTrade.notes\n          });\n        }\n      }\n    } else {\n      if (this.props.firstTrade.notes != \"undefined\") {\n        this.setState({\n          value: this.props.firstTrade.notes\n        });\n      }\n    }\n\n    let splitTags = this.props.firstTrade.hashtags.split(\",\");\n    splitTags.map(tag => {\n      this.state.initHashtags.push(tag);\n    });\n  }\n\n  handleChange(client) {\n    return event => {\n      // event.preventDefault();\n      this.setState({\n        value: event.target.value\n      }, this.handleSubmit(client));\n      this.props.store.addTempNote(this.props.firstTrade.timestamp, event.target.value);\n    };\n  }\n\n  removeHashtag(client, hashtag) {\n    return async event => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n\n      let time = this.props.firstTrade.timestamp;\n      client.mutate({\n        mutation: gql`\n            mutation removeHashtag($time: String!, $hashtag: String!) {\n              removeHashtag(time: $time, hashtag: $hashtag)\n            }\n          `,\n        variables: {\n          time,\n          hashtag\n        },\n        refetchQueries: [`fetchTradeHistory`]\n      }).then(() => {\n        this.props.store.changeHasTempTags();\n      });\n    };\n  }\n\n  handleSubmit(client) {\n    return event => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n\n      console.log(\"HASHTAGS\", this.state.hashtags);\n      getNotes(this.state.value).then(async res => {\n        let notes = res[0];\n        let time = this.props.firstTrade.timestamp;\n        let reso = client.mutate({\n          mutation: gql`\n            mutation addNotes($time: String!, $notes: String!) {\n              addNotes(time: $time, notes: $notes)\n            }\n          `,\n          variables: {\n            time,\n            notes\n          }\n        });\n        return await reso;\n      });\n    };\n  }\n\n  setShowNotes() {\n    if (this.state.showNotes == false) {\n      this.setState({\n        showNotes: true\n      });\n    } else {\n      this.setState({\n        showNotes: false\n      });\n    }\n  }\n\n  render() {\n    return __jsx(ApolloConsumer, null, client => __jsx(\"div\", null, __jsx(FullRow, {\n      onSubmit: this.handleSubmit(client)\n    }, this.state.initHashtags.map(tag => {\n      if (tag != \"undefined\") {\n        return __jsx(SingleHashtagDiv, null, __jsx(SingleHashtagText, null, \"#\", tag), __jsx(SingleHashtagDelete, {\n          onClick: this.removeHashtag(client, tag)\n        }, __jsx(FontAwesomeIcon, {\n          icon: faTimes,\n          size: \"xs\",\n          style: {\n            transition: \"none\"\n          }\n        })));\n      }\n    }), __jsx(HashtagDiv, null, __jsx(AddHashtag, {\n      firstTrade: this.props.firstTrade,\n      client: client\n    })))));\n  }\n\n}) || _class3) || _class3);\n\nexport { _class as default }; // const NotesInput = styled.textarea`\n//   width: 100%;\n//   padding: 12px 20px;\n//   margin: 8px 0;\n//   box-sizing: border-box;\n//   background: #f8f8ff;\n//   border: none;\n// `;\n\nlet AddHashtag = (_dec = inject([\"store\"]), _dec(_class2 = observer(_class2 = class AddHashtag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      client: this.props.client\n    });\n  }\n\n  handleChange(event) {\n    // event.preventDefault();\n    console.log(event.target.value);\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    // return event => {\n    event.preventDefault();\n    console.log(this.state.value);\n    getHashtags(this.state.value).then(async res => {\n      console.log(\"CLICKED\");\n      let client = this.state.client;\n      let hashtag = res;\n      console.log(hashtag, \"HASHTAG\");\n      let time = this.props.firstTrade.timestamp;\n      let reso = client.mutate({\n        mutation: gql`\n            mutation addHashtag($time: String!, $hashtag: String!) {\n              addHashtag(time: $time, hashtag: $hashtag)\n            }\n          `,\n        variables: {\n          time,\n          hashtag\n        },\n        refetchQueries: [`fetchTradeHistory`]\n      });\n      return await reso;\n    }).then(reso => {\n      this.setState({\n        value: \"\"\n      });\n      this.props.store.changeHasTempTags();\n    }); // };\n  }\n\n  clicked() {\n    this.state.clicked ? this.setState({\n      clicked: false\n    }) : this.setState({\n      clicked: true\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Popup, {\n      onClick: this.clicked,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      }\n    }, __jsx(\"div\", null, \"Add Hashtag\"), __jsx(FontAwesomeIcon, {\n      icon: faPlus,\n      style: {\n        transition: \"none\",\n        margin: \"auto 4px\"\n      }\n    })), this.state.clicked ? __jsx(PopupTop, null, __jsx(\"form\", {\n      onSubmit: this.handleSubmit\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange\n    }), __jsx(AddHashSubmit, {\n      type: \"submit\",\n      value: \"Add\"\n    }))) : null);\n  }\n\n}) || _class2) || _class2);\nconst AddHashSubmit = styled.input.withConfig({\n  displayName: \"NotesTest__AddHashSubmit\",\n  componentId: \"sc-6j67dn-0\"\n})([\"background:none;border:none;color:white;font-weight:500;padding:2px;\"]);\nconst Popup = styled.div.withConfig({\n  displayName: \"NotesTest__Popup\",\n  componentId: \"sc-6j67dn-1\"\n})([\"position:relative;display:inline-block;cursor:pointer;background:#000;padding:8px;border-radius:2px;\"]);\nconst PopupTop = styled.div.withConfig({\n  displayName: \"NotesTest__PopupTop\",\n  componentId: \"sc-6j67dn-2\"\n})([\"position:absolute;background:#000;z-index:1;margin:5px;padding:2px;border-radius:2px;\"]); // background: #6c757d;\n// background: #b9bdc1;\n\nconst SingleHashtagDiv = styled.div.withConfig({\n  displayName: \"NotesTest__SingleHashtagDiv\",\n  componentId: \"sc-6j67dn-3\"\n})([\"background:#f8f8ff;margin:0 8px;color:black;padding:5px 7px;white-space:nowrap;display:flex;flex-direction:row;margin-left:0px;border-radius:2px;\"]);\nconst ShowNotesDiv = styled.div.withConfig({\n  displayName: \"NotesTest__ShowNotesDiv\",\n  componentId: \"sc-6j67dn-4\"\n})([\"background:#fff;margin:20px 8px;color:#000;padding:10px;padding-top:8px;white-space:nowrap;display:flex;flex-direction:row;margin-left:0px;border-radius:2px;background:#f8f8ff;:hover{transition:none;cursor:pointer;}\"]);\nconst ShowNotesInner = styled.div.withConfig({\n  displayName: \"NotesTest__ShowNotesInner\",\n  componentId: \"sc-6j67dn-5\"\n})([\"\", \" font-size:13px;transition:none;margin:auto;\"], wideFont);\nconst SingleHashtagText = styled.div.withConfig({\n  displayName: \"NotesTest__SingleHashtagText\",\n  componentId: \"sc-6j67dn-6\"\n})([\"margin:auto;\", \"\"], wideFont);\nconst SingleHashtagDelete = styled.div.withConfig({\n  displayName: \"NotesTest__SingleHashtagDelete\",\n  componentId: \"sc-6j67dn-7\"\n})([\"margin:auto;margin-left:6px;margin-bottom:4px;:hover{cursor:pointer;}\"]);\nconst HashtagDiv = styled.div.withConfig({\n  displayName: \"NotesTest__HashtagDiv\",\n  componentId: \"sc-6j67dn-8\"\n})([\"margin:auto 0;text-align:center;vertical-align:middle;color:white;\"]);\nconst FullRow = styled.form.withConfig({\n  displayName: \"NotesTest__FullRow\",\n  componentId: \"sc-6j67dn-9\"\n})([\"display:flex;flex-direction:row;\"]);\nconst NotesSubmit = styled.input.withConfig({\n  displayName: \"NotesTest__NotesSubmit\",\n  componentId: \"sc-6j67dn-10\"\n})([\"margin:9px;padding:15px;background:#212528;border:none;color:white;\"]);\nconst NotesInput = styled.textarea.withConfig({\n  displayName: \"NotesTest__NotesInput\",\n  componentId: \"sc-6j67dn-11\"\n})([\"width:100%;padding:12px 20px;margin:0px 0;box-sizing:border-box;background:#f8f8ff;border:none;\"]);","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Dashboard/Notes/NotesTest.js"],"names":["Component","styled","ApolloConsumer","getNotes","getHashtags","gql","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","FontAwesomeIcon","faPlus","faTimes","faEquals","inject","observer","when","equal","TextareaAutosize","wideFont","smallFont","constructor","props","state","value","hashtags","initHashtags","showNotes","setShowNotes","bind","handleChange","handleSubmit","componentDidMount","store","tempNotes","undefined","isTemp","i","length","time","firstTrade","timestamp","setState","note","notes","splitTags","split","map","tag","push","client","event","target","addTempNote","removeHashtag","hashtag","preventDefault","mutate","mutation","variables","refetchQueries","then","changeHasTempTags","console","log","res","reso","render","transition","AddHashtag","clicked","display","flexDirection","margin","AddHashSubmit","input","Popup","div","PopupTop","SingleHashtagDiv","ShowNotesDiv","ShowNotesInner","SingleHashtagText","SingleHashtagDelete","HashtagDiv","FullRow","form","NotesSubmit","NotesInput","textarea"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { getNotes, getHashtags } from \"./notesHelpers\";\nimport gql from \"graphql-tag\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes, faEquals } from \"@fortawesome/free-solid-svg-icons\";\nimport { inject, observer } from \"mobx-react\";\nimport { when } from \"mobx\";\nimport equal from \"fast-deep-equal\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { wideFont, smallFont } from \"../../shared/helpers\";\n\n@inject([\"store\"])\n@observer\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      hashtags: [],\n      initHashtags: [],\n      showNotes: false,\n    };\n\n    this.setShowNotes = this.setShowNotes.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.store.tempNotes[0] != undefined) {\n      let isTemp = false;\n      for (let i = 0; i < this.props.store.tempNotes.length; i++) {\n        if (\n          this.props.store.tempNotes[i].time == this.props.firstTrade.timestamp\n        ) {\n          this.setState({ value: this.props.store.tempNotes[i].note });\n          isTemp = true;\n        }\n        if (i == this.props.store.tempNotes.length - 1 && isTemp == false) {\n          this.setState({\n            value: this.props.firstTrade.notes,\n          });\n        }\n      }\n    } else {\n      if (this.props.firstTrade.notes != \"undefined\") {\n        this.setState({\n          value: this.props.firstTrade.notes,\n        });\n      }\n    }\n    let splitTags = this.props.firstTrade.hashtags.split(\",\");\n    splitTags.map((tag) => {\n      this.state.initHashtags.push(tag);\n    });\n  }\n\n  handleChange(client) {\n    return (event) => {\n      // event.preventDefault();\n      this.setState({ value: event.target.value }, this.handleSubmit(client));\n      this.props.store.addTempNote(\n        this.props.firstTrade.timestamp,\n        event.target.value\n      );\n    };\n  }\n\n  removeHashtag(client, hashtag) {\n    return async (event) => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n      let time = this.props.firstTrade.timestamp;\n      client\n        .mutate({\n          mutation: gql`\n            mutation removeHashtag($time: String!, $hashtag: String!) {\n              removeHashtag(time: $time, hashtag: $hashtag)\n            }\n          `,\n          variables: { time, hashtag },\n          refetchQueries: [`fetchTradeHistory`],\n        })\n        .then(() => {\n          this.props.store.changeHasTempTags();\n        });\n    };\n  }\n\n  handleSubmit(client) {\n    return (event) => {\n      if (event != undefined && event.preventDefault != undefined) {\n        event.preventDefault();\n      }\n      console.log(\"HASHTAGS\", this.state.hashtags);\n      getNotes(this.state.value).then(async (res) => {\n        let notes = res[0];\n        let time = this.props.firstTrade.timestamp;\n        let reso = client.mutate({\n          mutation: gql`\n            mutation addNotes($time: String!, $notes: String!) {\n              addNotes(time: $time, notes: $notes)\n            }\n          `,\n          variables: { time, notes },\n        });\n\n        return await reso;\n      });\n    };\n  }\n\n  setShowNotes() {\n    if (this.state.showNotes == false) {\n      this.setState({ showNotes: true });\n    } else {\n      this.setState({ showNotes: false });\n    }\n  }\n  render() {\n    return (\n      <ApolloConsumer>\n        {(client) => (\n          <div>\n            <FullRow onSubmit={this.handleSubmit(client)}>\n              {this.state.initHashtags.map((tag) => {\n                if (tag != \"undefined\") {\n                  return (\n                    <SingleHashtagDiv>\n                      <SingleHashtagText>#{tag}</SingleHashtagText>\n                      <SingleHashtagDelete\n                        onClick={this.removeHashtag(client, tag)}\n                      >\n                        <FontAwesomeIcon\n                          icon={faTimes}\n                          size=\"xs\"\n                          style={{\n                            transition: \"none\",\n                          }}\n                        />\n                      </SingleHashtagDelete>\n                    </SingleHashtagDiv>\n                  );\n                }\n              })}\n              <HashtagDiv>\n                <AddHashtag\n                  firstTrade={this.props.firstTrade}\n                  client={client}\n                />\n              </HashtagDiv>\n            </FullRow>\n          </div>\n        )}\n      </ApolloConsumer>\n    );\n  }\n}\n// const NotesInput = styled.textarea`\n//   width: 100%;\n//   padding: 12px 20px;\n//   margin: 8px 0;\n//   box-sizing: border-box;\n//   background: #f8f8ff;\n//   border: none;\n// `;\n\n@inject([\"store\"])\n@observer\nclass AddHashtag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { clicked: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ client: this.props.client });\n  }\n\n  handleChange(event) {\n    // event.preventDefault();\n    console.log(event.target.value);\n    this.setState({ value: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    // return event => {\n    event.preventDefault();\n    console.log(this.state.value);\n    getHashtags(this.state.value)\n      .then(async (res) => {\n        console.log(\"CLICKED\");\n        let client = this.state.client;\n        let hashtag = res;\n        console.log(hashtag, \"HASHTAG\");\n        let time = this.props.firstTrade.timestamp;\n        let reso = client.mutate({\n          mutation: gql`\n            mutation addHashtag($time: String!, $hashtag: String!) {\n              addHashtag(time: $time, hashtag: $hashtag)\n            }\n          `,\n          variables: { time, hashtag },\n          refetchQueries: [`fetchTradeHistory`],\n        });\n\n        return await reso;\n      })\n      .then((reso) => {\n        this.setState({ value: \"\" });\n        this.props.store.changeHasTempTags();\n      });\n    // };\n  }\n\n  clicked() {\n    this.state.clicked\n      ? this.setState({ clicked: false })\n      : this.setState({ clicked: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <Popup\n          onClick={this.clicked}\n          style={{ display: \"flex\", flexDirection: \"row\" }}\n        >\n          <div>Add Hashtag</div>\n          <FontAwesomeIcon\n            icon={faPlus}\n            style={{ transition: \"none\", margin: \"auto 4px\" }}\n          />\n        </Popup>\n        {this.state.clicked ? (\n          <PopupTop>\n            <form onSubmit={this.handleSubmit}>\n              <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n              <AddHashSubmit type=\"submit\" value=\"Add\" />\n            </form>\n          </PopupTop>\n        ) : null}\n      </div>\n    );\n  }\n}\nconst AddHashSubmit = styled.input`\n  background: none;\n  border: none;\n  color: white;\n  font-weight: 500;\n  padding: 2px;\n`;\nconst Popup = styled.div`\n  position: relative;\n  display: inline-block;\n  cursor: pointer;\n  background: #000;\n  padding: 8px;\n  border-radius: 2px;\n`;\n\nconst PopupTop = styled.div`\n  position: absolute;\n  background: #000;\n  z-index: 1;\n  margin: 5px;\n  padding: 2px;\n  border-radius: 2px;\n`;\n// background: #6c757d;\n// background: #b9bdc1;\nconst SingleHashtagDiv = styled.div`\n  background: #f8f8ff;\n  margin: 0 8px;\n  color: black;\n  padding: 5px 7px;\n\n  white-space: nowrap;\n  display: flex;\n  flex-direction: row;\n  margin-left: 0px;\n  border-radius: 2px;\n`;\n\nconst ShowNotesDiv = styled.div`\n  background: #fff;\n  margin: 20px 8px;\n\n  color: #000;\n  padding: 10px;\n  padding-top: 8px;\n  white-space: nowrap;\n  display: flex;\n  flex-direction: row;\n  margin-left: 0px;\n  border-radius: 2px;\n  background: #f8f8ff;\n  :hover {\n    transition: none;\n    cursor: pointer;\n  }\n`;\n\nconst ShowNotesInner = styled.div`\n  ${wideFont}\n  font-size:13px;\n  transition: none;\n  margin: auto;\n`;\n\nconst SingleHashtagText = styled.div`\n  margin: auto;\n  ${wideFont}\n`;\nconst SingleHashtagDelete = styled.div`\n  margin: auto;\n  margin-left: 6px;\n  margin-bottom: 4px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst HashtagDiv = styled.div`\n  margin: auto 0;\n  text-align: center;\n  vertical-align: middle;\n  color: white;\n`;\n\nconst FullRow = styled.form`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst NotesSubmit = styled.input`\n  margin: 9px;\n  padding: 15px;\n  background: #212528;\n  border: none;\n  color: white;\n`;\n\nconst NotesInput = styled.textarea`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 0px 0;\n  box-sizing: border-box;\n  background: #f8f8ff;\n  border: none;\n`;\n"]},"metadata":{},"sourceType":"module"}