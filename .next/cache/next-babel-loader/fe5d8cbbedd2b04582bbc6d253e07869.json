{"ast":null,"code":"export const timeCompare = (d, datu, timeframe) => {\n  var MS_PER_MINUTE = 60000;\n  var coeffFive = 1000 * 60 * 5; // var coeffOne = 1000 * 60 * 5;\n\n  var coeffOne = 1000 * 60;\n\n  if (timeframe == \"1m\") {\n    return Math.round(d.date.getTime() / coeffOne) * coeffOne === Math.round(datu.getTime() / coeffOne) * coeffOne;\n  }\n\n  if (timeframe == \"5m\") {\n    return Math.round(d.date.getTime() / coeffFive) * coeffFive === Math.round(datu.getTime() / coeffFive) * coeffFive;\n  }\n\n  if (timeframe == \"1h\") {\n    return d.date.getHours() === datu.getHours() + 1 && d.date.getDate() === datu.getDate();\n  }\n\n  if (timeframe == \"1d\") {\n    return d.date.getDate() === datu.getDate();\n  }\n};\nexport const getYRangeNums = data => {\n  let lowNum;\n  let highNum;\n\n  for (let i = 0; i < data.length; i++) {\n    if (i == 0) {\n      lowNum = data[0].low;\n      highNum = data[0].high;\n    }\n\n    if (data[i].low < lowNum) {\n      lowNum = data[i].low;\n    }\n\n    if (data[i].high > highNum) {\n      highNum = data[i].high;\n    }\n\n    if (i == data.length - 1) {\n      let arr = [];\n      arr.push(lowNum);\n      arr.push(highNum);\n      console.log(arr);\n      return arr;\n    }\n  }\n};\nexport const findYValSell = (yLow, yHigh, price) => {\n  // let fullRange = yHigh - yLow;\n  // let myRange = yHigh - parseInt(price);\n  // let outOf = myRange / fullRange;\n  // let multiplied = outOf * 180 + 70;\n  // console.log(outOf, multiplied);\n  return 80;\n};\nexport const findYValBuy = (yLow, yHigh, price) => {\n  let fullRange = yHigh - yLow;\n  let myRange = yHigh - parseInt(price);\n  let outOf = myRange / fullRange;\n  let multiplied = outOf * 180 + 100;\n  console.log(outOf, multiplied);\n  return multiplied;\n};","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Dashboard/Chart/helpers.js"],"names":["timeCompare","d","datu","timeframe","MS_PER_MINUTE","coeffFive","coeffOne","Math","round","date","getTime","getHours","getDate","getYRangeNums","data","lowNum","highNum","i","length","low","high","arr","push","console","log","findYValSell","yLow","yHigh","price","findYValBuy","fullRange","myRange","parseInt","outOf","multiplied"],"mappings":"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","sourcesContent":["export const timeCompare = (d, datu, timeframe) => {\n  var MS_PER_MINUTE = 60000;\n  var coeffFive = 1000 * 60 * 5;\n  // var coeffOne = 1000 * 60 * 5;\n  var coeffOne = 1000 * 60;\n  if (timeframe == \"1m\") {\n    return (\n      Math.round(d.date.getTime() / coeffOne) * coeffOne ===\n      Math.round(datu.getTime() / coeffOne) * coeffOne\n    );\n  }\n  if (timeframe == \"5m\") {\n    return (\n      Math.round(d.date.getTime() / coeffFive) * coeffFive ===\n      Math.round(datu.getTime() / coeffFive) * coeffFive\n    );\n  }\n  if (timeframe == \"1h\") {\n    return (\n      d.date.getHours() === datu.getHours() + 1 &&\n      d.date.getDate() === datu.getDate()\n    );\n  }\n  if (timeframe == \"1d\") {\n    return d.date.getDate() === datu.getDate();\n  }\n};\n\nexport const getYRangeNums = (data) => {\n  let lowNum;\n  let highNum;\n  for (let i = 0; i < data.length; i++) {\n    if (i == 0) {\n      lowNum = data[0].low;\n      highNum = data[0].high;\n    }\n    if (data[i].low < lowNum) {\n      lowNum = data[i].low;\n    }\n    if (data[i].high > highNum) {\n      highNum = data[i].high;\n    }\n    if (i == data.length - 1) {\n      let arr = [];\n      arr.push(lowNum);\n      arr.push(highNum);\n      console.log(arr);\n      return arr;\n    }\n  }\n};\n\nexport const findYValSell = (yLow, yHigh, price) => {\n  // let fullRange = yHigh - yLow;\n  // let myRange = yHigh - parseInt(price);\n  // let outOf = myRange / fullRange;\n  // let multiplied = outOf * 180 + 70;\n  // console.log(outOf, multiplied);\n  return 80;\n};\nexport const findYValBuy = (yLow, yHigh, price) => {\n  let fullRange = yHigh - yLow;\n  let myRange = yHigh - parseInt(price);\n  let outOf = myRange / fullRange;\n  let multiplied = outOf * 180 + 100;\n  console.log(outOf, multiplied);\n  return multiplied;\n};\n"]},"metadata":{},"sourceType":"module"}