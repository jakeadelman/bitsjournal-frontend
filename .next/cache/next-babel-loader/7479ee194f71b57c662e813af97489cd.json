{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _temp;\n\nimport { action, observable } from \"mobx\";\nimport { useStaticRendering, observer } from \"mobx-react\";\nimport { create, persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport { getStateDate, makeDateHrs, makeDateDays } from \"../components/Helpers/Functions\";\nvar isServer = !true;\nuseStaticRendering(isServer);\nexport var Store = (_class = (_temp = function Store() {\n  _classCallCheck(this, Store);\n\n  _initializerDefineProperty(this, \"lastUpdate\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"light\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"isAuth\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"startDate\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"endDate\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"symbol\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"date\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"pnl\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"globalHash\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"tempNotes\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"tempTags\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"hasTempTags\", _descriptor12, this);\n\n  _initializerDefineProperty(this, \"singleTrade\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"hasSingleTrade\", _descriptor14, this);\n\n  _initializerDefineProperty(this, \"isSingleNotes\", _descriptor15, this);\n\n  _initializerDefineProperty(this, \"changeDate\", _descriptor16, this);\n\n  _initializerDefineProperty(this, \"addPnl\", _descriptor17, this);\n\n  _initializerDefineProperty(this, \"resetPnl\", _descriptor18, this);\n\n  _initializerDefineProperty(this, \"pushGlobalHash\", _descriptor19, this);\n\n  _initializerDefineProperty(this, \"addTempNote\", _descriptor20, this);\n\n  _initializerDefineProperty(this, \"clearTempNotes\", _descriptor21, this);\n\n  _initializerDefineProperty(this, \"addTempTag\", _descriptor22, this);\n\n  _initializerDefineProperty(this, \"clearTempTags\", _descriptor23, this);\n\n  _initializerDefineProperty(this, \"changeHasTempTags\", _descriptor24, this);\n\n  _initializerDefineProperty(this, \"resetHasTempTags\", _descriptor25, this);\n\n  _initializerDefineProperty(this, \"setSymbol\", _descriptor26, this);\n\n  _initializerDefineProperty(this, \"resetPnl\", _descriptor27, this);\n\n  _initializerDefineProperty(this, \"setSingleTrade\", _descriptor28, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"lastUpdate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"light\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"isAuth\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"startDate\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"endDate\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"symbol\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"XBTUSD\";\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"date\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"Today\";\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"pnl\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"globalHash\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"tempNotes\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"tempTags\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"hasTempTags\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"singleTrade\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"hasSingleTrade\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"isSingleNotes\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"changeDate\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (newDate) {\n      var dates = getStateDate(newDate);\n      _this.date = newDate;\n      _this.startDate = dates.start;\n      _this.endDate = dates.end;\n    };\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"addPnl\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (pnl) {\n      _this2.pnl += pnl;\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"resetPnl\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function () {\n      _this3.pnl = 0;\n    };\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"pushGlobalHash\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function (hash) {\n      _this4.globalHash.push(hash);\n    };\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"addTempNote\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return function (time, note) {\n      if (_this5.tempNotes[0] == undefined) {\n        var newNote = {};\n        newNote[\"note\"] = note;\n        newNote[\"time\"] = time;\n\n        _this5.tempNotes.push(newNote);\n      } else {\n        var alreadyPresentNote = false;\n\n        for (var i = 0; i < _this5.tempNotes.length; i++) {\n          if (_this5.tempNotes[i].time == time) {\n            _this5.tempNotes[i].note = note;\n            alreadyPresentNote = true;\n          }\n\n          if (i == _this5.tempNotes.length - 1 && alreadyPresentNote == false) {\n            var _newNote = {};\n            _newNote[\"note\"] = note;\n            _newNote[\"time\"] = time;\n\n            _this5.tempNotes.push(_newNote);\n          }\n        }\n      }\n    };\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"clearTempNotes\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function () {\n      _this6.tempNotes = [];\n    };\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"addTempTag\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this7 = this;\n\n    return function (time, tag) {\n      var newTag = {};\n      newTag[\"tag\"] = tag;\n      newTag[\"time\"] = time;\n\n      _this7.tempTags.push(newTag);\n\n      _this7.changeHasTempTags();\n    };\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"clearTempTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this8 = this;\n\n    return function () {\n      _this8.tempTags = [];\n    };\n  }\n}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"changeHasTempTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this9 = this;\n\n    return function () {\n      _this9.hasTempTags = true;\n    };\n  }\n}), _descriptor25 = _applyDecoratedDescriptor(_class.prototype, \"resetHasTempTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this10 = this;\n\n    return function () {\n      _this10.hasTempTags = false;\n    };\n  }\n}), _descriptor26 = _applyDecoratedDescriptor(_class.prototype, \"setSymbol\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this11 = this;\n\n    return function (newSymbol) {\n      _this11.symbol = newSymbol;\n    };\n  }\n}), _descriptor27 = _applyDecoratedDescriptor(_class.prototype, \"resetPnl\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this12 = this;\n\n    return function () {\n      _this12.pnl = 0;\n    };\n  }\n}), _descriptor28 = _applyDecoratedDescriptor(_class.prototype, \"setSingleTrade\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this13 = this;\n\n    return function (dat) {\n      _this13.singleTrade = dat;\n    };\n  }\n})), _class);\nvar store = null;\nexport var hydrate = create();\nexport var StoreContext = createContext(new Store());\nexport function initializeStore(initialData) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  hydrate(\"store\", store).then(function () {\n    console.log(\"someStore has been hydrated\");\n  });\n  return store;\n}","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/stores/store.js"],"names":["action","observable","useStaticRendering","observer","create","persist","createContext","getStateDate","makeDateHrs","makeDateDays","isServer","Store","newDate","dates","date","startDate","start","endDate","end","pnl","hash","globalHash","push","time","note","tempNotes","undefined","newNote","alreadyPresentNote","i","length","tag","newTag","tempTags","changeHasTempTags","hasTempTags","newSymbol","symbol","dat","singleTrade","store","hydrate","StoreContext","initializeStore","initialData","then","console","log"],"mappings":"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","sourcesContent":["import { action, observable } from \"mobx\";\nimport { useStaticRendering, observer } from \"mobx-react\";\nimport { create, persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport {\n  getStateDate,\n  makeDateHrs,\n  makeDateDays,\n} from \"../components/Helpers/Functions\";\n\nconst isServer = !process.browser;\nuseStaticRendering(isServer);\n\nexport class Store {\n  @observable lastUpdate = 0;\n  @persist @observable light = true;\n  @persist @observable isAuth = false;\n  @persist @observable startDate = null;\n  @persist @observable endDate = null;\n  @persist @observable symbol = \"XBTUSD\";\n\n  @persist @observable date = \"Today\";\n  @observable pnl = 0;\n  @observable globalHash = [];\n  @persist @observable tempNotes = [];\n  @persist @observable tempTags = [];\n  @persist @observable hasTempTags = false;\n\n  @persist @observable singleTrade = {};\n  @persist @observable hasSingleTrade = false;\n  @persist @observable isSingleNotes = false;\n\n  @action changeDate = (newDate) => {\n    let dates = getStateDate(newDate);\n    this.date = newDate;\n    this.startDate = dates.start;\n    this.endDate = dates.end;\n  };\n\n  @action addPnl = (pnl) => {\n    this.pnl += pnl;\n  };\n\n  @action resetPnl = () => {\n    this.pnl = 0;\n  };\n\n  @action pushGlobalHash = (hash) => {\n    this.globalHash.push(hash);\n  };\n\n  @action addTempNote = (time, note) => {\n    if (this.tempNotes[0] == undefined) {\n      let newNote = {};\n      newNote[\"note\"] = note;\n      newNote[\"time\"] = time;\n      this.tempNotes.push(newNote);\n    } else {\n      let alreadyPresentNote = false;\n      for (let i = 0; i < this.tempNotes.length; i++) {\n        if (this.tempNotes[i].time == time) {\n          this.tempNotes[i].note = note;\n          alreadyPresentNote = true;\n        }\n        if (i == this.tempNotes.length - 1 && alreadyPresentNote == false) {\n          let newNote = {};\n          newNote[\"note\"] = note;\n          newNote[\"time\"] = time;\n          this.tempNotes.push(newNote);\n        }\n      }\n    }\n  };\n\n  @action clearTempNotes = () => {\n    this.tempNotes = [];\n  };\n\n  @action addTempTag = (time, tag) => {\n    let newTag = {};\n    newTag[\"tag\"] = tag;\n    newTag[\"time\"] = time;\n    this.tempTags.push(newTag);\n    this.changeHasTempTags();\n  };\n\n  @action clearTempTags = () => {\n    this.tempTags = [];\n  };\n\n  @action changeHasTempTags = () => {\n    this.hasTempTags = true;\n  };\n  @action resetHasTempTags = () => {\n    this.hasTempTags = false;\n  };\n  @action setSymbol = (newSymbol) => {\n    this.symbol = newSymbol;\n  };\n\n  @action resetPnl = () => {\n    this.pnl = 0;\n  };\n\n  @action setSingleTrade = (dat) => {\n    this.singleTrade = dat;\n  };\n}\n\nlet store = null;\nexport const hydrate = create();\nexport const StoreContext = createContext(new Store());\n\nexport function initializeStore(initialData) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  hydrate(\"store\", store).then(() => {\n    console.log(\"someStore has been hydrated\");\n  });\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}