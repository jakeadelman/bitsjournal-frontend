{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // import { observer } from \"mobx-react-lite\";\n// import { UserStoreContext } from \"../stores/UserStore.ts\";\n\nimport styled from \"styled-components\";\nimport FormWrapper from \"./FormWrapper\";\nimport Input from \"../form/Input\";\nimport Label from \"./Label\";\nimport Button from \"../shared/Button\";\n\nconst Cookie = require(\"js-cookie\");\n\nconst LoginForm = () => {\n  // const userStore = useContext(UserStoreContext);\n  async function handleSubmit(event, client) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    form.reset();\n    let r = await client.mutate({\n      mutation: gql`\n        mutation login($email: String!, $password: String!) {\n          login(email: $email, password: $password)\n        }\n      `,\n      variables: {\n        email,\n        password\n      }\n    });\n    console.log(\"LOGGING IN\"); //check if login credentials are correct\n\n    let isTrue = r.data.login == \"true\";\n\n    if (isTrue == true) {\n      Cookie.set(\"isAuth\", \"true\"); // userStore.isAuth = true;\n\n      Router.push(\"/dashboard\");\n    } else {\n      setWrongCredentials(true);\n      return;\n    }\n  }\n\n  const {\n    0: wrongCredentials,\n    1: setWrongCredentials\n  } = useState(false);\n  return __jsx(ApolloConsumer, null, client => __jsx(FormWrapper, null, __jsx(StyledForm, {\n    onSubmit: event => handleSubmit(event, client)\n  }, __jsx(InputWrapper, null, __jsx(Label, null, \"email\"), __jsx(Input, {\n    placeholder: \"\",\n    name: \"email\",\n    type: \"text\",\n    required: true\n  })), __jsx(InputWrapper, null, __jsx(Label, null, \"password\"), __jsx(Input, {\n    placeholder: \"\",\n    name: \"password\",\n    type: \"text\",\n    required: true\n  })), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"100%\"\n    }\n  }, __jsx(SubmitButton, {\n    type: \"submit\"\n  }, \"Submit\")), wrongCredentials == true ? __jsx(\"div\", {\n    className: \"login-alert\"\n  }, __jsx(Alert, {\n    color: \"secondary\",\n    isOpen: wrongCredentials == true ? true : false\n  }, \"Wrong login credentials\")) : null)));\n};\n\nexport default LoginForm;\nconst StyledForm = styled.form.withConfig({\n  displayName: \"LoginForm__StyledForm\",\n  componentId: \"zc9mcq-0\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;\", \";\"], props => props.loading && \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\");\nconst SubmitButton = styled(Button).withConfig({\n  displayName: \"LoginForm__SubmitButton\",\n  componentId: \"zc9mcq-1\"\n})([\"align-self:flex-end;margin-right:0px;margin-left:auto;\"]);\nconst InputWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__InputWrapper\",\n  componentId: \"zc9mcq-2\"\n})([\"position:relative;margin-bottom:24px;width:100%;\"]);","map":null,"metadata":{},"sourceType":"module"}