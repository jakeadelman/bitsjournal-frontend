{"ast":null,"code":"var __jsx = React.createElement;\nimport { getNotes, getHashtags } from \"./notesHelpers\";\nimport React, { useState, useEffect } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport { observer } from \"mobx-react-lite\";\nimport { inject } from \"mobx-react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport gql from \"graphql-tag\";\nconst MyTextArea = inject(\"store\")(observer(({\n  firstTrade,\n  store,\n  client\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState();\n  const {\n    0: light,\n    1: setLight\n  } = useState(false);\n  const {\n    0: myClient,\n    1: setClient\n  } = useState(client);\n  useEffect(() => {\n    let val;\n\n    if (firstTrade.notes == \"undefined\") {\n      setValue(\"Add notes here...\");\n      setLight(true);\n    } else {\n      setValue(firstTrade.notes);\n    }\n\n    let notTemp = true;\n\n    if (store.tempNotes[0] !== undefined) {\n      for (let i = 0; i < store.tempNotes.length; i++) {\n        if (store.tempNotes[i].time == firstTrade.timestamp.toString()) {\n          setValue(store.tempNotes[i].note);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    if (value != \"Add notes here...\") {\n      setLight(false);\n      getNotes(value).then(async res => {\n        let notes = res[0];\n        let time = firstTrade.timestamp;\n        let reso = myClient.mutate({\n          mutation: gql`\n              mutation addNotes($time: String!, $notes: String!) {\n                addNotes(time: $time, notes: $notes)\n              }\n            `,\n          variables: {\n            time,\n            notes\n          }\n        });\n        return await reso;\n      });\n    }\n  }, [value]);\n\n  function handleChange() {\n    return event => {\n      setLight(false);\n      store.addTempNote(firstTrade.timestamp, event.target.value);\n      setValue(event.target.value);\n    };\n  }\n\n  if (light == false) {\n    return __jsx(TextareaAutosize, {\n      style: {\n        width: \"100%\",\n        padding: \"12px 20px\",\n        marginTop: \"8px\",\n        boxSizing: \"border-box\",\n        background: \"#f8f8ff\",\n        border: \"none\",\n        outline: \"none\",\n        fontSize: \"15px\"\n      },\n      rows: 5,\n      maxRows: 25,\n      value: value,\n      onChange: handleChange()\n    });\n  } else {\n    return __jsx(TextareaAutosize, {\n      style: {\n        width: \"100%\",\n        padding: \"12px 20px\",\n        marginTop: \"8px\",\n        boxSizing: \"border-box\",\n        background: \"#f8f8ff\",\n        border: \"none\",\n        outline: \"none\",\n        fontSize: \"15px\",\n        color: \"#c6c6c6\"\n      },\n      rows: 5,\n      maxRows: 25,\n      value: value,\n      onChange: handleChange()\n    });\n  }\n}));\nexport default MyTextArea;","map":null,"metadata":{},"sourceType":"module"}