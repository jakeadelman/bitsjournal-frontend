{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function getNotes(_x) {\n  return _getNotes.apply(this, arguments);\n}\n\nfunction _getNotes() {\n  _getNotes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputVal) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              var notes;\n\n              if (inputVal != null) {\n                notes = inputVal;\n              } else {\n                notes = \"undefined\";\n              } // let hashtags = \"\";\n              // if (inputHashtags != null) {\n              //   for (let k = 0; k < inputHashtags.length; k++) {\n              //     hashtags += inputHashtags[k] + \" \";\n              //     if (k == inputHashtags.length - 1) {\n              //       let endArr = [];\n              //       endArr.push(notes);\n              //       endArr.push(hashtags);\n              //       resolve(endArr);\n              //     }\n              //   }\n              // } else {\n\n\n              var endArr = [];\n              endArr.push(notes); // endArr.push(hashtags);\n\n              resolve(endArr); // }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getNotes.apply(this, arguments);\n}\n\nexport function getHashtags(_x2) {\n  return _getHashtags.apply(this, arguments);\n}\n\nfunction _getHashtags() {\n  _getHashtags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputHashtags) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(inputHashtags, \"INP HASH\");\n            return _context2.abrupt(\"return\", new Promise(function (resolve) {\n              var hashtags;\n\n              if (inputHashtags != null && inputHashtags != undefined) {\n                hashtags = inputHashtags;\n              } else {\n                hashtags = \"undefined\";\n              }\n\n              console.log(hashtags, \"END HASHS\");\n              resolve(hashtags);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getHashtags.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}