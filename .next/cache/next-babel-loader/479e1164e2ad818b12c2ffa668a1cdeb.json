{"ast":null,"code":"export const getNewDat = async (oldDat, hashtags) => {\n  let newTrades = [];\n  let oldTrades = oldDat.fetchTradeHistory;\n\n  for (let i = 0; i < oldTrades.length; i++) {\n    let tradeHashtags = oldTrades[i].hashtags.split(\",\");\n    let oldTrade = oldTrades[i];\n    console.log(tradeHashtags);\n\n    if (tradeHashtags[0] != \"undefined\") {\n      for (let j = 0; j < tradeHashtags.length; j++) {\n        for (let m = 0; m < hashtags.length; m++) {\n          if (hashtags[m] == tradeHashtags[j]) {\n            if (newTrades[0] == undefined) {\n              newTrades.push(oldTrade);\n            } else {\n              newTrades.push(oldTrade);\n            }\n          }\n        }\n      }\n    }\n\n    if (i == oldTrades.length - 1) {\n      console.log(newTrades, \"FILTERED TRADES\");\n      return newTrades;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Dashboard/shared/helpers.js"],"names":["getNewDat","oldDat","hashtags","newTrades","oldTrades","fetchTradeHistory","i","length","tradeHashtags","split","oldTrade","console","log","j","m","undefined","push"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,OAAOC,MAAP,EAAeC,QAAf,KAA4B;AACnD,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAGH,MAAM,CAACI,iBAAvB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,QAAIE,aAAa,GAAGJ,SAAS,CAACE,CAAD,CAAT,CAAaJ,QAAb,CAAsBO,KAAtB,CAA4B,GAA5B,CAApB;AACA,QAAIC,QAAQ,GAAGN,SAAS,CAACE,CAAD,CAAxB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;;AACA,QAAIA,aAAa,CAAC,CAAD,CAAb,IAAoB,WAAxB,EAAqC;AACnC,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACD,MAAlC,EAA0CM,CAAC,EAA3C,EAA+C;AAC7C,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACK,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACxC,cAAIZ,QAAQ,CAACY,CAAD,CAAR,IAAeN,aAAa,CAACK,CAAD,CAAhC,EAAqC;AACnC,gBAAIV,SAAS,CAAC,CAAD,CAAT,IAAgBY,SAApB,EAA+B;AAC7BZ,cAAAA,SAAS,CAACa,IAAV,CAAeN,QAAf;AACD,aAFD,MAEO;AACLP,cAAAA,SAAS,CAACa,IAAV,CAAeN,QAAf;AACD;AACF;AACF;AACF;AACF;;AACD,QAAIJ,CAAC,IAAIF,SAAS,CAACG,MAAV,GAAmB,CAA5B,EAA+B;AAC7BI,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ,EAAuB,iBAAvB;AACA,aAAOA,SAAP;AACD;AACF;AACF,CAzBM","sourcesContent":["export const getNewDat = async (oldDat, hashtags) => {\n  let newTrades = [];\n  let oldTrades = oldDat.fetchTradeHistory;\n  for (let i = 0; i < oldTrades.length; i++) {\n    let tradeHashtags = oldTrades[i].hashtags.split(\",\");\n    let oldTrade = oldTrades[i];\n    console.log(tradeHashtags);\n    if (tradeHashtags[0] != \"undefined\") {\n      for (let j = 0; j < tradeHashtags.length; j++) {\n        for (let m = 0; m < hashtags.length; m++) {\n          if (hashtags[m] == tradeHashtags[j]) {\n            if (newTrades[0] == undefined) {\n              newTrades.push(oldTrade);\n            } else {\n              newTrades.push(oldTrade);\n            }\n          }\n        }\n      }\n    }\n    if (i == oldTrades.length - 1) {\n      console.log(newTrades, \"FILTERED TRADES\");\n      return newTrades;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}