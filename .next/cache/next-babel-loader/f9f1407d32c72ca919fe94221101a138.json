{"ast":null,"code":"var _dec, _class;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport FetchQuery from \"./FetchQuery\";\nimport Router from \"next/router\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store, hydrate } from \"../../stores/store\";\nimport { getStateDate } from \"../Helpers/Functions\";\n\nconst Cookie = require(\"js-cookie\");\n\nlet DashInitialTerms = (_dec = inject(\"store\"), _dec(_class = observer(_class = class DashInitialTerms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: null\n    };\n  }\n\n  componentDidMount() {\n    let cook = Cookie.get(\"isAuth\") == \"true\";\n\n    if (!cook) {\n      Router.push(\"/\");\n    } else if (!!cook) {\n      this.setState({\n        isAuth: cook\n      });\n    }\n\n    if (this.props.store.startDate == null) {\n      let dates = getStateDate(\"This Week\");\n      this.props.store.startDate = dates.start;\n      this.props.store.endDate = dates.end;\n      this.setState({\n        start: true\n      });\n    }\n  }\n\n  render() {\n    if (this.state.start !== null) {\n      return __jsx(ThemeProvider, {\n        theme: theme(false)\n      }, __jsx(\"div\", {\n        style: {\n          width: \"100%\"\n        }\n      }, __jsx(FetchQuery, null)));\n    } else {\n      return __jsx(\"div\", null, \"loading\");\n    }\n  }\n\n}) || _class) || _class);\nexport { DashInitialTerms as default };","map":null,"metadata":{},"sourceType":"module"}