{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        mutation login($email: String!, $password: String!) {\\n          login(email: $email, password: $password)\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\"; // import { observer } from \"mobx-react-lite\";\n// import { UserStoreContext } from \"../stores/UserStore.ts\";\n\nimport styled from \"styled-components\";\nimport FormWrapper from \"./FormWrapper\";\nimport Input from \"../form/Input\";\nimport Label from \"./Label\";\nimport Button from \"../shared/Button\";\n\nvar Cookie = require(\"js-cookie\");\n\nvar LoginForm = function LoginForm() {\n  // const userStore = useContext(UserStoreContext);\n  function handleSubmit(_x, _x2) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, client) {\n      var form, formData, email, password, res, r, isTrue;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              form = event.target;\n              formData = new window.FormData(form);\n              email = formData.get(\"email\");\n              password = formData.get(\"password\");\n              form.reset();\n              res = client.mutate({\n                mutation: gql(_templateObject()),\n                variables: {\n                  email: email,\n                  password: password\n                }\n              });\n              console.log(\"LOGGING IN\");\n              _context.next = 10;\n              return res;\n\n            case 10:\n              r = _context.sent;\n              r = r.data.login; //check if login credentials are correct\n\n              isTrue = r == \"true\";\n\n              if (!(isTrue == true)) {\n                _context.next = 18;\n                break;\n              }\n\n              Cookie.set(\"isAuth\", \"true\"); // userStore.isAuth = true;\n\n              Router.push(\"/dashboard\");\n              _context.next = 20;\n              break;\n\n            case 18:\n              setWrongCredentials(true);\n              return _context.abrupt(\"return\");\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var _useState = useState(false),\n      wrongCredentials = _useState[0],\n      setWrongCredentials = _useState[1];\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(FormWrapper, null, __jsx(StyledForm, {\n      onSubmit: function onSubmit(event) {\n        return handleSubmit(event, client);\n      }\n    }, __jsx(InputWrapper, null, __jsx(Label, null, \"email\"), __jsx(Input, {\n      placeholder: \"\",\n      name: \"email\",\n      type: \"text\",\n      required: true\n    })), __jsx(InputWrapper, null, __jsx(Label, null, \"password\"), __jsx(Input, {\n      placeholder: \"\",\n      name: \"password\",\n      type: \"text\",\n      required: true\n    })), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\"\n      }\n    }, __jsx(SubmitButton, {\n      type: \"submit\"\n    }, \"Submit\")), wrongCredentials == true ? __jsx(\"div\", {\n      className: \"login-alert\"\n    }, __jsx(Alert, {\n      color: \"secondary\",\n      isOpen: wrongCredentials == true ? true : false\n    }, \"Wrong login credentials\")) : null));\n  });\n};\n\nexport default LoginForm;\nvar StyledForm = styled.form.withConfig({\n  displayName: \"LoginForm__StyledForm\",\n  componentId: \"zc9mcq-0\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;\", \";\"], function (props) {\n  return props.loading && \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\";\n});\nvar SubmitButton = styled(Button).withConfig({\n  displayName: \"LoginForm__SubmitButton\",\n  componentId: \"zc9mcq-1\"\n})([\"align-self:flex-end;margin-right:0px;margin-left:auto;\"]);\nvar InputWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__InputWrapper\",\n  componentId: \"zc9mcq-2\"\n})([\"position:relative;margin-bottom:24px;width:100%;\"]);","map":null,"metadata":{},"sourceType":"module"}