{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        mutation login($email: String!, $password: String!) {\\n          login(email: $email, password: $password)\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // import { observer } from \"mobx-react-lite\";\n// import { UserStoreContext } from \"../stores/UserStore.ts\";\n\nimport styled from \"styled-components\";\nimport FormWrapper from \"./FormWrapper\";\nimport Input from \"../form/Input\";\nimport Label from \"./Label\";\nimport Button from \"../shared/Button\";\n\nvar Cookie = require(\"js-cookie\");\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  // const userStore = useContext(UserStoreContext);\n  function handleSubmit(_x, _x2) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, client) {\n      var form, formData, email, password, res, r, isTrue;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              form = event.target;\n              formData = new window.FormData(form);\n              email = formData.get(\"email\");\n              password = formData.get(\"password\");\n              form.reset();\n              res = client.mutate({\n                mutation: gql(_templateObject()),\n                variables: {\n                  email: email,\n                  password: password\n                }\n              });\n              console.log(\"LOGGING IN\");\n              _context.next = 10;\n              return res;\n\n            case 10:\n              r = _context.sent;\n              console.log(res);\n              r = r.data.login; //check if login credentials are correct\n\n              isTrue = r == \"true\";\n\n              if (!(isTrue == true)) {\n                _context.next = 19;\n                break;\n              }\n\n              Cookie.set(\"isAuth\", \"true\"); // userStore.isAuth = true;\n\n              Router.push(\"/dashboard\");\n              _context.next = 21;\n              break;\n\n            case 19:\n              setWrongCredentials(true);\n              return _context.abrupt(\"return\");\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var _useState = useState(false),\n      wrongCredentials = _useState[0],\n      setWrongCredentials = _useState[1];\n\n  return __jsx(ApolloConsumer, null, function (client) {\n    return __jsx(FormWrapper, null, __jsx(StyledForm, {\n      onSubmit: function onSubmit(event) {\n        return handleSubmit(event, client);\n      }\n    }, __jsx(InputWrapper, null, __jsx(Label, null, \"email\"), __jsx(Input, {\n      placeholder: \"\",\n      name: \"email\",\n      type: \"text\",\n      required: true\n    })), __jsx(InputWrapper, null, __jsx(Label, null, \"password\"), __jsx(Input, {\n      placeholder: \"\",\n      name: \"password\",\n      type: \"text\",\n      required: true\n    })), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\"\n      }\n    }, __jsx(SubmitButton, {\n      type: \"submit\"\n    }, \"Submit\")), wrongCredentials == true ? __jsx(\"div\", {\n      className: \"login-alert\"\n    }, __jsx(Alert, {\n      color: \"secondary\",\n      isOpen: wrongCredentials == true ? true : false\n    }, \"Wrong login credentials\")) : null));\n  });\n};\n\n_s(LoginForm, \"MlmC62P0gihH4aJXgLEpODJM3mA=\");\n\n_c = LoginForm;\nexport default LoginForm;\nvar StyledForm = styled.form.withConfig({\n  displayName: \"LoginForm__StyledForm\",\n  componentId: \"zc9mcq-0\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;\", \";\"], function (props) {\n  return props.loading && \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\";\n});\n_c2 = StyledForm;\nvar SubmitButton = styled(Button).withConfig({\n  displayName: \"LoginForm__SubmitButton\",\n  componentId: \"zc9mcq-1\"\n})([\"align-self:flex-end;margin-right:0px;margin-left:auto;\"]);\n_c3 = SubmitButton;\nvar InputWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__InputWrapper\",\n  componentId: \"zc9mcq-2\"\n})([\"position:relative;margin-bottom:24px;width:100%;\"]);\n_c4 = InputWrapper;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"StyledForm\");\n$RefreshReg$(_c3, \"SubmitButton\");\n$RefreshReg$(_c4, \"InputWrapper\");","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/form/LoginForm.js"],"names":["React","useContext","useState","ApolloConsumer","gql","Router","Alert","styled","FormWrapper","Input","Label","Button","Cookie","require","LoginForm","handleSubmit","event","client","preventDefault","form","target","formData","window","FormData","email","get","password","reset","res","mutate","mutation","variables","console","log","r","data","login","isTrue","set","push","setWrongCredentials","wrongCredentials","display","width","StyledForm","props","loading","SubmitButton","InputWrapper","div"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport { Alert } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { observer } from \"mobx-react-lite\";\n// import { UserStoreContext } from \"../stores/UserStore.ts\";\nimport styled from \"styled-components\";\nimport FormWrapper from \"./FormWrapper\";\nimport Input from \"../form/Input\";\nimport Label from \"./Label\";\nimport Button from \"../shared/Button\";\nconst Cookie = require(\"js-cookie\");\n\nconst LoginForm = () => {\n  // const userStore = useContext(UserStoreContext);\n\n  async function handleSubmit(event, client) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    form.reset();\n\n    let res = client.mutate({\n      mutation: gql`\n        mutation login($email: String!, $password: String!) {\n          login(email: $email, password: $password)\n        }\n      `,\n      variables: { email, password },\n    });\n    console.log(\"LOGGING IN\");\n\n    let r = await res;\n    console.log(res);\n    r = r.data.login;\n    //check if login credentials are correct\n    let isTrue = r == \"true\";\n    if (isTrue == true) {\n      Cookie.set(\"isAuth\", \"true\");\n\n      // userStore.isAuth = true;\n      Router.push(\"/dashboard\");\n    } else {\n      setWrongCredentials(true);\n      return;\n    }\n  }\n\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n\n  return (\n    <ApolloConsumer>\n      {(client) => (\n        <FormWrapper>\n          <StyledForm onSubmit={(event) => handleSubmit(event, client)}>\n            <InputWrapper>\n              <Label>email</Label>\n              <Input placeholder=\"\" name=\"email\" type=\"text\" required />\n            </InputWrapper>\n            <InputWrapper>\n              <Label>password</Label>\n              <Input placeholder=\"\" name=\"password\" type=\"text\" required />\n            </InputWrapper>\n            <div style={{ display: \"flex\", width: \"100%\" }}>\n              <SubmitButton type=\"submit\">Submit</SubmitButton>\n            </div>\n            {wrongCredentials == true ? (\n              <div className=\"login-alert\">\n                <Alert\n                  color=\"secondary\"\n                  isOpen={wrongCredentials == true ? true : false}\n                >\n                  Wrong login credentials\n                </Alert>\n              </div>\n            ) : null}\n          </StyledForm>\n        </FormWrapper>\n      )}\n    </ApolloConsumer>\n  );\n};\n\nexport default LoginForm;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  ${(props) =>\n    props.loading &&\n    \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\"};\n`;\n\nconst SubmitButton = styled(Button)`\n  align-self: flex-end;\n  margin-right: 0px;\n  margin-left: auto;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 24px;\n  width: 100%;\n`;\n"]},"metadata":{},"sourceType":"module"}