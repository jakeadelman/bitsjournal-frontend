{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var getNewDat = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(oldDat, hashtags) {\n    var newTrades, oldTrades, i, tradeHashtags, oldTrade, j, m;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newTrades = [];\n            oldTrades = oldDat.fetchTradeHistory;\n            i = 0;\n\n          case 3:\n            if (!(i < oldTrades.length)) {\n              _context.next = 14;\n              break;\n            }\n\n            tradeHashtags = oldTrades[i].hashtags.split(\",\");\n            oldTrade = oldTrades[i];\n            console.log(tradeHashtags);\n\n            if (tradeHashtags[0] != \"undefined\") {\n              for (j = 0; j < tradeHashtags.length; j++) {\n                for (m = 0; m < hashtags.length; m++) {\n                  if (hashtags[m] == tradeHashtags[j]) {\n                    if (newTrades[0] == undefined) {\n                      newTrades.push(oldTrade);\n                    } else {\n                      newTrades.push(oldTrade);\n                    }\n                  }\n                }\n              }\n            }\n\n            if (!(i == oldTrades.length - 1)) {\n              _context.next = 11;\n              break;\n            }\n\n            console.log(newTrades, \"FILTERED TRADES\");\n            return _context.abrupt(\"return\", newTrades);\n\n          case 11:\n            i++;\n            _context.next = 3;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getNewDat(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Dashboard/shared/helpers.js"],"names":["getNewDat","oldDat","hashtags","newTrades","oldTrades","fetchTradeHistory","i","length","tradeHashtags","split","oldTrade","console","log","j","m","undefined","push"],"mappings":";;AAAA,OAAO,IAAMA,SAAS;AAAA,sEAAG,iBAAOC,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,SADmB,GACP,EADO;AAEnBC,YAAAA,SAFmB,GAEPH,MAAM,CAACI,iBAFA;AAGdC,YAAAA,CAHc,GAGV,CAHU;;AAAA;AAAA,kBAGPA,CAAC,GAAGF,SAAS,CAACG,MAHP;AAAA;AAAA;AAAA;;AAIjBC,YAAAA,aAJiB,GAIDJ,SAAS,CAACE,CAAD,CAAT,CAAaJ,QAAb,CAAsBO,KAAtB,CAA4B,GAA5B,CAJC;AAKjBC,YAAAA,QALiB,GAKNN,SAAS,CAACE,CAAD,CALH;AAMrBK,YAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;;AACA,gBAAIA,aAAa,CAAC,CAAD,CAAb,IAAoB,WAAxB,EAAqC;AACnC,mBAASK,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACD,MAAlC,EAA0CM,CAAC,EAA3C,EAA+C;AAC7C,qBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACK,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACxC,sBAAIZ,QAAQ,CAACY,CAAD,CAAR,IAAeN,aAAa,CAACK,CAAD,CAAhC,EAAqC;AACnC,wBAAIV,SAAS,CAAC,CAAD,CAAT,IAAgBY,SAApB,EAA+B;AAC7BZ,sBAAAA,SAAS,CAACa,IAAV,CAAeN,QAAf;AACD,qBAFD,MAEO;AACLP,sBAAAA,SAAS,CAACa,IAAV,CAAeN,QAAf;AACD;AACF;AACF;AACF;AACF;;AAnBoB,kBAoBjBJ,CAAC,IAAIF,SAAS,CAACG,MAAV,GAAmB,CApBP;AAAA;AAAA;AAAA;;AAqBnBI,YAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ,EAAuB,iBAAvB;AArBmB,6CAsBZA,SAtBY;;AAAA;AAGeG,YAAAA,CAAC,EAHhB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATN,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["export const getNewDat = async (oldDat, hashtags) => {\n  let newTrades = [];\n  let oldTrades = oldDat.fetchTradeHistory;\n  for (let i = 0; i < oldTrades.length; i++) {\n    let tradeHashtags = oldTrades[i].hashtags.split(\",\");\n    let oldTrade = oldTrades[i];\n    console.log(tradeHashtags);\n    if (tradeHashtags[0] != \"undefined\") {\n      for (let j = 0; j < tradeHashtags.length; j++) {\n        for (let m = 0; m < hashtags.length; m++) {\n          if (hashtags[m] == tradeHashtags[j]) {\n            if (newTrades[0] == undefined) {\n              newTrades.push(oldTrade);\n            } else {\n              newTrades.push(oldTrade);\n            }\n          }\n        }\n      }\n    }\n    if (i == oldTrades.length - 1) {\n      console.log(newTrades, \"FILTERED TRADES\");\n      return newTrades;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}