{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Input from \"./Input\";\nimport Label from \"./Label\";\nimport Button from \"../shared/Button\";\nimport FormWrapper from \"./FormWrapper\";\nimport styled from \"styled-components\";\nimport { removeArgumentsFromDocument } from \"apollo-utilities\";\nimport Router from \"next/router\";\n\nconst Cookie = require(\"js-cookie\");\n\nexport default function RegisterForm() {\n  function handleSubmit(event, client) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    const firstName = formData.get(\"firstName\");\n    const lastName = formData.get(\"lastName\");\n    const email = formData.get(\"email\");\n    const password = formData.get(\"password\");\n    form.reset();\n    client.mutate({\n      mutation: gql`\n          mutation register(\n            $firstName: String!\n            $lastName: String!\n            $email: String!\n            $password: String!\n          ) {\n            register(\n              data: {\n                firstName: $firstName\n                lastName: $lastName\n                email: $email\n                password: $password\n              }\n            ) {\n              id\n            }\n          }\n        `,\n      variables: {\n        firstName,\n        lastName,\n        email,\n        password\n      }\n    }).then(response => {\n      if (response.data) {\n        Cookie.set(\"uid\", response.data.register.id);\n        Router.push(\"/signup\");\n      } else {\n        console.log(\"there was an error\");\n      }\n    });\n  }\n\n  return __jsx(ApolloConsumer, null, client => __jsx(FormWrapper, null, __jsx(StyledForm, {\n    onSubmit: event => handleSubmit(event, client)\n  }, __jsx(InputWrapper, null, __jsx(Label, null, \"firstname\"), __jsx(Input, {\n    placeholder: \"\",\n    name: \"firstName\",\n    type: \"text\",\n    required: true\n  })), __jsx(InputWrapper, null, __jsx(Label, null, \"lastname\"), __jsx(Input, {\n    placeholder: \"\",\n    name: \"lastName\",\n    type: \"text\",\n    required: true\n  })), __jsx(InputWrapper, null, __jsx(Label, null, \"email\"), __jsx(Input, {\n    placeholder: \"\",\n    name: \"email\",\n    type: \"text\",\n    required: true\n  })), __jsx(InputWrapper, null, __jsx(Label, null, \"password\"), __jsx(Input, {\n    placeholder: \"\",\n    name: \"password\",\n    type: \"text\",\n    required: true\n  })), __jsx(SubmitButton, {\n    type: \"submit\"\n  }, \"Submit\"))));\n} // const MyFormWrapper = styled.div`\n//   margin: auto;\n//   margin-top: 20vh;\n// `;\n\nconst StyledForm = styled.form.withConfig({\n  displayName: \"RegisterForm__StyledForm\",\n  componentId: \"uh5rr5-0\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;\", \";\"], props => props.loading && \"filter: grayscale(0.5) blur(5px) opacity(0.6); pointer-events: none\");\nconst SubmitButton = styled(Button).withConfig({\n  displayName: \"RegisterForm__SubmitButton\",\n  componentId: \"uh5rr5-1\"\n})([\"align-self:flex-end;margin-right:0px;margin-left:auto;\"]);\nconst InputWrapper = styled.div.withConfig({\n  displayName: \"RegisterForm__InputWrapper\",\n  componentId: \"uh5rr5-2\"\n})([\"position:relative;margin-bottom:24px;width:100%;\"]);","map":null,"metadata":{},"sourceType":"module"}