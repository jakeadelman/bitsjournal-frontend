{"ast":null,"code":"var _dec, _class2;\n\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { ContainDiv, NextToDiv, NextToDivHeader, RowContainer, ContainDivHeader } from \"../Tades/Trades\";\nimport ReChart from \"../Tades/Trades\";\nimport Sidebar, { SymbolChooser, Pnl } from \"../../Menu/Menu\";\nimport { Pnl768, SymbolChooser768 } from \"../../Menu/768px/Menu\";\nimport { getNewDat } from \"../shared/helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport Notes from \"../Notes/NotesTest\";\nimport Tabs from \"../Tabs\";\nimport { Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, NavLink } from \"reactstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport { when, reaction } from \"mobx\";\nimport { wideFont } from \"../../shared/helpers\";\n\nlet _class = (_dec = inject(\"store\"), _dec(_class2 = observer(_class2 = class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      globalHash: [],\n      globalHashActive: [\"all\"],\n      data: null,\n      filteredData: null,\n      isSingle: false,\n      isSingleNotes: false\n    };\n    this.getGlobalHashtags = this.getGlobalHashtags.bind(this);\n    this.hashtagClicked = this.hashtagClicked.bind(this);\n    this.hashtagClickedBack = this.hashtagClickedBack.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      data: this.props.data\n    });\n    this.getGlobalHashtags(this.props.data);\n  }\n\n  componentDidMount() {\n    this.singleTradeReaction = reaction(() => this.props.store.hasSingleTrade, (notifications, reaction) => {\n      console.log(\"HAS SINGLE\", this.props.store.hasSingleTrade);\n\n      if (this.props.store.hasSingleTrade == false) {\n        this.setState({\n          isSingle: false\n        });\n        console.log(\"setting back\");\n      } else {\n        this.setState({\n          isSingle: true,\n          singleTrade: this.props.store.singleTrade[0]\n        });\n        console.log(this.state, \"STATEE\");\n        console.log(\"setting back\");\n      }\n    });\n    this.singleNotesReaction = reaction(() => this.props.store.isSingleNotes, (notifications, reaction) => {\n      if (this.props.store.isSingleNotes == false) {\n        this.setState({\n          isSingleNotes: false\n        });\n      } else {\n        this.setState({\n          isSingleNotes: true\n        });\n      }\n    });\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth\n    });\n  }\n\n  async getGlobalHashtags(data) {\n    for (let i = 0; i < data.fetchTradeHistory.length; i++) {\n      let thisTradeHash = data.fetchTradeHistory[i].hashtags.split(\",\");\n\n      if (thisTradeHash != \"undefined\") {\n        for (let j = 0; j < thisTradeHash.length; j++) {\n          if (thisTradeHash[j] != \"undefined\") {\n            let newGlobalHash = this.state.globalHash;\n            newGlobalHash.push(thisTradeHash[j]);\n            this.setState({\n              globalHash: newGlobalHash\n            });\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClickedBack(value) {\n    if (value == \"all\") {\n      console.log(\"DO NOTHING\");\n    } else {\n      let newHashActive = [];\n      let newHash = this.state.globalHash;\n\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        if (value !== this.state.globalHashActive[i]) {\n          newHashActive.push(this.state.globalHashActive[i]);\n        } else {\n          newHash.push(this.state.globalHashActive[i]);\n        }\n\n        if (i == this.state.globalHashActive.length - 1) {\n          if (newHashActive[0] == undefined) {\n            let newHash2 = [];\n\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n\n              if (j == newHash.length - 1) {\n                this.setState({\n                  globalHash: newHash2,\n                  globalHashActive: [\"all\"],\n                  filteredData: null\n                });\n              }\n            }\n          } else {\n            let newHash2 = [];\n\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n\n              if (j == newHash.length - 1) {\n                getNewDat(this.state.data, newHashActive).then(res => {\n                  this.setState({\n                    globalHash: newHash2,\n                    globalHashActive: newHashActive,\n                    filteredData: res\n                  });\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClicked(value) {\n    if (value == \"all\") {\n      let newGlobalHash = this.state.globalHash;\n      let newGlobalHash2 = [];\n\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        newGlobalHash.push(this.state.globalHashActive[i]);\n\n        if (i == this.state.globalHashActive.length - 1) {\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (newGlobalHash[j] != \"all\") {\n              newGlobalHash2.push(newGlobalHash[j]);\n            }\n\n            if (j == newGlobalHash.length - 1) {\n              this.setState({\n                globalHash: newGlobalHash2,\n                globalHashActive: [\"all\"],\n                filteredData: null\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n\n    if (this.state.globalHashActive[0] == undefined) {\n      let newArray = [];\n      newArray.push(value);\n      this.setState({\n        globalHashActive: newArray\n      });\n      const index = this.state.globalHash.indexOf(value);\n\n      if (index > -1) {\n        let newGlobalHash = this.state.globalHash;\n        newGlobalHash.splice(index, 1);\n        this.setState({\n          globalHash: newGlobalHash\n        });\n      }\n\n      return;\n    }\n\n    for (let i = 0; i < this.state.globalHashActive.length; i++) {\n      if (this.state.globalHashActive[i] == \"all\") {\n        this.state.globalHashActive = [];\n        const index = this.state.globalHash.indexOf(value);\n\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          let torf = false;\n\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then(newDat => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat\n            });\n            return;\n          });\n        }\n      }\n\n      if (value == this.state.globalHashActive[i]) {\n        return;\n      }\n\n      if (i == this.state.globalHashActive.length - 1) {\n        const index = this.state.globalHash.indexOf(value);\n\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1); // newGlobalHash.push(\"all\");\n\n          let torf = false;\n\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then(newDat => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat\n            });\n            return;\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data != null) {\n      if (this.state.isSingle == false) {\n        console.log(\"IS SINGLE IS FALSE\");\n        return __jsx(Wrapper, null, __jsx(ChartWrapper, null, __jsx(TopBarParent, null, __jsx(TopBarTop, null, __jsx(TopBarTopLeft, null, __jsx(Pnl768, null)), __jsx(TopBarTopRight, null, __jsx(SymbolChooser768, null))), __jsx(TopBarBottom, null, this.state.globalHashActive.map(hash => {\n          return __jsx(TopHashtagIndividualActive, {\n            onClick: () => this.hashtagClickedBack(hash)\n          }, \"#\", hash);\n        }), this.state.globalHash.map(hash => {\n          return __jsx(TopHashtagIndividual, {\n            onClick: () => this.hashtagClicked(hash)\n          }, \"#\", hash);\n        }))), __jsx(WholeGrid, null, this.state.isSingleNotes == false ? __jsx(ContainDivHeader, null, __jsx(NextToDivHeader, null, \"Start\"), __jsx(NextToDivHeader, null, \"End\"), __jsx(NextToDivHeader, null, \"L/S\"), __jsx(NextToDivHeader, null, \"Entry\"), __jsx(NextToDivHeader, null, \"Exit\"), __jsx(NextToDivHeader, null, \"Qty\"), __jsx(NextToDivHeader, null, \"RPNL\")) : null, __jsx(ReChart, {\n          data: this.state.data,\n          filteredData: this.state.filteredData,\n          initData: this.props.data\n        }))));\n      } else {\n        console.log(\"IS SINGLE IS TRUE\");\n        return __jsx(Wrapper, null, __jsx(ChartWrapper, null, __jsx(TopBarParent, null, __jsx(TopBarChildBigLeft, null, __jsx(Tabs, null)), __jsx(TopBarChildSmall, null, __jsx(TopHashtagIndividualActivePnl, null, __jsx(Pnl, null))), __jsx(TopBarChildBigRight, null, __jsx(RightTabs, null, __jsx(Notes, {\n          firstTrade: this.state.singleTrade\n        })))), __jsx(WholeGrid, null, this.state.isSingleNotes == false ? __jsx(ContainDivHeader, null, __jsx(NextToDivHeader, null, \"Start\"), __jsx(NextToDivHeader, null, \"End\"), __jsx(NextToDivHeader, null, \"L/S\"), __jsx(NextToDivHeader, null, \"Entry\"), __jsx(NextToDivHeader, null, \"Exit\"), __jsx(NextToDivHeader, null, \"Qty\"), __jsx(NextToDivHeader, null, \"RPNL\")) : null, __jsx(ReChart, {\n          data: this.state.data,\n          filteredData: this.state.filteredData,\n          initData: this.props.data\n        }))));\n      }\n    }\n  }\n\n}) || _class2) || _class2);\n\nexport { _class as default };\nconst SingleTabInner = styled.div.withConfig({\n  displayName: \"DashboardTest__SingleTabInner\",\n  componentId: \"sc-1dz292n-0\"\n})([\"margin:auto;\"]);\nconst SingleTab = styled.div.withConfig({\n  displayName: \"DashboardTest__SingleTab\",\n  componentId: \"sc-1dz292n-1\"\n})([\"color:\", \";background-color:\", \";margin:auto 10px;border-radius:2px;padding:5px;:hover{cursor:pointer;}\"], props => props.isActive ? \"#fff\" : \"#000\", props => props.isActive ? \"#000\" : \"#fff\");\nconst WrapTabs = styled.div.withConfig({\n  displayName: \"DashboardTest__WrapTabs\",\n  componentId: \"sc-1dz292n-2\"\n})([\"display:flex;flex-direction:row;font-size:15px;\"]);\nconst WholeGrid = styled.div.withConfig({\n  displayName: \"DashboardTest__WholeGrid\",\n  componentId: \"sc-1dz292n-3\"\n})([\"\"]); // border: 1px solid #f2f2f2;\n\nconst TopBarParent = styled.div.withConfig({\n  displayName: \"DashboardTest__TopBarParent\",\n  componentId: \"sc-1dz292n-4\"\n})([\"display:flex;flex-direction:column;flex-wrap:wrap;margin-bottom:14px;\"]);\nconst TopBarTop = styled.div.withConfig({\n  displayName: \"DashboardTest__TopBarTop\",\n  componentId: \"sc-1dz292n-5\"\n})([\"width:100%;display:flex;flex-direction:row;overflow:auto;margin-bottom:5px;\"]);\nconst TopBarBottom = styled.div.withConfig({\n  displayName: \"DashboardTest__TopBarBottom\",\n  componentId: \"sc-1dz292n-6\"\n})([\"width:100%;display:flex;flex-direction:row;overflow:auto;\"]); // flex: 1 1 45%; /*grow | shrink | basis */\n\nconst TopBarTopRight = styled.div.withConfig({\n  displayName: \"DashboardTest__TopBarTopRight\",\n  componentId: \"sc-1dz292n-7\"\n})([\"width:50%;display:flex;flex-direction:row;overflow:auto;\"]);\nconst TopBarTopLeft = styled.div.withConfig({\n  displayName: \"DashboardTest__TopBarTopLeft\",\n  componentId: \"sc-1dz292n-8\"\n})([\"width:50%;display:flex;flex-direction:row;overflow:auto;\", \"\"], wideFont);\nconst TopBarChildSmall = styled.div.withConfig({\n  displayName: \"DashboardTest__TopBarChildSmall\",\n  componentId: \"sc-1dz292n-9\"\n})([\"display:flex;flex-direction:row;width:10%;\"]);\nconst TopHashtagIndividual = styled.div.withConfig({\n  displayName: \"DashboardTest__TopHashtagIndividual\",\n  componentId: \"sc-1dz292n-10\"\n})([\"background:#f8f8ff;color:#000;padding:8px;margin:0 10px;border-radius:2px;\", \":hover{cursor:pointer;}margin-left:0;white-space:nowrap;\"], wideFont);\nconst TopHashtagIndividualActive = styled.div.withConfig({\n  displayName: \"DashboardTest__TopHashtagIndividualActive\",\n  componentId: \"sc-1dz292n-11\"\n})([\"background:#212528;color:#fff;padding:8px;margin:0 10px;border-radius:2px;\", \":hover{cursor:pointer;}margin-left:0;white-space:nowrap;\"], wideFont);\nconst TopHashtagIndividualActiveRight = styled.div.withConfig({\n  displayName: \"DashboardTest__TopHashtagIndividualActiveRight\",\n  componentId: \"sc-1dz292n-12\"\n})([\"background:#212528;color:#fff;padding:8px;margin:0 10px;border-radius:2px;\", \" margin:0 auto;:hover{cursor:pointer;}margin-right:0;\"], wideFont);\nconst RightTabs = styled.div.withConfig({\n  displayName: \"DashboardTest__RightTabs\",\n  componentId: \"sc-1dz292n-13\"\n})([\"color:#fff;margin:0 10px;border-radius:2px;\", \" margin:0 auto;:hover{cursor:pointer;}margin-right:0;\"], wideFont);\nconst TopHashtagIndividualActivePnl = styled.div.withConfig({\n  displayName: \"DashboardTest__TopHashtagIndividualActivePnl\",\n  componentId: \"sc-1dz292n-14\"\n})([\"color:#fff;padding:0px;margin:0 10px;border-radius:2px;\", \":hover{cursor:pointer;}margin:auto;\"], wideFont);\nconst ChartWrapper = styled.div.withConfig({\n  displayName: \"DashboardTest__ChartWrapper\",\n  componentId: \"sc-1dz292n-15\"\n})([\"background:white;padding:5px;width:100%;padding:10px;@media (max-width:768px){}\"]);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"DashboardTest__Wrapper\",\n  componentId: \"sc-1dz292n-16\"\n})([\"display:flex;margin-top:5px;\"]);","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Dashboard/768px/DashboardTest.js"],"names":["styled","ContainDiv","NextToDiv","NextToDivHeader","RowContainer","ContainDivHeader","ReChart","Sidebar","SymbolChooser","Pnl","Pnl768","SymbolChooser768","getNewDat","FontAwesomeIcon","faCaretLeft","React","useState","Notes","Tabs","Nav","NavItem","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","NavLink","inject","observer","when","reaction","wideFont","Component","constructor","props","state","globalHash","globalHashActive","data","filteredData","isSingle","isSingleNotes","getGlobalHashtags","bind","hashtagClicked","hashtagClickedBack","updateWindowDimensions","componentWillMount","setState","componentDidMount","singleTradeReaction","store","hasSingleTrade","notifications","console","log","singleTrade","singleNotesReaction","window","addEventListener","componentWillUnmount","removeEventListener","width","innerWidth","i","fetchTradeHistory","length","thisTradeHash","hashtags","split","j","newGlobalHash","push","value","newHashActive","newHash","undefined","newHash2","then","res","newGlobalHash2","newArray","index","indexOf","splice","torf","newGlobalHashActive","newDat","render","map","hash","SingleTabInner","div","SingleTab","isActive","WrapTabs","WholeGrid","TopBarParent","TopBarTop","TopBarBottom","TopBarTopRight","TopBarTopLeft","TopBarChildSmall","TopHashtagIndividual","TopHashtagIndividualActive","TopHashtagIndividualActiveRight","RightTabs","TopHashtagIndividualActivePnl","ChartWrapper","Wrapper"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport {\n  ContainDiv,\n  NextToDiv,\n  NextToDivHeader,\n  RowContainer,\n  ContainDivHeader,\n} from \"../Tades/Trades\";\nimport ReChart from \"../Tades/Trades\";\nimport Sidebar, { SymbolChooser, Pnl } from \"../../Menu/Menu\";\nimport { Pnl768, SymbolChooser768 } from \"../../Menu/768px/Menu\";\nimport { getNewDat } from \"../shared/helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport Notes from \"../Notes/NotesTest\";\nimport Tabs from \"../Tabs\";\nimport {\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n  NavLink,\n} from \"reactstrap\";\n\nimport { inject, observer } from \"mobx-react\";\nimport { when, reaction } from \"mobx\";\nimport { wideFont } from \"../../shared/helpers\";\n\n@inject(\"store\")\n@observer\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      globalHash: [],\n      globalHashActive: [\"all\"],\n      data: null,\n      filteredData: null,\n      isSingle: false,\n      isSingleNotes: false,\n    };\n    this.getGlobalHashtags = this.getGlobalHashtags.bind(this);\n    this.hashtagClicked = this.hashtagClicked.bind(this);\n    this.hashtagClickedBack = this.hashtagClickedBack.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ data: this.props.data });\n    this.getGlobalHashtags(this.props.data);\n  }\n  componentDidMount() {\n    this.singleTradeReaction = reaction(\n      () => this.props.store.hasSingleTrade,\n      (notifications, reaction) => {\n        console.log(\"HAS SINGLE\", this.props.store.hasSingleTrade);\n        if (this.props.store.hasSingleTrade == false) {\n          this.setState({ isSingle: false });\n          console.log(\"setting back\");\n        } else {\n          this.setState({\n            isSingle: true,\n            singleTrade: this.props.store.singleTrade[0],\n          });\n          console.log(this.state, \"STATEE\");\n          console.log(\"setting back\");\n        }\n      }\n    );\n    this.singleNotesReaction = reaction(\n      () => this.props.store.isSingleNotes,\n      (notifications, reaction) => {\n        if (this.props.store.isSingleNotes == false) {\n          this.setState({ isSingleNotes: false });\n        } else {\n          this.setState({\n            isSingleNotes: true,\n          });\n        }\n      }\n    );\n\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n    });\n  }\n\n  async getGlobalHashtags(data) {\n    for (let i = 0; i < data.fetchTradeHistory.length; i++) {\n      let thisTradeHash = data.fetchTradeHistory[i].hashtags.split(\",\");\n      if (thisTradeHash != \"undefined\") {\n        for (let j = 0; j < thisTradeHash.length; j++) {\n          if (thisTradeHash[j] != \"undefined\") {\n            let newGlobalHash = this.state.globalHash;\n            newGlobalHash.push(thisTradeHash[j]);\n            this.setState({ globalHash: newGlobalHash });\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClickedBack(value) {\n    if (value == \"all\") {\n      console.log(\"DO NOTHING\");\n    } else {\n      let newHashActive = [];\n      let newHash = this.state.globalHash;\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        if (value !== this.state.globalHashActive[i]) {\n          newHashActive.push(this.state.globalHashActive[i]);\n        } else {\n          newHash.push(this.state.globalHashActive[i]);\n        }\n        if (i == this.state.globalHashActive.length - 1) {\n          if (newHashActive[0] == undefined) {\n            let newHash2 = [];\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n              if (j == newHash.length - 1) {\n                this.setState({\n                  globalHash: newHash2,\n                  globalHashActive: [\"all\"],\n                  filteredData: null,\n                });\n              }\n            }\n          } else {\n            let newHash2 = [];\n            for (let j = 0; j < newHash.length; j++) {\n              if (newHash[j] != \"all\") {\n                newHash2.push(newHash[j]);\n              }\n              if (j == newHash.length - 1) {\n                getNewDat(this.state.data, newHashActive).then((res) => {\n                  this.setState({\n                    globalHash: newHash2,\n                    globalHashActive: newHashActive,\n                    filteredData: res,\n                  });\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  async hashtagClicked(value) {\n    if (value == \"all\") {\n      let newGlobalHash = this.state.globalHash;\n      let newGlobalHash2 = [];\n      for (let i = 0; i < this.state.globalHashActive.length; i++) {\n        newGlobalHash.push(this.state.globalHashActive[i]);\n        if (i == this.state.globalHashActive.length - 1) {\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (newGlobalHash[j] != \"all\") {\n              newGlobalHash2.push(newGlobalHash[j]);\n            }\n            if (j == newGlobalHash.length - 1) {\n              this.setState({\n                globalHash: newGlobalHash2,\n                globalHashActive: [\"all\"],\n                filteredData: null,\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n    if (this.state.globalHashActive[0] == undefined) {\n      let newArray = [];\n      newArray.push(value);\n      this.setState({ globalHashActive: newArray });\n      const index = this.state.globalHash.indexOf(value);\n      if (index > -1) {\n        let newGlobalHash = this.state.globalHash;\n        newGlobalHash.splice(index, 1);\n        this.setState({ globalHash: newGlobalHash });\n      }\n      return;\n    }\n    for (let i = 0; i < this.state.globalHashActive.length; i++) {\n      if (this.state.globalHashActive[i] == \"all\") {\n        this.state.globalHashActive = [];\n        const index = this.state.globalHash.indexOf(value);\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          let torf = false;\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then((newDat) => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat,\n            });\n            return;\n          });\n        }\n      }\n      if (value == this.state.globalHashActive[i]) {\n        return;\n      }\n      if (i == this.state.globalHashActive.length - 1) {\n        const index = this.state.globalHash.indexOf(value);\n        if (index > -1) {\n          let newGlobalHash = this.state.globalHash;\n          newGlobalHash.splice(index, 1);\n          // newGlobalHash.push(\"all\");\n          let torf = false;\n          for (let j = 0; j < newGlobalHash.length; j++) {\n            if (\"all\" == newGlobalHash[j]) {\n              torf = true;\n            }\n            if (j == newGlobalHash.length - 1 && torf == false) {\n              newGlobalHash.push(\"all\");\n            }\n          }\n          let newGlobalHashActive = this.state.globalHashActive;\n          newGlobalHashActive.push(value);\n          getNewDat(this.state.data, newGlobalHashActive).then((newDat) => {\n            this.setState({\n              globalHashActive: newGlobalHashActive,\n              globalHash: newGlobalHash,\n              filteredData: newDat,\n            });\n            return;\n          });\n        }\n      }\n    }\n  }\n  render() {\n    if (this.state.data != null) {\n      if (this.state.isSingle == false) {\n        console.log(\"IS SINGLE IS FALSE\");\n        return (\n          <Wrapper>\n            <ChartWrapper>\n              <TopBarParent>\n                <TopBarTop>\n                  <TopBarTopLeft>\n                    <Pnl768 />\n                  </TopBarTopLeft>\n                  <TopBarTopRight>\n                    <SymbolChooser768 />\n                  </TopBarTopRight>\n                </TopBarTop>\n                <TopBarBottom>\n                  {this.state.globalHashActive.map((hash) => {\n                    return (\n                      <TopHashtagIndividualActive\n                        onClick={() => this.hashtagClickedBack(hash)}\n                      >\n                        #{hash}\n                      </TopHashtagIndividualActive>\n                    );\n                  })}\n                  {this.state.globalHash.map((hash) => {\n                    return (\n                      <TopHashtagIndividual\n                        onClick={() => this.hashtagClicked(hash)}\n                      >\n                        #{hash}\n                      </TopHashtagIndividual>\n                    );\n                  })}\n                </TopBarBottom>\n              </TopBarParent>\n              <WholeGrid>\n                {this.state.isSingleNotes == false ? (\n                  <ContainDivHeader>\n                    <NextToDivHeader>Start</NextToDivHeader>\n                    <NextToDivHeader>End</NextToDivHeader>\n                    <NextToDivHeader>L/S</NextToDivHeader>\n                    <NextToDivHeader>Entry</NextToDivHeader>\n                    <NextToDivHeader>Exit</NextToDivHeader>\n                    <NextToDivHeader>Qty</NextToDivHeader>\n                    <NextToDivHeader>RPNL</NextToDivHeader>\n                  </ContainDivHeader>\n                ) : null}\n                <ReChart\n                  data={this.state.data}\n                  filteredData={this.state.filteredData}\n                  initData={this.props.data}\n                />\n              </WholeGrid>\n            </ChartWrapper>\n          </Wrapper>\n        );\n      } else {\n        console.log(\"IS SINGLE IS TRUE\");\n        return (\n          <Wrapper>\n            <ChartWrapper>\n              <TopBarParent>\n                <TopBarChildBigLeft>\n                  <Tabs />\n                </TopBarChildBigLeft>\n                <TopBarChildSmall>\n                  <TopHashtagIndividualActivePnl>\n                    <Pnl />\n                  </TopHashtagIndividualActivePnl>\n                </TopBarChildSmall>\n                <TopBarChildBigRight>\n                  <RightTabs>\n                    <Notes firstTrade={this.state.singleTrade} />\n                  </RightTabs>\n                </TopBarChildBigRight>\n              </TopBarParent>\n              <WholeGrid>\n                {this.state.isSingleNotes == false ? (\n                  <ContainDivHeader>\n                    <NextToDivHeader>Start</NextToDivHeader>\n                    <NextToDivHeader>End</NextToDivHeader>\n                    <NextToDivHeader>L/S</NextToDivHeader>\n                    <NextToDivHeader>Entry</NextToDivHeader>\n                    <NextToDivHeader>Exit</NextToDivHeader>\n                    <NextToDivHeader>Qty</NextToDivHeader>\n                    <NextToDivHeader>RPNL</NextToDivHeader>\n                  </ContainDivHeader>\n                ) : null}\n                <ReChart\n                  data={this.state.data}\n                  filteredData={this.state.filteredData}\n                  initData={this.props.data}\n                />\n              </WholeGrid>\n            </ChartWrapper>\n          </Wrapper>\n        );\n      }\n    }\n  }\n}\n\nconst SingleTabInner = styled.div`\n  margin: auto;\n`;\n\nconst SingleTab = styled.div`\n  color: ${(props) => (props.isActive ? \"#fff\" : \"#000\")};\n  background-color: ${(props) => (props.isActive ? \"#000\" : \"#fff\")};\n\n  margin: auto 10px;\n  border-radius: 2px;\n  padding: 5px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst WrapTabs = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 15px;\n`;\nconst WholeGrid = styled.div``;\n// border: 1px solid #f2f2f2;\n\nconst TopBarParent = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  margin-bottom: 14px;\n`;\nconst TopBarTop = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n  margin-bottom: 5px;\n`;\nconst TopBarBottom = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n`;\n\n// flex: 1 1 45%; /*grow | shrink | basis */\nconst TopBarTopRight = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n`;\nconst TopBarTopLeft = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n  ${wideFont}\n`;\n\nconst TopBarChildSmall = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 10%;\n`;\n\nconst TopHashtagIndividual = styled.div`\n  background: #f8f8ff;\n  color: #000;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  ${wideFont}\n\n  :hover {\n    cursor: pointer;\n  }\n  margin-left: 0;\n  white-space: nowrap;\n`;\n\nconst TopHashtagIndividualActive = styled.div`\n  background: #212528;\n  color: #fff;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  ${wideFont}\n  :hover {\n    cursor: pointer;\n  }\n  margin-left: 0;\n  white-space: nowrap;\n`;\nconst TopHashtagIndividualActiveRight = styled.div`\n  background: #212528;\n  color: #fff;\n  padding: 8px;\n  margin: 0 10px;\n  border-radius: 2px;\n  ${wideFont}\n  margin:0 auto;\n  :hover {\n    cursor: pointer;\n  }\n  margin-right: 0;\n`;\nconst RightTabs = styled.div`\n  color: #fff;\n  margin: 0 10px;\n  border-radius: 2px;\n  ${wideFont}\n  margin:0 auto;\n  :hover {\n    cursor: pointer;\n  }\n  margin-right: 0;\n`;\n\nconst TopHashtagIndividualActivePnl = styled.div`\n  color: #fff;\n  padding: 0px;\n  margin: 0 10px;\n  border-radius: 2px;\n  ${wideFont}\n  :hover {\n    cursor: pointer;\n  }\n  margin: auto;\n`;\n\nconst ChartWrapper = styled.div`\n  background: white;\n  padding: 5px;\n  width: 100%;\n  padding: 10px;\n  @media (max-width: 768px) {\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin-top: 5px;\n`;\n"]},"metadata":{},"sourceType":"module"}