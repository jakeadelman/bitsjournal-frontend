{"ast":null,"code":"var _dec, _class, _temp;\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { inject, observer } from \"mobx-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepicker-additional.css\";\nimport { reaction } from \"mobx\";\nlet Example = (_dec = inject([\"store\"]), _dec(_class = observer(_class = (_temp = class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = date => {\n      this.setState({\n        date: date\n      });\n      console.log(date, \"THIS IS DATE\");\n    };\n\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.dateReaction = reaction(() => this.props.store.startDate, (notifications, reaction) => {\n      if (this.props.store.startDate !== null) {\n        if (this.props.start == true) {\n          this.setState({\n            date: new Date(this.props.store.startDate)\n          });\n        } else {\n          this.setState({\n            date: new Date(this.props.store.endDate)\n          });\n        }\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"just updated\");\n\n    if (this.props.set == true) {\n      console.log(\"not equal\");\n\n      if (this.props.start == true) {\n        console.log(\"was true\");\n        let firstDate = this.state.date.toISOString();\n        let multiDate = firstDate.split(\"T\");\n        this.props.store.startDate = multiDate[0] + \"T00:00:00.000Z\";\n        this.props.store.date = \"Custom\";\n      }\n\n      if (this.props.start == false) {\n        console.log(\"was false\");\n        let firstDate = this.state.date.toISOString();\n        let multiDate = firstDate.split(\"T\");\n        this.props.store.endDate = multiDate[0] + \"T24:00:00.000Z\";\n        console.log(this.props.store.endDate);\n        this.props.store.date = \"Custom\";\n      }\n    }\n  }\n\n  render() {\n    return __jsx(DatePicker, {\n      selected: this.state.date,\n      onChange: this.handleChange\n    });\n  }\n\n}, _temp)) || _class) || _class);\nexport { Example as default };","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Menu/Datepicker.js"],"names":["React","DatePicker","inject","observer","reaction","Example","Component","constructor","props","handleChange","date","setState","console","log","state","Date","componentWillMount","componentDidMount","dateReaction","store","startDate","notifications","start","endDate","componentDidUpdate","prevProps","set","firstDate","toISOString","multiDate","split","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,OAAO,4CAAP;AACA,OAAO,6BAAP;AACA,SAASC,QAAT,QAAyB,MAAzB;IAIqBC,O,WAFpBH,MAAM,CAAC,CAAC,OAAD,CAAD,C,gBACNC,Q,mBADD,MAEqBE,OAFrB,SAEqCL,KAAK,CAACM,SAF3C,CAEqD;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,YAxBmB,GAwBHC,IAAD,IAAU;AACvB,WAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,cAAlB;AACD,KA3BkB;;AAEjB,SAAKI,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,IAAIK,IAAJ;AADK,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,GAAG,CAAE;;AAEvBC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL,GAAoBd,QAAQ,CAC1B,MAAM,KAAKI,KAAL,CAAWW,KAAX,CAAiBC,SADG,EAE1B,CAACC,aAAD,EAAgBjB,QAAhB,KAA6B;AAC3B,UAAI,KAAKI,KAAL,CAAWW,KAAX,CAAiBC,SAAjB,KAA+B,IAAnC,EAAyC;AACvC,YAAI,KAAKZ,KAAL,CAAWc,KAAX,IAAoB,IAAxB,EAA8B;AAC5B,eAAKX,QAAL,CAAc;AAAED,YAAAA,IAAI,EAAE,IAAIK,IAAJ,CAAS,KAAKP,KAAL,CAAWW,KAAX,CAAiBC,SAA1B;AAAR,WAAd;AACD,SAFD,MAEO;AACL,eAAKT,QAAL,CAAc;AAAED,YAAAA,IAAI,EAAE,IAAIK,IAAJ,CAAS,KAAKP,KAAL,CAAWW,KAAX,CAAiBI,OAA1B;AAAR,WAAd;AACD;AACF;AACF,KAVyB,CAA5B;AAYD;;AAODC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5Bb,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAI,KAAKL,KAAL,CAAWkB,GAAX,IAAkB,IAAtB,EAA4B;AAC1Bd,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,UAAI,KAAKL,KAAL,CAAWc,KAAX,IAAoB,IAAxB,EAA8B;AAC5BV,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,YAAIc,SAAS,GAAG,KAAKb,KAAL,CAAWJ,IAAX,CAAgBkB,WAAhB,EAAhB;AACA,YAAIC,SAAS,GAAGF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAhB;AACA,aAAKtB,KAAL,CAAWW,KAAX,CAAiBC,SAAjB,GAA6BS,SAAS,CAAC,CAAD,CAAT,GAAe,gBAA5C;AACA,aAAKrB,KAAL,CAAWW,KAAX,CAAiBT,IAAjB,GAAwB,QAAxB;AACD;;AACD,UAAI,KAAKF,KAAL,CAAWc,KAAX,IAAoB,KAAxB,EAA+B;AAC7BV,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,YAAIc,SAAS,GAAG,KAAKb,KAAL,CAAWJ,IAAX,CAAgBkB,WAAhB,EAAhB;AACA,YAAIC,SAAS,GAAGF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAhB;AACA,aAAKtB,KAAL,CAAWW,KAAX,CAAiBI,OAAjB,GAA2BM,SAAS,CAAC,CAAD,CAAT,GAAe,gBAA1C;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWW,KAAX,CAAiBI,OAA7B;AACA,aAAKf,KAAL,CAAWW,KAAX,CAAiBT,IAAjB,GAAwB,QAAxB;AACD;AACF;AACF;;AAEDqB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWJ,IAAjC;AAAuC,MAAA,QAAQ,EAAE,KAAKD;AAAtD,MADF;AAGD;;AAxDkD,C;SAAhCJ,O","sourcesContent":["import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { inject, observer } from \"mobx-react\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepicker-additional.css\";\nimport { reaction } from \"mobx\";\n\n@inject([\"store\"])\n@observer\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.dateReaction = reaction(\n      () => this.props.store.startDate,\n      (notifications, reaction) => {\n        if (this.props.store.startDate !== null) {\n          if (this.props.start == true) {\n            this.setState({ date: new Date(this.props.store.startDate) });\n          } else {\n            this.setState({ date: new Date(this.props.store.endDate) });\n          }\n        }\n      }\n    );\n  }\n\n  handleChange = (date) => {\n    this.setState({ date: date });\n    console.log(date, \"THIS IS DATE\");\n  };\n\n  componentDidUpdate(prevProps) {\n    console.log(\"just updated\");\n    if (this.props.set == true) {\n      console.log(\"not equal\");\n      if (this.props.start == true) {\n        console.log(\"was true\");\n        let firstDate = this.state.date.toISOString();\n        let multiDate = firstDate.split(\"T\");\n        this.props.store.startDate = multiDate[0] + \"T00:00:00.000Z\";\n        this.props.store.date = \"Custom\";\n      }\n      if (this.props.start == false) {\n        console.log(\"was false\");\n        let firstDate = this.state.date.toISOString();\n        let multiDate = firstDate.split(\"T\");\n        this.props.store.endDate = multiDate[0] + \"T24:00:00.000Z\";\n        console.log(this.props.store.endDate);\n        this.props.store.date = \"Custom\";\n      }\n    }\n  }\n\n  render() {\n    return (\n      <DatePicker selected={this.state.date} onChange={this.handleChange} />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}