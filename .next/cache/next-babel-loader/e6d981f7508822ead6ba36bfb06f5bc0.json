{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nconst confirmUserMutation = gql`\n  mutation confirmUser($token: String!) {\n    confirmUser(token: $token)\n  }\n`;\n\nclass ConfirmUser extends React.Component {\n  componentDidMount() {\n    this.props.confirm();\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmed: false\n    };\n    this.userConfirmed = this.userConfirmed.bind(this);\n  }\n\n  userConfirmed() {\n    this.setState({\n      confirmed: true\n    });\n    Router.push(\"/login\");\n  }\n\n  render() {\n    let token = this.props.token;\n    return __jsx(\"div\", null, this.state.confirmed == false ? __jsx(\"div\", null, __jsx(Mutation, {\n      mutation: confirmUserMutation,\n      variables: {\n        token\n      }\n    }, (confirmUser, {\n      data\n    }) => __jsx(ConfirmUser, {\n      confirm: confirmUser\n    }, __jsx(\"div\", null, \"thank you for confirming your email\"), __jsx(\"div\", null, data ? this.userConfirmed() : null)))) : __jsx(\"div\", null, \"now confirmed\"));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}