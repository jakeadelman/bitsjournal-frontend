{"ast":null,"code":"// export function formatDateMonthOnly(date) {\n//   var monthNames = [\n//     \"Jan\",\n//     \"Feb\",\n//     \"Mar\",\n//     \"Apr\",\n//     \"May\",\n//     \"Jun\",\n//     \"Jul\",\n//     \"Aug\",\n//     \"Sept\",\n//     \"Oct\",\n//     \"Nov\",\n//     \"Dec\",\n//   ];\n//   let utcDate = date;\n//   let theDate = new Date(utcDate);\n//   var day = theDate.getDate();\n//   var hours = addZeroBefore(theDate.getHours());\n//   var mins = addZeroBefore(theDate.getMinutes());\n//   var monthIndex = addZeroBefore(theDate.getMonth());\n//   var year = addZeroBefore(theDate.getFullYear());\n//   return (\n//     day + \"-\" + monthIndex.toString() + \"-\" + year + \" \" + hours + \":\" + mins\n//   );\n// }\nexport function formatDateMonthOnly(date) {\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n  var day = theDate.getDate();\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = theDate.getMonth(); // var monthIndex = addZeroBefore(theDate.getMonth());\n\n  var year = theDate.getFullYear();\n  return day + \" \" + monthNames[monthIndex] + \", \" + hours + \":\" + mins;\n}\nexport function formatDateShort(date) {\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n  var day = addZeroBefore(theDate.getDate());\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n  return monthIndex.toString() + \"/\" + day.toString();\n}\nexport function formatDateShortWithHour(date) {\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n  var day = addZeroBefore(theDate.getDate());\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n  return monthIndex.toString() + \"/\" + day.toString() + \" \" + hours.toString() + \":\" + mins.toString();\n}\n\nfunction addZeroBefore(n) {\n  return (n < 10 ? \"0\" : \"\") + n;\n}\n\nexport function getStateDate(input) {\n  if (input == \"Today\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateHrs(24);\n    console.log(\"is today\");\n    return dates;\n  }\n\n  if (input == \"Yesterday\") {\n    let dates = {};\n    dates.end = makeDateHrs(1);\n    dates.start = makeDateDays(2);\n    console.log(\"is yesterday\");\n    return dates;\n  }\n\n  if (input == \"This Week\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateDays(7);\n    console.log(\"is this week\");\n    return dates;\n  }\n\n  if (input == \"This Month\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateDays(30);\n    console.log(\"is this month\");\n    return dates;\n  }\n}\nexport function makeDateHrs(hrsBack) {\n  if (hrsBack == 0) {\n    let dt = new Date(new Date().toUTCString());\n    dt = dt.toISOString();\n    return dt;\n  } else {\n    let dt = new Date(new Date().toUTCString());\n    dt.setHours(dt.getHours() - hrsBack);\n    dt = dt.toISOString();\n    return dt;\n  }\n}\nexport function makeDateDays(num) {\n  let dt = new Date(new Date().toUTCString());\n  dt.setDate(dt.getDate() - num);\n  dt = dt.toISOString();\n  console.log(\"getting days back\");\n  return dt;\n}\nexport function calcCommission(price, side, qty, leavesQty, orderType) {\n  let realQty = qty - leavesQty;\n  let commission;\n\n  if (orderType == \"Market\") {\n    commission = realQty * 0.0075 / price;\n    commission = commission * -1;\n  }\n\n  if (orderType.includes(\"Stop\")) {\n    commission = realQty * 0.0075 / price;\n    commission = commission * -1;\n  }\n\n  if (orderType == \"Limit\") {\n    commission = realQty * 0.0025 / price;\n  }\n\n  return commission.toFixed(5);\n}","map":{"version":3,"sources":["/Users/manx/projects-2/bitsjournal/frontend/components/Helpers/Functions.js"],"names":["formatDateMonthOnly","date","monthNames","utcDate","theDate","Date","day","getDate","hours","addZeroBefore","getHours","mins","getMinutes","monthIndex","getMonth","year","getFullYear","formatDateShort","toString","formatDateShortWithHour","n","getStateDate","input","dates","end","makeDateHrs","start","console","log","makeDateDays","hrsBack","dt","toUTCString","toISOString","setHours","num","setDate","calcCommission","price","side","qty","leavesQty","orderType","realQty","commission","includes","toFixed"],"mappings":"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","sourcesContent":["// export function formatDateMonthOnly(date) {\n//   var monthNames = [\n//     \"Jan\",\n//     \"Feb\",\n//     \"Mar\",\n//     \"Apr\",\n//     \"May\",\n//     \"Jun\",\n//     \"Jul\",\n//     \"Aug\",\n//     \"Sept\",\n//     \"Oct\",\n//     \"Nov\",\n//     \"Dec\",\n//   ];\n//   let utcDate = date;\n//   let theDate = new Date(utcDate);\n\n//   var day = theDate.getDate();\n//   var hours = addZeroBefore(theDate.getHours());\n//   var mins = addZeroBefore(theDate.getMinutes());\n//   var monthIndex = addZeroBefore(theDate.getMonth());\n//   var year = addZeroBefore(theDate.getFullYear());\n\n//   return (\n//     day + \"-\" + monthIndex.toString() + \"-\" + year + \" \" + hours + \":\" + mins\n//   );\n// }\nexport function formatDateMonthOnly(date) {\n  var monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n\n  var day = theDate.getDate();\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = theDate.getMonth();\n  // var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n\n  return day + \" \" + monthNames[monthIndex] + \", \" + hours + \":\" + mins;\n}\n\nexport function formatDateShort(date) {\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n\n  var day = addZeroBefore(theDate.getDate());\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n\n  return monthIndex.toString() + \"/\" + day.toString();\n}\nexport function formatDateShortWithHour(date) {\n  let utcDate = date;\n  let theDate = new Date(utcDate);\n\n  var day = addZeroBefore(theDate.getDate());\n  var hours = addZeroBefore(theDate.getHours());\n  var mins = addZeroBefore(theDate.getMinutes());\n  var monthIndex = addZeroBefore(theDate.getMonth());\n  var year = theDate.getFullYear();\n\n  return (\n    monthIndex.toString() +\n    \"/\" +\n    day.toString() +\n    \" \" +\n    hours.toString() +\n    \":\" +\n    mins.toString()\n  );\n}\n\nfunction addZeroBefore(n) {\n  return (n < 10 ? \"0\" : \"\") + n;\n}\n\nexport function getStateDate(input) {\n  if (input == \"Today\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateHrs(24);\n    console.log(\"is today\");\n    return dates;\n  }\n  if (input == \"Yesterday\") {\n    let dates = {};\n    dates.end = makeDateHrs(1);\n    dates.start = makeDateDays(2);\n    console.log(\"is yesterday\");\n    return dates;\n  }\n  if (input == \"This Week\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateDays(7);\n    console.log(\"is this week\");\n    return dates;\n  }\n  if (input == \"This Month\") {\n    let dates = {};\n    dates.end = makeDateHrs(0);\n    dates.start = makeDateDays(30);\n    console.log(\"is this month\");\n    return dates;\n  }\n}\nexport function makeDateHrs(hrsBack) {\n  if (hrsBack == 0) {\n    let dt = new Date(new Date().toUTCString());\n    dt = dt.toISOString();\n    return dt;\n  } else {\n    let dt = new Date(new Date().toUTCString());\n    dt.setHours(dt.getHours() - hrsBack);\n    dt = dt.toISOString();\n    return dt;\n  }\n}\nexport function makeDateDays(num) {\n  let dt = new Date(new Date().toUTCString());\n  dt.setDate(dt.getDate() - num);\n  dt = dt.toISOString();\n  console.log(\"getting days back\");\n  return dt;\n}\n\nexport function calcCommission(price, side, qty, leavesQty, orderType) {\n  let realQty = qty - leavesQty;\n  let commission;\n  if (orderType == \"Market\") {\n    commission = (realQty * 0.0075) / price;\n    commission = commission * -1;\n  }\n  if (orderType.includes(\"Stop\")) {\n    commission = (realQty * 0.0075) / price;\n    commission = commission * -1;\n  }\n  if (orderType == \"Limit\") {\n    commission = (realQty * 0.0025) / price;\n  }\n  return commission.toFixed(5);\n}\n"]},"metadata":{},"sourceType":"module"}