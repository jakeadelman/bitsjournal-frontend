{"ast":null,"code":"var _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { action, observable } from \"mobx\";\nimport { useStaticRendering, observer } from \"mobx-react\";\nimport { create, persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport { getStateDate, makeDateHrs, makeDateDays } from \"../components/Helpers/Functions\";\nconst isServer = !false;\nuseStaticRendering(isServer);\nexport let Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"lastUpdate\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"light\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"isAuth\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"startDate\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"endDate\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"symbol\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"date\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"pnl\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"globalHash\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"tempNotes\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"tempTags\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"hasTempTags\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"singleTrade\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"hasSingleTrade\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"isSingleNotes\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"changeDate\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"addPnl\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"resetPnl\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"pushGlobalHash\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"addTempNote\", _descriptor20, this);\n\n    _initializerDefineProperty(this, \"clearTempNotes\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"addTempTag\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"clearTempTags\", _descriptor23, this);\n\n    _initializerDefineProperty(this, \"changeHasTempTags\", _descriptor24, this);\n\n    _initializerDefineProperty(this, \"resetHasTempTags\", _descriptor25, this);\n\n    _initializerDefineProperty(this, \"setSymbol\", _descriptor26, this);\n\n    _initializerDefineProperty(this, \"resetPnl\", _descriptor27, this);\n\n    _initializerDefineProperty(this, \"setSingleTrade\", _descriptor28, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"lastUpdate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"light\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"isAuth\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"startDate\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"endDate\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"symbol\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"XBTUSD\";\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"date\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"Today\";\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"pnl\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"globalHash\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"tempNotes\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"tempTags\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"hasTempTags\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"singleTrade\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"hasSingleTrade\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"isSingleNotes\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"changeDate\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return newDate => {\n      let dates = getStateDate(newDate);\n      this.date = newDate;\n      this.startDate = dates.start;\n      this.endDate = dates.end;\n    };\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"addPnl\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return pnl => {\n      this.pnl += pnl;\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"resetPnl\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.pnl = 0;\n    };\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"pushGlobalHash\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return hash => {\n      this.globalHash.push(hash);\n    };\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"addTempNote\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (time, note) => {\n      if (this.tempNotes[0] == undefined) {\n        let newNote = {};\n        newNote[\"note\"] = note;\n        newNote[\"time\"] = time;\n        this.tempNotes.push(newNote);\n      } else {\n        let alreadyPresentNote = false;\n\n        for (let i = 0; i < this.tempNotes.length; i++) {\n          if (this.tempNotes[i].time == time) {\n            this.tempNotes[i].note = note;\n            alreadyPresentNote = true;\n          }\n\n          if (i == this.tempNotes.length - 1 && alreadyPresentNote == false) {\n            let newNote = {};\n            newNote[\"note\"] = note;\n            newNote[\"time\"] = time;\n            this.tempNotes.push(newNote);\n          }\n        }\n      }\n    };\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"clearTempNotes\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.tempNotes = [];\n    };\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"addTempTag\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (time, tag) => {\n      let newTag = {};\n      newTag[\"tag\"] = tag;\n      newTag[\"time\"] = time;\n      this.tempTags.push(newTag);\n      this.changeHasTempTags();\n    };\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"clearTempTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.tempTags = [];\n    };\n  }\n}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"changeHasTempTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.hasTempTags = true;\n    };\n  }\n}), _descriptor25 = _applyDecoratedDescriptor(_class.prototype, \"resetHasTempTags\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.hasTempTags = false;\n    };\n  }\n}), _descriptor26 = _applyDecoratedDescriptor(_class.prototype, \"setSymbol\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return newSymbol => {\n      this.symbol = newSymbol;\n    };\n  }\n}), _descriptor27 = _applyDecoratedDescriptor(_class.prototype, \"resetPnl\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.pnl = 0;\n    };\n  }\n}), _descriptor28 = _applyDecoratedDescriptor(_class.prototype, \"setSingleTrade\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return dat => {\n      this.singleTrade = dat;\n    };\n  }\n})), _class);\nlet store = null;\nexport const hydrate = create();\nexport const StoreContext = createContext(new Store());\nexport function initializeStore(initialData) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  hydrate(\"store\", store).then(() => {\n    console.log(\"someStore has been hydrated\");\n  });\n  return store;\n}","map":null,"metadata":{},"sourceType":"module"}