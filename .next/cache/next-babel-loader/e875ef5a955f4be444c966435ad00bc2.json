{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation confirmUser($token: String!) {\\n    confirmUser(token: $token)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nvar confirmUserMutation = gql(_templateObject());\n\nvar ConfirmUser = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConfirmUser, _React$Component);\n\n  var _super = _createSuper(ConfirmUser);\n\n  function ConfirmUser() {\n    _classCallCheck(this, ConfirmUser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ConfirmUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.confirm();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return ConfirmUser;\n}(React.Component);\n\nvar _default = /*#__PURE__*/function (_React$Component2) {\n  _inherits(_default, _React$Component2);\n\n  var _super2 = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super2.call(this, props);\n    _this.state = {\n      confirmed: false\n    };\n    _this.userConfirmed = _this.userConfirmed.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"userConfirmed\",\n    value: function userConfirmed() {\n      this.setState({\n        confirmed: true\n      });\n      Router.push(\"/login\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var token = this.props.token;\n      return __jsx(\"div\", null, this.state.confirmed == false ? __jsx(\"div\", null, __jsx(Mutation, {\n        mutation: confirmUserMutation,\n        variables: {\n          token: token\n        }\n      }, function (confirmUser, _ref) {\n        var data = _ref.data;\n        return __jsx(ConfirmUser, {\n          confirm: confirmUser\n        }, __jsx(\"div\", null, \"thank you for confirming your email\"), __jsx(\"div\", null, data ? _this2.userConfirmed() : null));\n      })) : __jsx(\"div\", null, \"now confirmed\"));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}